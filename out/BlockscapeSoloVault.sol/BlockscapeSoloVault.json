{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotEnoughRPLStake",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vali",
          "type": "bytes"
        }
      ],
      "name": "ValidatorAlreadySet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "ETHLimitChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_availRPL",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_requiredRPL",
          "type": "uint256"
        }
      ],
      "name": "RPLStakeRequired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "RocketPoolNodeAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_stakedETH",
          "type": "uint256"
        }
      ],
      "name": "UserRequestedWithdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "changeETHLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeSoloVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositSoloVault",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableRPLStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEthLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "getMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakedETH",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "institution",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "institutionName",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "institutionVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct BlockscapeSoloVault.Metadata",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReqRPLStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasNodeEnoughRPLStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isVaultOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openSoloVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBlockscapeRocketPoolNode",
          "type": "address"
        }
      ],
      "name": "setBlockscapeRocketPoolNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_vali",
          "type": "bytes"
        }
      ],
      "name": "updateValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "userRequestWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "name": "viewUserRequestWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x600680546001600160a01b03191673f6132f532abc3902ea2dcae7f8d7fccdf7ba49821790556801158e460913d0000060075567de0b6b3a764000006008556009805460ff191690556001600a556f636f6e74726163742e6164647265737360801b60a090815270726f636b65744e6f64655374616b696e6760781b60b0526021608081905260c1604081905291206321f8a72160e01b90915260c552731d8f8f00cfa6758d7be78336684788fb0ee0fa466321f8a72160e5602060405180830381865afa158015620000d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fc9190620001d5565b600b80546001600160a01b03929092166001600160a01b03199283168117909155600c80549092161790553480156200013457600080fd5b506040518060a00160405280606d815260200162003afe606d91396200015a8162000171565b5060016004556200016b3362000183565b62000378565b60026200017f8282620002ac565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620001e857600080fd5b81516001600160a01b03811681146200020057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023257607f821691505b6020821081036200025357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002a757600081815260208120601f850160051c81016020861015620002825750805b601f850160051c820191505b81811015620002a3578281556001016200028e565b5050505b505050565b81516001600160401b03811115620002c857620002c862000207565b620002e081620002d984546200021d565b8462000259565b602080601f831160018114620003185760008415620002ff5750858301515b600019600386901b1c1916600185901b178555620002a3565b600085815260208120601f198616915b82811015620003495788860151825594840194600190910190840162000328565b5085821015620003685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61377680620003886000396000f3fe60806040526004361061024e5760003560e01c80638d8b7ca911610138578063ccae8a8d116100b0578063f242432a1161007f578063f6b21af211610064578063f6b21af2146106e9578063f6b76685146106fe578063f9d7afd71461071e57600080fd5b8063f242432a146106a9578063f2fde38b146106c957600080fd5b8063ccae8a8d1461061e578063e8a3d48514610626578063e985e9c51461063b578063ec36d35e1461069157600080fd5b8063a22cb46511610107578063b1251026116100ec578063b1251026146105b1578063b6ac642a146105d1578063bd85b039146105f157600080fd5b8063a22cb46514610563578063a574cea41461058357600080fd5b80638d8b7ca9146104b05780638da5cb5b146104d057806395d89b41146105055780639fe8d3aa1461054e57600080fd5b8063354228be116101cb57806366f9fa3a1161019a5780636ea5ba1a1161017f5780636ea5ba1a1461045b578063715018a61461047b5780638776d1d71461049057600080fd5b806366f9fa3a146104315780636ba367a31461044657600080fd5b8063354228be146103ab5780634e1273f4146103c05780634f558e79146103ed57806363b613f21461041c57600080fd5b80630e89341c1161022257806318160ddd1161020757806318160ddd146103545780632e1a7d4d146103695780632eb2c2d61461038b57600080fd5b80630e89341c1461032157806312065fe01461034157600080fd5b8062fdd58e1461025357806301ffc9a71461028657806302943854146102b657806306fdde03146102cb575b600080fd5b34801561025f57600080fd5b5061027361026e366004612a92565b610733565b6040519081526020015b60405180910390f35b34801561029257600080fd5b506102a66102a1366004612aea565b610813565b604051901515815260200161027d565b3480156102c257600080fd5b506102736108f6565b3480156102d757600080fd5b506103146040518060400160405280601581526020017f426c6f636b736361706520536f6c6f205661756c74000000000000000000000081525081565b60405161027d9190612b7c565b34801561032d57600080fd5b5061031461033c366004612b8f565b610a50565b34801561034d57600080fd5b5047610273565b34801561036057600080fd5b50610273610a81565b34801561037557600080fd5b50610389610384366004612b8f565b610b99565b005b34801561039757600080fd5b506103896103a6366004612d49565b610bec565b3480156103b757600080fd5b50600854610273565b3480156103cc57600080fd5b506103e06103db366004612df3565b610cb5565b60405161027d9190612ef9565b3480156103f957600080fd5b506102a6610408366004612b8f565b600090815260036020526040902054151590565b34801561042857600080fd5b50610389610e0d565b34801561043d57600080fd5b506102a6610e1c565b34801561045257600080fd5b50600a54610273565b34801561046757600080fd5b50610273610476366004612b8f565b610f87565b34801561048757600080fd5b50610389611003565b34801561049c57600080fd5b506102736104ab366004612b8f565b611017565b3480156104bc57600080fd5b506103896104cb366004612f0c565b6110a3565b3480156104dc57600080fd5b5060055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161027d565b34801561051157600080fd5b506103146040518060400160405280600381526020017f425356000000000000000000000000000000000000000000000000000000000081525081565b34801561055a57600080fd5b5061027361122b565b34801561056f57600080fd5b5061038961057e366004612f49565b6112c5565b34801561058f57600080fd5b506105a361059e366004612b8f565b6112d0565b60405161027d929190612f85565b3480156105bd57600080fd5b506103896105cc366004612b8f565b6113f3565b3480156105dd57600080fd5b506103896105ec366004612b8f565b611437565b3480156105fd57600080fd5b5061027361060c366004612b8f565b60009081526003602052604090205490565b610389611444565b34801561063257600080fd5b506103146114fc565b34801561064757600080fd5b506102a6610656366004612fd3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561069d57600080fd5b5060095460ff166102a6565b3480156106b557600080fd5b506103896106c4366004613006565b61151c565b3480156106d557600080fd5b506103896106e436600461306b565b6115de565b3480156106f557600080fd5b50610389611695565b34801561070a57600080fd5b5061038961071936600461306b565b6116b5565b34801561072a57600080fd5b50610389611730565b600073ffffffffffffffffffffffffffffffffffffffff83166107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806108a657507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061080d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461080d565b600c546006546040517f90f7ff4c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600092839216906390f7ff4c90602401602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190613086565b600c546006546040517f03fa87b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529293506000929116906303fa87b490602401602060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c9190613086565b905081600003610a3f5760009250505090565b610a4982826130ce565b9250505090565b6060610a5b8261178a565b604051602001610a6b9190613109565b6040516020818303038152906040529050919050565b60008060015b3073ffffffffffffffffffffffffffffffffffffffff16636ba367a36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190613086565b8111610b93576040517fbd85b03900000000000000000000000000000000000000000000000000000000815260048101829052309063bd85b03990602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190613086565b610b7f90836131e7565b915080610b8b816131fa565b915050610a87565b50919050565b610ba1611848565b60055460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f19350505050158015610be8573d6000803e3d6000fd5b5050565b73ffffffffffffffffffffffffffffffffffffffff8516331480610c155750610c158533610656565b610ca1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016107d4565b610cae85858585856118c9565b5050505050565b60608151835114610d48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016107d4565b6000835167ffffffffffffffff811115610d6457610d64612ba8565b604051908082528060200260200182016040528015610d8d578160200160208202803683370190505b50905060005b8451811015610e0557610dd8858281518110610db157610db1613232565b6020026020010151858381518110610dcb57610dcb613232565b6020026020010151610733565b828281518110610dea57610dea613232565b6020908102919091010152610dfe816131fa565b9050610d93565b509392505050565b610e15611848565b6000600955565b600c546006546040517f90f7ff4c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600092839216906390f7ff4c90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190613086565b905080600003610ec857600091505090565b600c546006546040517f9961cee400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526000929190911690639961cee490602401602060405180830381865afa158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f639190613086565b90506000610f6f6108f6565b90506000610f7d8284613261565b1015935050505090565b600080610f9383611017565b90506001610fa13385610733565b1061080d576000838152600d60209081526040918290205482518681523392810192909252818301849052606082015290517f57e8bc4c74baca16ab16c5cc83fa0bc416b230ea2a49969e56a6fe1b5ea5a8639181900360800190a192915050565b61100b611848565b6110156000611c11565b565b60075460009060016110293385610733565b1061080d5760006301e1338060075461104291906130ce565b6000858152600d6020526040812060010154919250906110629042613261565b90506301d52bd0808210611080576706f05b59d3b20000935061109a565b61108a8284613274565b6007546110979190613261565b93505b50505092915050565b6110ab611848565b61115f60405180602001604052806000815250600e600085815260200190815260200160002080546110dc906132b1565b80601f0160208091040260200160405190810160405280929190818152602001828054611108906132b1565b80156111555780601f1061112a57610100808354040283529160200191611155565b820191906000526020600020905b81548152906001019060200180831161113857829003601f168201915b5050505050611c88565b6111a5576000828152600e60205260409081902090517f47b41d480000000000000000000000000000000000000000000000000000000081526107d491906004016132fe565b6000828152600e602052604090206111bd82826133ed565b506111c6610e1c565b156111d357610be8611730565b60006111dd61122b565b905060006111e96108f6565b60408051848152602081018390529192507f6cac971587f3485cf88026d10806eb012734ef89e176a8317db787673df0bc86910160405180910390a150505050565b600c546006546040517f9961cee400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015260009283921690639961cee490602401602060405180830381865afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d9190613086565b610be8338383611ce1565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000828152600d60209081526040808320600e835292819020815160a08101835284548152600185015493810193909352600284015460ff9081161515928401929092526003840154606084810191909152600490940154909116151560808301528054819061136a906132b1565b80601f0160208091040260200160405190810160405280929190818152602001828054611396906132b1565b80156113e35780601f106113b8576101008083540402835291602001916113e3565b820191906000526020600020905b8154815290600101906020018083116113c657829003601f168201915b5050505050905091509150915091565b6113fb611848565b60088190556040518181527ff5ef0716d925ac1ef70d8b610f013c7fd7cd03f9120fb486f0c4f18b4ef6f5c5906020015b60405180910390a150565b61143f611848565b600755565b61144c611e34565b60085460095461145b57600080fd5b80341461146757600080fd5b5060085434146114d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f496e73756666696369656e74204554480000000000000000000000000000000060448201526064016107d4565b6114df34600a54611ea7565b600a805460010190556114f26000600955565b6110156001600455565b60606040518060800160405280605381526020016136ee60539139905090565b73ffffffffffffffffffffffffffffffffffffffff851633148061154557506115458533610656565b6115d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016107d4565b610cae8585858585611f77565b6115e6611848565b73ffffffffffffffffffffffffffffffffffffffff8116611689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107d4565b61169281611c11565b50565b61169d611848565b600954156116aa57600080fd5b611015600854610b99565b6116bd611848565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f234e4926e7311948b723292a80f6b0aa228047bf0ef59c361707c3e91e0e33a29060200161142c565b611738611848565b611740610e1c565b611776576040517fc7d4071900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009541561178357600080fd5b6001600955565b60606000611797836121c3565b600101905060008167ffffffffffffffff8111156117b7576117b7612ba8565b6040519080825280601f01601f1916602001820160405280156117e1576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846117eb57509392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314611015576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d4565b815183511461195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff84166119fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016107d4565b33611a0c8187878787876122a5565b60005b8451811015611b7c576000858281518110611a2c57611a2c613232565b602002602001015190506000858381518110611a4a57611a4a613232565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015611b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016107d4565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b16825281208054849290611b619084906131e7565b9250508190555050505080611b75906131fa565b9050611a0f565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611bf3929190613507565b60405180910390a4611c09818787878787612470565b505050505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081604051602001611c9b9190613535565b6040516020818303038152906040528051906020012083604051602001611cc29190613535565b6040516020818303038152906040528051906020012014905092915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600260045403611ea0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107d4565b6002600455565b6040805160a08101825260008183018181526060830182815260808401838152878552426020808701918252888652600d8152878620875181559151600183015593516002820180549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00928316179055925160038201559051600490910180549115159190921617905583518082018552828152858352600e9091529290209091611f5590826133ed565b50611f7233836001604051806020016040528060008152506126fa565b505050565b73ffffffffffffffffffffffffffffffffffffffff841661201a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016107d4565b33600061202685612871565b9050600061203385612871565b90506120438389898585896122a5565b60008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015612101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016107d4565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a1682528120805488929061214b9084906131e7565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46121b8848a8a8a8a8a6128bc565b505050505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061220c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612238576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061225657662386f26fc10000830492506010015b6305f5e100831061226e576305f5e100830492506008015b612710831061228257612710830492506004015b60648310612294576064830492506002015b600a831061080d5760010192915050565b73ffffffffffffffffffffffffffffffffffffffff85166123395760005b8351811015612337578281815181106122de576122de613232565b6020026020010151600360008684815181106122fc576122fc613232565b60200260200101518152602001908152602001600020600082825461232191906131e7565b909155506123309050816131fa565b90506122c3565b505b73ffffffffffffffffffffffffffffffffffffffff8416611c095760005b835181101561246757600084828151811061237457612374613232565b60200260200101519050600084838151811061239257612392613232565b6020026020010151905060006003600084815260200190815260200160002054905081811015612444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016107d4565b60009283526003602052604090922091039055612460816131fa565b9050612357565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611c09576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906124e79089908990889088908890600401613551565b6020604051808303816000875af1925050508015612540575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261253d918101906135bc565b60015b6126295761254c6135d9565b806308c379a00361259f57506125606135f5565b8061256b57506125a1565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d49190612b7c565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016107d4565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014612467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff841661279d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016107d4565b3360006127a985612871565b905060006127b685612871565b90506127c7836000898585896122a5565b60008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b168452909152812080548792906128049084906131e7565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612467836000898989896128bc565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106128ab576128ab613232565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611c09576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190612933908990899088908890889060040161369d565b6020604051808303816000875af192505050801561298c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612989918101906135bc565b60015b6129985761254c6135d9565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014612467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016107d4565b803573ffffffffffffffffffffffffffffffffffffffff81168114612a8d57600080fd5b919050565b60008060408385031215612aa557600080fd5b612aae83612a69565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461169257600080fd5b600060208284031215612afc57600080fd5b8135612b0781612abc565b9392505050565b60005b83811015612b29578181015183820152602001612b11565b50506000910152565b60008151808452612b4a816020860160208601612b0e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612b076020830184612b32565b600060208284031215612ba157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715612c1b57612c1b612ba8565b6040525050565b600067ffffffffffffffff821115612c3c57612c3c612ba8565b5060051b60200190565b600082601f830112612c5757600080fd5b81356020612c6482612c22565b604051612c718282612bd7565b83815260059390931b8501820192828101915086841115612c9157600080fd5b8286015b84811015612cac5780358352918301918301612c95565b509695505050505050565b600082601f830112612cc857600080fd5b813567ffffffffffffffff811115612ce257612ce2612ba8565b604051612d1760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182612bd7565b818152846020838601011115612d2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612d6157600080fd5b612d6a86612a69565b9450612d7860208701612a69565b9350604086013567ffffffffffffffff80821115612d9557600080fd5b612da189838a01612c46565b94506060880135915080821115612db757600080fd5b612dc389838a01612c46565b93506080880135915080821115612dd957600080fd5b50612de688828901612cb7565b9150509295509295909350565b60008060408385031215612e0657600080fd5b823567ffffffffffffffff80821115612e1e57600080fd5b818501915085601f830112612e3257600080fd5b81356020612e3f82612c22565b604051612e4c8282612bd7565b83815260059390931b8501820192828101915089841115612e6c57600080fd5b948201945b83861015612e9157612e8286612a69565b82529482019490820190612e71565b96505086013592505080821115612ea757600080fd5b50612eb485828601612c46565b9150509250929050565b600081518084526020808501945080840160005b83811015612eee57815187529582019590820190600101612ed2565b509495945050505050565b602081526000612b076020830184612ebe565b60008060408385031215612f1f57600080fd5b82359150602083013567ffffffffffffffff811115612f3d57600080fd5b612eb485828601612cb7565b60008060408385031215612f5c57600080fd5b612f6583612a69565b915060208301358015158114612f7a57600080fd5b809150509250929050565b82518152602083015160208201526040830151151560408201526060830151606082015260808301511515608082015260c060a08201526000612fcb60c0830184612b32565b949350505050565b60008060408385031215612fe657600080fd5b612fef83612a69565b9150612ffd60208401612a69565b90509250929050565b600080600080600060a0868803121561301e57600080fd5b61302786612a69565b945061303560208701612a69565b93506040860135925060608601359150608086013567ffffffffffffffff81111561305f57600080fd5b612de688828901612cb7565b60006020828403121561307d57600080fd5b612b0782612a69565b60006020828403121561309857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082613104577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f81527f69706e732f6b3531717a6935757175356469766b66613276787532693731796860208201527f6a336b36726d36626776676e64347130306834663830636234696d736739757960408201527f32396c2f000000000000000000000000000000000000000000000000000000006060820152600082516131b3816064850160208701612b0e565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000006064939091019283015250606901919050565b8082018082111561080d5761080d61309f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361322b5761322b61309f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8181038181111561080d5761080d61309f565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132ac576132ac61309f565b500290565b600181811c908216806132c557607f821691505b602082108103610b93577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000602080835260008454613312816132b1565b80848701526040600180841660008114613333576001811461336b57613399565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550613399565b896000528660002060005b858110156133915781548b8201860152908301908801613376565b8a0184019650505b509398975050505050505050565b601f821115611f7257600081815260208120601f850160051c810160208610156133ce5750805b601f850160051c820191505b81811015611c09578281556001016133da565b815167ffffffffffffffff81111561340757613407612ba8565b61341b8161341584546132b1565b846133a7565b602080601f83116001811461346e57600084156134385750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611c09565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156134bb5788860151825594840194600190910190840161349c565b50858210156134f757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061351a6040830185612ebe565b828103602084015261352c8185612ebe565b95945050505050565b60008251613547818460208701612b0e565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261358a60a0830186612ebe565b828103606084015261359c8186612ebe565b905082810360808401526135b08185612b32565b98975050505050505050565b6000602082840312156135ce57600080fd5b8151612b0781612abc565b600060033d11156135f25760046000803e5060005160e01c5b90565b600060443d10156136035790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561365157505050505090565b82850191508151818111156136695750505050505090565b843d87010160208285010111156136835750505050505090565b61369260208286010187612bd7565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526136e260a0830184612b32565b97965050505050505056fe68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f697066732f516d5052446a5367336964785445384254533337756d446d545a324c5a62337833344c5642514d79616a396e5679a26469706673582212206712978f2f1ddd70a6164de7269baa2729ef58513a167fa384389a9137249e3c64736f6c6343000810003368747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f69706e732f6b3531717a6935757175356469766b6661327678753269373179686a336b36726d36626776676e64347130306834663830636234696d736739757932396c2f7b69647d2e6a736f6e",
    "sourceMap": "1236:85:31:-:0;;;-1:-1:-1;;;;;;1236:85:31;1279:42;1236:85;;;1398:9;1372:35;;1486:8;1464:30;;1697:28;;;-1:-1:-1;;1697:28:31;;;-1:-1:-1;1853:19:31;;-1:-1:-1;;;2054:57:31;317:31:39;;;-1:-1:-1;;;364:12:39;357:41;2054:57:31;761:15200;2054:57;;;414:12:39;761:15200:31;2054:57;;;2044:68;;-1:-1:-1;;;2006:116:31;;;;583:25:39;968:42:31;2006:24;556:18:39;2006:116:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:159;;;-1:-1:-1;;;;;1963:159:31;;;;-1:-1:-1;;;;;;1963:159:31;;;;;;;;2188:107;;;;;;;;;3765:201;;;;;;;;;;1112:62:17;;;;;;;;;;;;;;;;;1154:13;1162:4;1154:7;:13::i;:::-;-1:-1:-1;1721:1:16;1826:7;:22;941:32:15;724:10:23;941:18:15;:32::i;:::-;761:15200:31;;8176:86:17;8242:4;:13;8249:6;8242:4;:13;:::i;:::-;;8176:86;:::o;2438:187:15:-;2530:6;;;-1:-1:-1;;;;;2546:17:15;;;-1:-1:-1;;;;;;2546:17:15;;;;;;;2578:40;;2530:6;;;2546:17;2530:6;;2578:40;;2511:16;;2578:40;2501:124;2438:187;:::o;619:290:39:-;689:6;742:2;730:9;721:7;717:23;713:32;710:52;;;758:1;755;748:12;710:52;784:16;;-1:-1:-1;;;;;829:31:39;;819:42;;809:70;;875:1;872;865:12;809:70;898:5;619:290;-1:-1:-1;;;619:290:39:o;914:127::-;975:10;970:3;966:20;963:1;956:31;1006:4;1003:1;996:15;1030:4;1027:1;1020:15;1046:380;1125:1;1121:12;;;;1168;;;1189:61;;1243:4;1235:6;1231:17;1221:27;;1189:61;1296:2;1288:6;1285:14;1265:18;1262:38;1259:161;;1342:10;1337:3;1333:20;1330:1;1323:31;1377:4;1374:1;1367:15;1405:4;1402:1;1395:15;1259:161;;1046:380;;;:::o;1557:545::-;1659:2;1654:3;1651:11;1648:448;;;1695:1;1720:5;1716:2;1709:17;1765:4;1761:2;1751:19;1835:2;1823:10;1819:19;1816:1;1812:27;1806:4;1802:38;1871:4;1859:10;1856:20;1853:47;;;-1:-1:-1;1894:4:39;1853:47;1949:2;1944:3;1940:12;1937:1;1933:20;1927:4;1923:31;1913:41;;2004:82;2022:2;2015:5;2012:13;2004:82;;;2067:17;;;2048:1;2037:13;2004:82;;;2008:3;;;1648:448;1557:545;;;:::o;2278:1352::-;2398:10;;-1:-1:-1;;;;;2420:30:39;;2417:56;;;2453:18;;:::i;:::-;2482:97;2572:6;2532:38;2564:4;2558:11;2532:38;:::i;:::-;2526:4;2482:97;:::i;:::-;2634:4;;2698:2;2687:14;;2715:1;2710:663;;;;3417:1;3434:6;3431:89;;;-1:-1:-1;3486:19:39;;;3480:26;3431:89;-1:-1:-1;;2235:1:39;2231:11;;;2227:24;2223:29;2213:40;2259:1;2255:11;;;2210:57;3533:81;;2680:944;;2710:663;1504:1;1497:14;;;1541:4;1528:18;;-1:-1:-1;;2746:20:39;;;2864:236;2878:7;2875:1;2872:14;2864:236;;;2967:19;;;2961:26;2946:42;;3059:27;;;;3027:1;3015:14;;;;2894:19;;2864:236;;;2868:3;3128:6;3119:7;3116:19;3113:201;;;3189:19;;;3183:26;-1:-1:-1;;3272:1:39;3268:14;;;3284:3;3264:24;3260:37;3256:42;3241:58;3226:74;;3113:201;-1:-1:-1;;;;;3360:1:39;3344:14;;;3340:22;3327:36;;-1:-1:-1;2278:1352:39:o;:::-;761:15200:31;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061024e5760003560e01c80638d8b7ca911610138578063ccae8a8d116100b0578063f242432a1161007f578063f6b21af211610064578063f6b21af2146106e9578063f6b76685146106fe578063f9d7afd71461071e57600080fd5b8063f242432a146106a9578063f2fde38b146106c957600080fd5b8063ccae8a8d1461061e578063e8a3d48514610626578063e985e9c51461063b578063ec36d35e1461069157600080fd5b8063a22cb46511610107578063b1251026116100ec578063b1251026146105b1578063b6ac642a146105d1578063bd85b039146105f157600080fd5b8063a22cb46514610563578063a574cea41461058357600080fd5b80638d8b7ca9146104b05780638da5cb5b146104d057806395d89b41146105055780639fe8d3aa1461054e57600080fd5b8063354228be116101cb57806366f9fa3a1161019a5780636ea5ba1a1161017f5780636ea5ba1a1461045b578063715018a61461047b5780638776d1d71461049057600080fd5b806366f9fa3a146104315780636ba367a31461044657600080fd5b8063354228be146103ab5780634e1273f4146103c05780634f558e79146103ed57806363b613f21461041c57600080fd5b80630e89341c1161022257806318160ddd1161020757806318160ddd146103545780632e1a7d4d146103695780632eb2c2d61461038b57600080fd5b80630e89341c1461032157806312065fe01461034157600080fd5b8062fdd58e1461025357806301ffc9a71461028657806302943854146102b657806306fdde03146102cb575b600080fd5b34801561025f57600080fd5b5061027361026e366004612a92565b610733565b6040519081526020015b60405180910390f35b34801561029257600080fd5b506102a66102a1366004612aea565b610813565b604051901515815260200161027d565b3480156102c257600080fd5b506102736108f6565b3480156102d757600080fd5b506103146040518060400160405280601581526020017f426c6f636b736361706520536f6c6f205661756c74000000000000000000000081525081565b60405161027d9190612b7c565b34801561032d57600080fd5b5061031461033c366004612b8f565b610a50565b34801561034d57600080fd5b5047610273565b34801561036057600080fd5b50610273610a81565b34801561037557600080fd5b50610389610384366004612b8f565b610b99565b005b34801561039757600080fd5b506103896103a6366004612d49565b610bec565b3480156103b757600080fd5b50600854610273565b3480156103cc57600080fd5b506103e06103db366004612df3565b610cb5565b60405161027d9190612ef9565b3480156103f957600080fd5b506102a6610408366004612b8f565b600090815260036020526040902054151590565b34801561042857600080fd5b50610389610e0d565b34801561043d57600080fd5b506102a6610e1c565b34801561045257600080fd5b50600a54610273565b34801561046757600080fd5b50610273610476366004612b8f565b610f87565b34801561048757600080fd5b50610389611003565b34801561049c57600080fd5b506102736104ab366004612b8f565b611017565b3480156104bc57600080fd5b506103896104cb366004612f0c565b6110a3565b3480156104dc57600080fd5b5060055460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161027d565b34801561051157600080fd5b506103146040518060400160405280600381526020017f425356000000000000000000000000000000000000000000000000000000000081525081565b34801561055a57600080fd5b5061027361122b565b34801561056f57600080fd5b5061038961057e366004612f49565b6112c5565b34801561058f57600080fd5b506105a361059e366004612b8f565b6112d0565b60405161027d929190612f85565b3480156105bd57600080fd5b506103896105cc366004612b8f565b6113f3565b3480156105dd57600080fd5b506103896105ec366004612b8f565b611437565b3480156105fd57600080fd5b5061027361060c366004612b8f565b60009081526003602052604090205490565b610389611444565b34801561063257600080fd5b506103146114fc565b34801561064757600080fd5b506102a6610656366004612fd3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561069d57600080fd5b5060095460ff166102a6565b3480156106b557600080fd5b506103896106c4366004613006565b61151c565b3480156106d557600080fd5b506103896106e436600461306b565b6115de565b3480156106f557600080fd5b50610389611695565b34801561070a57600080fd5b5061038961071936600461306b565b6116b5565b34801561072a57600080fd5b50610389611730565b600073ffffffffffffffffffffffffffffffffffffffff83166107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526020818152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806108a657507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061080d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083161461080d565b600c546006546040517f90f7ff4c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600092839216906390f7ff4c90602401602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190613086565b600c546006546040517f03fa87b400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529293506000929116906303fa87b490602401602060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c9190613086565b905081600003610a3f5760009250505090565b610a4982826130ce565b9250505090565b6060610a5b8261178a565b604051602001610a6b9190613109565b6040516020818303038152906040529050919050565b60008060015b3073ffffffffffffffffffffffffffffffffffffffff16636ba367a36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af69190613086565b8111610b93576040517fbd85b03900000000000000000000000000000000000000000000000000000000815260048101829052309063bd85b03990602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190613086565b610b7f90836131e7565b915080610b8b816131fa565b915050610a87565b50919050565b610ba1611848565b60055460405173ffffffffffffffffffffffffffffffffffffffff9091169082156108fc029083906000818181858888f19350505050158015610be8573d6000803e3d6000fd5b5050565b73ffffffffffffffffffffffffffffffffffffffff8516331480610c155750610c158533610656565b610ca1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016107d4565b610cae85858585856118c9565b5050505050565b60608151835114610d48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016107d4565b6000835167ffffffffffffffff811115610d6457610d64612ba8565b604051908082528060200260200182016040528015610d8d578160200160208202803683370190505b50905060005b8451811015610e0557610dd8858281518110610db157610db1613232565b6020026020010151858381518110610dcb57610dcb613232565b6020026020010151610733565b828281518110610dea57610dea613232565b6020908102919091010152610dfe816131fa565b9050610d93565b509392505050565b610e15611848565b6000600955565b600c546006546040517f90f7ff4c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152600092839216906390f7ff4c90602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190613086565b905080600003610ec857600091505090565b600c546006546040517f9961cee400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526000929190911690639961cee490602401602060405180830381865afa158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f639190613086565b90506000610f6f6108f6565b90506000610f7d8284613261565b1015935050505090565b600080610f9383611017565b90506001610fa13385610733565b1061080d576000838152600d60209081526040918290205482518681523392810192909252818301849052606082015290517f57e8bc4c74baca16ab16c5cc83fa0bc416b230ea2a49969e56a6fe1b5ea5a8639181900360800190a192915050565b61100b611848565b6110156000611c11565b565b60075460009060016110293385610733565b1061080d5760006301e1338060075461104291906130ce565b6000858152600d6020526040812060010154919250906110629042613261565b90506301d52bd0808210611080576706f05b59d3b20000935061109a565b61108a8284613274565b6007546110979190613261565b93505b50505092915050565b6110ab611848565b61115f60405180602001604052806000815250600e600085815260200190815260200160002080546110dc906132b1565b80601f0160208091040260200160405190810160405280929190818152602001828054611108906132b1565b80156111555780601f1061112a57610100808354040283529160200191611155565b820191906000526020600020905b81548152906001019060200180831161113857829003601f168201915b5050505050611c88565b6111a5576000828152600e60205260409081902090517f47b41d480000000000000000000000000000000000000000000000000000000081526107d491906004016132fe565b6000828152600e602052604090206111bd82826133ed565b506111c6610e1c565b156111d357610be8611730565b60006111dd61122b565b905060006111e96108f6565b60408051848152602081018390529192507f6cac971587f3485cf88026d10806eb012734ef89e176a8317db787673df0bc86910160405180910390a150505050565b600c546006546040517f9961cee400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015260009283921690639961cee490602401602060405180830381865afa1580156112a1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080d9190613086565b610be8338383611ce1565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526000828152600d60209081526040808320600e835292819020815160a08101835284548152600185015493810193909352600284015460ff9081161515928401929092526003840154606084810191909152600490940154909116151560808301528054819061136a906132b1565b80601f0160208091040260200160405190810160405280929190818152602001828054611396906132b1565b80156113e35780601f106113b8576101008083540402835291602001916113e3565b820191906000526020600020905b8154815290600101906020018083116113c657829003601f168201915b5050505050905091509150915091565b6113fb611848565b60088190556040518181527ff5ef0716d925ac1ef70d8b610f013c7fd7cd03f9120fb486f0c4f18b4ef6f5c5906020015b60405180910390a150565b61143f611848565b600755565b61144c611e34565b60085460095461145b57600080fd5b80341461146757600080fd5b5060085434146114d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f496e73756666696369656e74204554480000000000000000000000000000000060448201526064016107d4565b6114df34600a54611ea7565b600a805460010190556114f26000600955565b6110156001600455565b60606040518060800160405280605381526020016136ee60539139905090565b73ffffffffffffffffffffffffffffffffffffffff851633148061154557506115458533610656565b6115d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f76656400000000000000000000000000000000000060648201526084016107d4565b610cae8585858585611f77565b6115e6611848565b73ffffffffffffffffffffffffffffffffffffffff8116611689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107d4565b61169281611c11565b50565b61169d611848565b600954156116aa57600080fd5b611015600854610b99565b6116bd611848565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f234e4926e7311948b723292a80f6b0aa228047bf0ef59c361707c3e91e0e33a29060200161142c565b611738611848565b611740610e1c565b611776576040517fc7d4071900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009541561178357600080fd5b6001600955565b60606000611797836121c3565b600101905060008167ffffffffffffffff8111156117b7576117b7612ba8565b6040519080825280601f01601f1916602001820160405280156117e1576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846117eb57509392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314611015576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d4565b815183511461195a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff84166119fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016107d4565b33611a0c8187878787876122a5565b60005b8451811015611b7c576000858281518110611a2c57611a2c613232565b602002602001015190506000858381518110611a4a57611a4a613232565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015611b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016107d4565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b16825281208054849290611b619084906131e7565b9250508190555050505080611b75906131fa565b9050611a0f565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611bf3929190613507565b60405180910390a4611c09818787878787612470565b505050505050565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081604051602001611c9b9190613535565b6040516020818303038152906040528051906020012083604051602001611cc29190613535565b6040516020818303038152906040528051906020012014905092915050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600260045403611ea0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107d4565b6002600455565b6040805160a08101825260008183018181526060830182815260808401838152878552426020808701918252888652600d8152878620875181559151600183015593516002820180549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00928316179055925160038201559051600490910180549115159190921617905583518082018552828152858352600e9091529290209091611f5590826133ed565b50611f7233836001604051806020016040528060008152506126fa565b505050565b73ffffffffffffffffffffffffffffffffffffffff841661201a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016107d4565b33600061202685612871565b9050600061203385612871565b90506120438389898585896122a5565b60008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015612101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e736665720000000000000000000000000000000000000000000060648201526084016107d4565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a1682528120805488929061214b9084906131e7565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46121b8848a8a8a8a8a6128bc565b505050505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061220c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612238576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061225657662386f26fc10000830492506010015b6305f5e100831061226e576305f5e100830492506008015b612710831061228257612710830492506004015b60648310612294576064830492506002015b600a831061080d5760010192915050565b73ffffffffffffffffffffffffffffffffffffffff85166123395760005b8351811015612337578281815181106122de576122de613232565b6020026020010151600360008684815181106122fc576122fc613232565b60200260200101518152602001908152602001600020600082825461232191906131e7565b909155506123309050816131fa565b90506122c3565b505b73ffffffffffffffffffffffffffffffffffffffff8416611c095760005b835181101561246757600084828151811061237457612374613232565b60200260200101519050600084838151811061239257612392613232565b6020026020010151905060006003600084815260200190815260200160002054905081811015612444576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016107d4565b60009283526003602052604090922091039055612460816131fa565b9050612357565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611c09576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c81906124e79089908990889088908890600401613551565b6020604051808303816000875af1925050508015612540575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261253d918101906135bc565b60015b6126295761254c6135d9565b806308c379a00361259f57506125606135f5565b8061256b57506125a1565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d49190612b7c565b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016107d4565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014612467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016107d4565b73ffffffffffffffffffffffffffffffffffffffff841661279d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016107d4565b3360006127a985612871565b905060006127b685612871565b90506127c7836000898585896122a5565b60008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8b168452909152812080548792906128049084906131e7565b9091555050604080518781526020810187905273ffffffffffffffffffffffffffffffffffffffff808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612467836000898989896128bc565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106128ab576128ab613232565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15611c09576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190612933908990899088908890889060040161369d565b6020604051808303816000875af192505050801561298c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612989918101906135bc565b60015b6129985761254c6135d9565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014612467576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016107d4565b803573ffffffffffffffffffffffffffffffffffffffff81168114612a8d57600080fd5b919050565b60008060408385031215612aa557600080fd5b612aae83612a69565b946020939093013593505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461169257600080fd5b600060208284031215612afc57600080fd5b8135612b0781612abc565b9392505050565b60005b83811015612b29578181015183820152602001612b11565b50506000910152565b60008151808452612b4a816020860160208601612b0e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612b076020830184612b32565b600060208284031215612ba157600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715612c1b57612c1b612ba8565b6040525050565b600067ffffffffffffffff821115612c3c57612c3c612ba8565b5060051b60200190565b600082601f830112612c5757600080fd5b81356020612c6482612c22565b604051612c718282612bd7565b83815260059390931b8501820192828101915086841115612c9157600080fd5b8286015b84811015612cac5780358352918301918301612c95565b509695505050505050565b600082601f830112612cc857600080fd5b813567ffffffffffffffff811115612ce257612ce2612ba8565b604051612d1760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182612bd7565b818152846020838601011115612d2c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215612d6157600080fd5b612d6a86612a69565b9450612d7860208701612a69565b9350604086013567ffffffffffffffff80821115612d9557600080fd5b612da189838a01612c46565b94506060880135915080821115612db757600080fd5b612dc389838a01612c46565b93506080880135915080821115612dd957600080fd5b50612de688828901612cb7565b9150509295509295909350565b60008060408385031215612e0657600080fd5b823567ffffffffffffffff80821115612e1e57600080fd5b818501915085601f830112612e3257600080fd5b81356020612e3f82612c22565b604051612e4c8282612bd7565b83815260059390931b8501820192828101915089841115612e6c57600080fd5b948201945b83861015612e9157612e8286612a69565b82529482019490820190612e71565b96505086013592505080821115612ea757600080fd5b50612eb485828601612c46565b9150509250929050565b600081518084526020808501945080840160005b83811015612eee57815187529582019590820190600101612ed2565b509495945050505050565b602081526000612b076020830184612ebe565b60008060408385031215612f1f57600080fd5b82359150602083013567ffffffffffffffff811115612f3d57600080fd5b612eb485828601612cb7565b60008060408385031215612f5c57600080fd5b612f6583612a69565b915060208301358015158114612f7a57600080fd5b809150509250929050565b82518152602083015160208201526040830151151560408201526060830151606082015260808301511515608082015260c060a08201526000612fcb60c0830184612b32565b949350505050565b60008060408385031215612fe657600080fd5b612fef83612a69565b9150612ffd60208401612a69565b90509250929050565b600080600080600060a0868803121561301e57600080fd5b61302786612a69565b945061303560208701612a69565b93506040860135925060608601359150608086013567ffffffffffffffff81111561305f57600080fd5b612de688828901612cb7565b60006020828403121561307d57600080fd5b612b0782612a69565b60006020828403121561309857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082613104577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f81527f69706e732f6b3531717a6935757175356469766b66613276787532693731796860208201527f6a336b36726d36626776676e64347130306834663830636234696d736739757960408201527f32396c2f000000000000000000000000000000000000000000000000000000006060820152600082516131b3816064850160208701612b0e565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000006064939091019283015250606901919050565b8082018082111561080d5761080d61309f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361322b5761322b61309f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8181038181111561080d5761080d61309f565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132ac576132ac61309f565b500290565b600181811c908216806132c557607f821691505b602082108103610b93577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000602080835260008454613312816132b1565b80848701526040600180841660008114613333576001811461336b57613399565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550613399565b896000528660002060005b858110156133915781548b8201860152908301908801613376565b8a0184019650505b509398975050505050505050565b601f821115611f7257600081815260208120601f850160051c810160208610156133ce5750805b601f850160051c820191505b81811015611c09578281556001016133da565b815167ffffffffffffffff81111561340757613407612ba8565b61341b8161341584546132b1565b846133a7565b602080601f83116001811461346e57600084156134385750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611c09565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156134bb5788860151825594840194600190910190840161349c565b50858210156134f757878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061351a6040830185612ebe565b828103602084015261352c8185612ebe565b95945050505050565b60008251613547818460208701612b0e565b9190910192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261358a60a0830186612ebe565b828103606084015261359c8186612ebe565b905082810360808401526135b08185612b32565b98975050505050505050565b6000602082840312156135ce57600080fd5b8151612b0781612abc565b600060033d11156135f25760046000803e5060005160e01c5b90565b600060443d10156136035790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561365157505050505090565b82850191508151818111156136695750505050505090565b843d87010160208285010111156136835750505050505090565b61369260208286010187612bd7565b509095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a060808301526136e260a0830184612b32565b97965050505050505056fe68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f697066732f516d5052446a5367336964785445384254533337756d446d545a324c5a62337833344c5642514d79616a396e5679a26469706673582212206712978f2f1ddd70a6164de7269baa2729ef58513a167fa384389a9137249e3c64736f6c63430008100033",
    "sourceMap": "761:15200:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2190:227:17;;;;;;;;;;-1:-1:-1;2190:227:17;;;;;:::i;:::-;;:::i;:::-;;;620:25:39;;;608:2;593:18;2190:227:17;;;;;;;;1241:305;;;;;;;;;;-1:-1:-1;1241:305:17;;;;;:::i;:::-;;:::i;:::-;;;1253:14:39;;1246:22;1228:41;;1216:2;1201:18;1241:305:17;1088:187:39;10635:426:31;;;;;;;;;;;;;:::i;1048:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14368:328::-;;;;;;;;;;-1:-1:-1;14368:328:31;;;;;:::i;:::-;;:::i;13431:99::-;;;;;;;;;;-1:-1:-1;13502:21:31;13431:99;;13625:225;;;;;;;;;;;;;:::i;5001:103::-;;;;;;;;;;-1:-1:-1;5001:103:31;;;;;:::i;:::-;;:::i;:::-;;4069:426:17;;;;;;;;;;-1:-1:-1;4069:426:17;;;;;:::i;:::-;;:::i;9878:95:31:-;;;;;;;;;;-1:-1:-1;9955:11:31;;9878:95;;2574:508:17;;;;;;;;;;-1:-1:-1;2574:508:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;906:120:20:-;;;;;;;;;;-1:-1:-1;906:120:20;;;;;:::i;:::-;963:4;790:16;;;:12;:16;;;;;;-1:-1:-1;;;906:120:20;5264:125:31;;;;;;;;;;;;;:::i;11133:475::-;;;;;;;;;;;;;:::i;13234:83::-;;;;;;;;;;-1:-1:-1;13303:7:31;;13234:83;;7913:469;;;;;;;;;;-1:-1:-1;7913:469:31;;;;;:::i;:::-;;:::i;1836:101:15:-;;;;;;;;;;;;;:::i;11906:739:31:-;;;;;;;;;;-1:-1:-1;11906:739:31;;;;;:::i;:::-;;:::i;7168:559::-;;;;;;;;;;-1:-1:-1;7168:559:31;;;;;:::i;:::-;;:::i;1206:85:15:-;;;;;;;;;;-1:-1:-1;1278:6:15;;1206:85;;1278:6;;;;7724:74:39;;7712:2;7697:18;1206:85:15;7578:226:39;1140:37:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10199:213;;;;;;;;;;;;;:::i;3150:153:17:-;;;;;;;;;;-1:-1:-1;3150:153:17;;;;;:::i;:::-;;:::i;12836:280:31:-;;;;;;;;;;-1:-1:-1;12836:280:31;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;8622:143::-;;;;;;;;;;-1:-1:-1;8622:143:31;;;;;:::i;:::-;;:::i;8893:102::-;;;;;;;;;;-1:-1:-1;8893:102:31;;;;;:::i;:::-;;:::i;702:111:20:-;;;;;;;;;;-1:-1:-1;702:111:20;;;;;:::i;:::-;764:7;790:16;;;:12;:16;;;;;;;702:111;5519:1050:31;;;:::i;14046:182::-;;;;;;;;;;;;;:::i;3370:166:17:-;;;;;;;;;;-1:-1:-1;3370:166:17;;;;;:::i;:::-;3492:27;;;;3469:4;3492:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3370:166;9681:89:31;;;;;;;;;;-1:-1:-1;9748:15:31;;;;9681:89;;3603:394:17;;;;;;;;;;-1:-1:-1;3603:394:17;;;;;:::i;:::-;;:::i;2086:198:15:-;;;;;;;;;;-1:-1:-1;2086:198:15;;;;;:::i;:::-;;:::i;6687:244:31:-;;;;;;;;;;;;;:::i;9169:259::-;;;;;;;;;;-1:-1:-1;9169:259:31;;;;;:::i;:::-;;:::i;4373:277::-;;;;;;;;;;;;;:::i;2190:227:17:-;2276:7;2303:21;;;2295:76;;;;;;;10072:2:39;2295:76:17;;;10054:21:39;10111:2;10091:18;;;10084:30;10150:34;10130:18;;;10123:62;10221:12;10201:18;;;10194:40;10251:19;;2295:76:17;;;;;;;;;-1:-1:-1;2388:9:17;:13;;;;;;;;;;;:22;;;;;;;;;;;2190:227;;;;;:::o;1241:305::-;1343:4;1378:41;;;1393:26;1378:41;;:109;;-1:-1:-1;1435:52:17;;;1450:37;1435:52;1378:109;:161;;;-1:-1:-1;957:25:25;942:40;;;;1503:36:17;834:155:25;10635:426:31;10725:17;;10777:24;;10725:86;;;;;:17;10777:24;;;10725:86;;;7724:74:39;10682:7:31;;;;10725:17;;:38;;7697:18:39;;10725:86:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10848:17;;10902:24;;10848:88;;;;;:17;10902:24;;;10848:88;;;7724:74:39;10701:110:31;;-1:-1:-1;10822:23:31;;10848:17;;;:40;;7697:18:39;;10848:88:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10822:114;;10951:13;10968:1;10951:18;10947:57;;10992:1;10985:8;;;;10635:426;:::o;10947:57::-;11022:31;11040:13;11022:15;:31;:::i;:::-;11014:40;;;;10635:426;:::o;14368:328::-;14429:13;14624:26;14641:8;14624:16;:26::i;:::-;14473:216;;;;;;;;:::i;:::-;;;;;;;;;;;;;14454:235;;14368:328;;;:::o;13625:225::-;13671:7;;13735:1;13718:103;13743:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13738:1;:22;13718:103;;13791:19;;;;;;;;620:25:39;;;13791:4:31;;:16;;593:18:39;;13791:19:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13781:29;;;;:::i;:::-;;-1:-1:-1;13762:3:31;;;;:::i;:::-;;;;13718:103;;;-1:-1:-1;13837:6:31;13625:225;-1:-1:-1;13625:225:31:o;5001:103::-;1099:13:15;:11;:13::i;:::-;1278:6;;5063:34:31::1;::::0;1278:6:15;;;;;5063:34:31;::::1;;;::::0;5089:7;;5063:34:::1;::::0;;;5089:7;1278:6:15;5063:34:31;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5001:103:::0;:::o;4069:426:17:-;4294:20;;;724:10:23;4294:20:17;;:60;;-1:-1:-1;4318:36:17;4335:4;724:10:23;3370:166:17;:::i;4318:36::-;4273:153;;;;;;;12444:2:39;4273:153:17;;;12426:21:39;12483:2;12463:18;;;12456:30;12522:34;12502:18;;;12495:62;12593:16;12573:18;;;12566:44;12627:19;;4273:153:17;12242:410:39;4273:153:17;4436:52;4459:4;4465:2;4469:3;4474:7;4483:4;4436:22;:52::i;:::-;4069:426;;;;;:::o;2574:508::-;2725:16;2784:3;:10;2765:8;:15;:29;2757:83;;;;;;;12859:2:39;2757:83:17;;;12841:21:39;12898:2;12878:18;;;12871:30;12937:34;12917:18;;;12910:62;13008:11;12988:18;;;12981:39;13037:19;;2757:83:17;12657:405:39;2757:83:17;2851:30;2898:8;:15;2884:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:30:17;;2851:63;;2930:9;2925:120;2949:8;:15;2945:1;:19;2925:120;;;3004:30;3014:8;3023:1;3014:11;;;;;;;;:::i;:::-;;;;;;;3027:3;3031:1;3027:6;;;;;;;;:::i;:::-;;;;;;;3004:9;:30::i;:::-;2985:13;2999:1;2985:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2966:3;;;:::i;:::-;;;2925:120;;;-1:-1:-1;3062:13:17;2574:508;-1:-1:-1;;;2574:508:17:o;5264:125:31:-;1099:13:15;:11;:13::i;:::-;5371:1:31::1;5349:20;5342:31;5264:125::o:0;11133:475::-;11227:17;;11279:24;;11227:86;;;;;:17;11279:24;;;11227:86;;;7724:74:39;11187:4:31;;;;11227:17;;:38;;7697:18:39;;11227:86:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11203:110;;11327:13;11344:1;11327:18;11323:61;;11368:5;11361:12;;;11133:475;:::o;11323:61::-;11417:17;;11464:24;;11417:81;;;;;:17;11464:24;;;11417:81;;;7724:74:39;11394:20:31;;11417:17;;;;;:33;;7697:18:39;;11417:81:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11394:104;;11508:21;11532:16;:14;:16::i;:::-;11508:40;-1:-1:-1;11600:1:31;11567:28;11508:40;11567:12;:28;:::i;:::-;11566:35;;11559:42;;;;;11133:475;:::o;7913:469::-;7994:15;8025:22;8050:33;8074:8;8050:23;:33::i;:::-;8025:58;;8133:1;8098:31;8108:10;8120:8;8098:9;:31::i;:::-;:36;8094:250;;8282:27;;;;:17;:27;;;;;;;;;:37;8155:178;;13620:25:39;;;8222:10:31;13661:18:39;;;13654:83;;;;13753:18;;;13746:34;;;13811:2;13796:18;;13789:34;8155:178:31;;;;;;;13607:3:39;8155:178:31;;;8361:14;7913:469;-1:-1:-1;;7913:469:31:o;1836:101:15:-;1099:13;:11;:13::i;:::-;1900:30:::1;1927:1;1900:18;:30::i;:::-;1836:101::o:0;11906:739:31:-;12058:15;;12002;;12123:1;12088:31;12098:10;12110:8;12088:9;:31::i;:::-;:36;12084:524;;12140:14;12176:8;12158:15;;:26;;;;:::i;:::-;12206:18;12262:27;;;:17;:27;;;;;:43;;;12140:45;;-1:-1:-1;12206:18:31;12227:79;;:15;:79;:::i;:::-;12206:100;-1:-1:-1;12351:8:31;12377:33;;;12373:225;;12447:8;12430:25;;12373:225;;;12562:19;12571:10;12562:6;:19;:::i;:::-;12543:15;;:39;;;;:::i;:::-;12525:58;;12373:225;12126:482;;;12624:14;11906:739;-1:-1:-1;;11906:739:31:o;7168:559::-;1099:13:15;:11;:13::i;:::-;7285:47:31::1;;;;;;;;;;;;::::0;7303:18:::1;:28;7322:8;7303:28;;;;;;;;;;;7285:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:47::i;:::-;7280:135;;7375:28;::::0;;;:18:::1;:28;::::0;;;;;;7355:49;;::::1;::::0;;::::1;::::0;7375:28;7355:49:::1;;;:::i;7280:135::-;7424:28;::::0;;;:18:::1;:28;::::0;;;;:36:::1;7455:5:::0;7424:28;:36:::1;:::i;:::-;;7475:23;:21;:23::i;:::-;7471:250;;;7514:15;:13;:15::i;7471:250::-;7560:20;7583:22;:20;:22::i;:::-;7560:45;;7619:14;7636:16;:14;:16::i;:::-;7672:38;::::0;;18084:25:39;;;18140:2;18125:18;;18118:34;;;7619:33:31;;-1:-1:-1;7672:38:31::1;::::0;18057:18:39;7672:38:31::1;;;;;;;7546:175;;7168:559:::0;;:::o;10199:213::-;10294:17;;10341:24;;10294:81;;;;;:17;10341:24;;;10294:81;;;7724:74:39;10252:7:31;;;;10294:17;;:33;;7697:18:39;;10294:81:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3150:153:17:-;3244:52;724:10:23;3277:8:17;3287;3244:18;:52::i;12836:280:31:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12988:27:31;;;;:17;:27;;;;;;;;13071:18;:28;;;;;;12967:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12939:12;12967:142;;;;;;;;;;;;;;;;;;;;;;;13071:28;;12967:142;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12836:280;;;:::o;8622:143::-;1099:13:15;:11;:13::i;:::-;8694:11:31::1;:23:::0;;;8732:26:::1;::::0;620:25:39;;;8732:26:31::1;::::0;608:2:39;593:18;8732:26:31::1;;;;;;;;8622:143:::0;:::o;8893:102::-;1099:13:15;:11;:13::i;:::-;8963:15:31::1;:25:::0;8893:102::o;5519:1050::-;2266:21:16;:19;:21::i;:::-;5677:16:31::1;5671:23;5766:20;5760:27;5750:83;;5817:1;5814::::0;5807:12:::1;5750:83;5961:3;5948:11;5945:20;5935:76;;5995:1;5992::::0;5985:12:::1;5935:76;;6125:11;;6112:9;:24;6104:53;;;::::0;::::1;::::0;;18365:2:39;6104:53:31::1;::::0;::::1;18347:21:39::0;18404:2;18384:18;;;18377:30;18443:18;18423;;;18416:46;18479:18;;6104:53:31::1;18163:340:39::0;6104:53:31::1;6223:46;6250:9;6261:7;;6223:26;:46::i;:::-;6366:12;6360:19:::0;;6436:1:::1;6417:21;6451:39:::0;;6537:25:::1;5371:1;5349:20;5342:31;5264:125:::0;6537:25:::1;2308:20:16::0;1721:1;2814:7;:22;2634:209;14046:182:31;14092:13;14117:104;;;;;;;;;;;;;;;;;;;14046:182;:::o;3603:394:17:-;3803:20;;;724:10:23;3803:20:17;;:60;;-1:-1:-1;3827:36:17;3844:4;724:10:23;3370:166:17;:::i;3827:36::-;3782:153;;;;;;;12444:2:39;3782:153:17;;;12426:21:39;12483:2;12463:18;;;12456:30;12522:34;12502:18;;;12495:62;12593:16;12573:18;;;12566:44;12627:19;;3782:153:17;12242:410:39;3782:153:17;3945:45;3963:4;3969:2;3973;3977:6;3985:4;3945:17;:45::i;2086:198:15:-;1099:13;:11;:13::i;:::-;2174:22:::1;::::0;::::1;2166:73;;;::::0;::::1;::::0;;18710:2:39;2166:73:15::1;::::0;::::1;18692:21:39::0;18749:2;18729:18;;;18722:30;18788:34;18768:18;;;18761:62;18859:8;18839:18;;;18832:36;18885:19;;2166:73:15::1;18508:402:39::0;2166:73:15::1;2249:28;2268:8;2249:18;:28::i;:::-;2086:198:::0;:::o;6687:244:31:-;1099:13:15;:11;:13::i;:::-;6817:20:31::1;6811:27;6808:75;;;6867:1;6864::::0;6857:12:::1;6808:75;6903:21;6912:11;;6903:8;:21::i;9169:259::-:0;1099:13:15;:11;:13::i;:::-;9293:24:31::1;:55:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;9363:58:::1;::::0;7724:74:39;;;9363:58:31::1;::::0;7712:2:39;7697:18;9363:58:31::1;7578:226:39::0;4373:277:31;1099:13:15;:11;:13::i;:::-;4430:23:31::1;:21;:23::i;:::-;4425:56;;4462:19;;;;;;;;;;;;;;4425:56;4524:20;4518:27;4515:75;;;4574:1;4571::::0;4564:12:::1;4515:75;4632:1;4610:20;4603:31;4373:277::o:0;420:696:24:-;476:13;525:14;542:17;553:5;542:10;:17::i;:::-;562:1;542:21;525:38;;577:20;611:6;600:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:18:24;-1:-1:-1;577:41:24;-1:-1:-1;738:28:24;;;754:2;738:28;793:280;824:5;;963:8;958:2;947:14;;942:30;824:5;929:44;1017:2;1008:11;;;-1:-1:-1;1037:21:24;793:280;1037:21;-1:-1:-1;1093:6:24;420:696;-1:-1:-1;;;420:696:24:o;1364:130:15:-;1278:6;;1427:23;1278:6;724:10:23;1427:23:15;1419:68;;;;;;;19117:2:39;1419:68:15;;;19099:21:39;;;19136:18;;;19129:30;19195:34;19175:18;;;19168:62;19247:18;;1419:68:15;18915:356:39;6238:1115:17;6458:7;:14;6444:3;:10;:28;6436:81;;;;;;;19478:2:39;6436:81:17;;;19460:21:39;19517:2;19497:18;;;19490:30;19556:34;19536:18;;;19529:62;19627:10;19607:18;;;19600:38;19655:19;;6436:81:17;19276:404:39;6436:81:17;6535:16;;;6527:66;;;;;;;19887:2:39;6527:66:17;;;19869:21:39;19926:2;19906:18;;;19899:30;19965:34;19945:18;;;19938:62;20036:7;20016:18;;;20009:35;20061:19;;6527:66:17;19685:401:39;6527:66:17;724:10:23;6646:60:17;724:10:23;6677:4:17;6683:2;6687:3;6692:7;6701:4;6646:20;:60::i;:::-;6722:9;6717:411;6741:3;:10;6737:1;:14;6717:411;;;6772:10;6785:3;6789:1;6785:6;;;;;;;;:::i;:::-;;;;;;;6772:19;;6805:14;6822:7;6830:1;6822:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6847:19;6869:13;;;;;;;;;;:19;;;;;;;;;;;;;6822:10;;-1:-1:-1;6910:21:17;;;;6902:76;;;;;;;20293:2:39;6902:76:17;;;20275:21:39;20332:2;20312:18;;;20305:30;20371:34;20351:18;;;20344:62;20442:12;20422:18;;;20415:40;20472:19;;6902:76:17;20091:406:39;6902:76:17;7020:9;:13;;;;;;;;;;;:19;;;;;;;;;;;7042:20;;;7020:42;;7090:17;;;;;;;:27;;7042:20;;7020:9;7090:27;;7042:20;;7090:27;:::i;:::-;;;;;;;;6758:370;;;6753:3;;;;:::i;:::-;;;6717:411;;;;7173:2;7143:47;;7167:4;7143:47;;7157:8;7143:47;;;7177:3;7182:7;7143:47;;;;;;;:::i;:::-;;;;;;;;7271:75;7307:8;7317:4;7323:2;7327:3;7332:7;7341:4;7271:35;:75::i;:::-;6426:927;6238:1115;;;;;:::o;2438:187:15:-;2530:6;;;;2546:17;;;;;;;;;;;2578:40;;2530:6;;;2546:17;2530:6;;2578:40;;2511:16;;2578:40;2501:124;2438:187;:::o;15741:218:31:-;15843:4;15947:1;15929:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15919:32;;;;;;15899:1;15881:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15871:32;;;;;;:80;15863:89;;15741:218;;;;:::o;12915:323:17:-;13065:8;13056:17;;:5;:17;;;13048:71;;;;;;;21466:2:39;13048:71:17;;;21448:21:39;21505:2;21485:18;;;21478:30;21544:34;21524:18;;;21517:62;21615:11;21595:18;;;21588:39;21644:19;;13048:71:17;21264:405:39;13048:71:17;13129:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;13190:41;;1228::39;;;13190::17;;1201:18:39;13190:41:17;;;;;;;12915:323;;;:::o;2341:287:16:-;1764:1;2473:7;;:19;2465:63;;;;;;;21876:2:39;2465:63:16;;;21858:21:39;21915:2;21895:18;;;21888:30;21954:33;21934:18;;;21927:61;22005:18;;2465:63:16;21674:355:39;2465:63:16;1764:1;2603:7;:18;2341:287::o;14919:424:31:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;15069:31:31;;;15137:15;-1:-1:-1;;;;15110:42:31;;;15163:27;;;:17;:27;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15258:33;;;;;;;;;;:28;;;:18;:28;;;;;;-1:-1:-1;;15258:33:31;;:28;:33;:::i;:::-;;15302:34;15308:10;15320:8;15330:1;15302:34;;;;;;;;;;;;:5;:34::i;:::-;15024:319;14919:424;;:::o;4945:947:17:-;5126:16;;;5118:66;;;;;;;19887:2:39;5118:66:17;;;19869:21:39;19926:2;19906:18;;;19899:30;19965:34;19945:18;;;19938:62;20036:7;20016:18;;;20009:35;20061:19;;5118:66:17;19685:401:39;5118:66:17;724:10:23;5195:16:17;5259:21;5277:2;5259:17;:21::i;:::-;5236:44;;5290:24;5317:25;5335:6;5317:17;:25::i;:::-;5290:52;;5353:60;5374:8;5384:4;5390:2;5394:3;5399:7;5408:4;5353:20;:60::i;:::-;5424:19;5446:13;;;;;;;;;;;:19;;;;;;;;;;;5483:21;;;;5475:76;;;;;;;20293:2:39;5475:76:17;;;20275:21:39;20332:2;20312:18;;;20305:30;20371:34;20351:18;;;20344:62;20442:12;20422:18;;;20415:40;20472:19;;5475:76:17;20091:406:39;5475:76:17;5585:9;:13;;;;;;;;;;;:19;;;;;;;;;;;5607:20;;;5585:42;;5647:17;;;;;;;:27;;5607:20;;5585:9;5647:27;;5607:20;;5647:27;:::i;:::-;;;;-1:-1:-1;;5690:46:17;;;18084:25:39;;;18140:2;18125:18;;18118:34;;;5690:46:17;;;;;;;;;;;;;;;18057:18:39;5690:46:17;;;;;;;5817:68;5848:8;5858:4;5864:2;5868;5872:6;5880:4;5817:30;:68::i;:::-;5108:784;;;;4945:947;;;;;:::o;9919:890:27:-;9972:7;;10056:6;10047:15;;10043:99;;10091:6;10082:15;;;-1:-1:-1;10125:2:27;10115:12;10043:99;10168:6;10159:5;:15;10155:99;;10203:6;10194:15;;;-1:-1:-1;10237:2:27;10227:12;10155:99;10280:6;10271:5;:15;10267:99;;10315:6;10306:15;;;-1:-1:-1;10349:2:27;10339:12;10267:99;10392:5;10383;:14;10379:96;;10426:5;10417:14;;;-1:-1:-1;10459:1:27;10449:11;10379:96;10501:5;10492;:14;10488:96;;10535:5;10526:14;;;-1:-1:-1;10568:1:27;10558:11;10488:96;10610:5;10601;:14;10597:96;;10644:5;10635:14;;;-1:-1:-1;10677:1:27;10667:11;10597:96;10719:5;10710;:14;10706:64;;10754:1;10744:11;10796:6;9919:890;-1:-1:-1;;9919:890:27:o;1096:904:20:-;1408:18;;;1404:156;;1447:9;1442:108;1466:3;:10;1462:1;:14;1442:108;;;1525:7;1533:1;1525:10;;;;;;;;:::i;:::-;;;;;;;1501:12;:20;1514:3;1518:1;1514:6;;;;;;;;:::i;:::-;;;;;;;1501:20;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;1478:3:20;;-1:-1:-1;1478:3:20;;:::i;:::-;;;1442:108;;;;1404:156;1574:16;;;1570:424;;1611:9;1606:378;1630:3;:10;1626:1;:14;1606:378;;;1665:10;1678:3;1682:1;1678:6;;;;;;;;:::i;:::-;;;;;;;1665:19;;1702:14;1719:7;1727:1;1719:10;;;;;;;;:::i;:::-;;;;;;;1702:27;;1747:14;1764:12;:16;1777:2;1764:16;;;;;;;;;;;;1747:33;;1816:6;1806;:16;;1798:69;;;;;;;23709:2:39;1798:69:20;;;23691:21:39;23748:2;23728:18;;;23721:30;23787:34;23767:18;;;23760:62;23858:10;23838:18;;;23831:38;23886:19;;1798:69:20;23507:404:39;1798:69:20;1917:16;;;;:12;:16;;;;;;1936:15;;1917:34;;1642:3;;;:::i;:::-;;;1606:378;;;;1096:904;;;;;;:::o;16271:792:17:-;16503:13;;;1470:19:22;:23;16499:558:17;;16538:79;;;;;:43;;;;;;:79;;16582:8;;16592:4;;16598:3;;16603:7;;16612:4;;16538:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16538:79:17;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16534:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16923:6;16916:14;;;;;;;;;;;:::i;16534:513::-;;;16970:62;;;;;26147:2:39;16970:62:17;;;26129:21:39;26186:2;26166:18;;;26159:30;26225:34;26205:18;;;26198:62;26296:22;26276:18;;;26269:50;26336:19;;16970:62:17;25945:416:39;16534:513:17;16696:60;;;16708:48;16696:60;16692:157;;16780:50;;;;;26568:2:39;16780:50:17;;;26550:21:39;26607:2;26587:18;;;26580:30;26646:34;26626:18;;;26619:62;26717:10;26697:18;;;26690:38;26745:19;;16780:50:17;26366:404:39;8635:709:17;8782:16;;;8774:62;;;;;;;26977:2:39;8774:62:17;;;26959:21:39;27016:2;26996:18;;;26989:30;27055:34;27035:18;;;27028:62;27126:3;27106:18;;;27099:31;27147:19;;8774:62:17;26775:397:39;8774:62:17;724:10:23;8847:16:17;8911:21;8929:2;8911:17;:21::i;:::-;8888:44;;8942:24;8969:25;8987:6;8969:17;:25::i;:::-;8942:52;;9005:66;9026:8;9044:1;9048:2;9052:3;9057:7;9066:4;9005:20;:66::i;:::-;9082:9;:13;;;;;;;;;;;:17;;;;;;;;;;:27;;9103:6;;9082:9;:27;;9103:6;;9082:27;:::i;:::-;;;;-1:-1:-1;;9124:52:17;;;18084:25:39;;;18140:2;18125:18;;18118:34;;;9124:52:17;;;;;9157:1;;9124:52;;;;;;18057:18:39;9124:52:17;;;;;;;9263:74;9294:8;9312:1;9316:2;9320;9324:6;9332:4;9263:30;:74::i;17069:193::-;17188:16;;;17202:1;17188:16;;;;;;;;;17135;;17163:22;;17188:16;;;;;;;;;;;;-1:-1:-1;17188:16:17;17163:41;;17225:7;17214:5;17220:1;17214:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17250:5;17069:193;-1:-1:-1;;17069:193:17:o;15540:725::-;15747:13;;;1470:19:22;:23;15743:516:17;;15782:72;;;;;:38;;;;;;:72;;15821:8;;15831:4;;15837:2;;15841:6;;15849:4;;15782:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15782:72:17;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15778:471;;;;:::i;:::-;15903:55;;;15915:43;15903:55;15899:152;;15982:50;;;;;26568:2:39;15982:50:17;;;26550:21:39;26607:2;26587:18;;;26580:30;26646:34;26626:18;;;26619:62;26717:10;26697:18;;;26690:38;26745:19;;15982:50:17;26366:404:39;14:196;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:39:o;656:177::-;741:66;734:5;730:78;723:5;720:89;710:117;;823:1;820;813:12;838:245;896:6;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;1004:9;991:23;1023:30;1047:5;1023:30;:::i;:::-;1072:5;838:245;-1:-1:-1;;;838:245:39:o;1280:250::-;1365:1;1375:113;1389:6;1386:1;1383:13;1375:113;;;1465:11;;;1459:18;1446:11;;;1439:39;1411:2;1404:10;1375:113;;;-1:-1:-1;;1522:1:39;1504:16;;1497:27;1280:250::o;1535:330::-;1577:3;1615:5;1609:12;1642:6;1637:3;1630:19;1658:76;1727:6;1720:4;1715:3;1711:14;1704:4;1697:5;1693:16;1658:76;:::i;:::-;1779:2;1767:15;1784:66;1763:88;1754:98;;;;1854:4;1750:109;;1535:330;-1:-1:-1;;1535:330:39:o;1870:220::-;2019:2;2008:9;2001:21;1982:4;2039:45;2080:2;2069:9;2065:18;2057:6;2039:45;:::i;2095:180::-;2154:6;2207:2;2195:9;2186:7;2182:23;2178:32;2175:52;;;2223:1;2220;2213:12;2175:52;-1:-1:-1;2246:23:39;;2095:180;-1:-1:-1;2095:180:39:o;2280:184::-;2332:77;2329:1;2322:88;2429:4;2426:1;2419:15;2453:4;2450:1;2443:15;2469:308;2575:66;2570:2;2564:4;2560:13;2556:86;2548:6;2544:99;2709:6;2697:10;2694:22;2673:18;2661:10;2658:34;2655:62;2652:88;;;2720:18;;:::i;:::-;2756:2;2749:22;-1:-1:-1;;2469:308:39:o;2782:183::-;2842:4;2875:18;2867:6;2864:30;2861:56;;;2897:18;;:::i;:::-;-1:-1:-1;2942:1:39;2938:14;2954:4;2934:25;;2782:183::o;2970:724::-;3024:5;3077:3;3070:4;3062:6;3058:17;3054:27;3044:55;;3095:1;3092;3085:12;3044:55;3131:6;3118:20;3157:4;3180:43;3220:2;3180:43;:::i;:::-;3252:2;3246:9;3264:31;3292:2;3284:6;3264:31;:::i;:::-;3330:18;;;3422:1;3418:10;;;;3406:23;;3402:32;;;3364:15;;;;-1:-1:-1;3446:15:39;;;3443:35;;;3474:1;3471;3464:12;3443:35;3510:2;3502:6;3498:15;3522:142;3538:6;3533:3;3530:15;3522:142;;;3604:17;;3592:30;;3642:12;;;;3555;;3522:142;;;-1:-1:-1;3682:6:39;2970:724;-1:-1:-1;;;;;;2970:724:39:o;3699:614::-;3741:5;3794:3;3787:4;3779:6;3775:17;3771:27;3761:55;;3812:1;3809;3802:12;3761:55;3848:6;3835:20;3874:18;3870:2;3867:26;3864:52;;;3896:18;;:::i;:::-;3945:2;3939:9;3957:126;4077:4;4008:66;4001:4;3997:2;3993:13;3989:86;3985:97;3977:6;3957:126;:::i;:::-;4107:2;4099:6;4092:18;4153:3;4146:4;4141:2;4133:6;4129:15;4125:26;4122:35;4119:55;;;4170:1;4167;4160:12;4119:55;4234:2;4227:4;4219:6;4215:17;4208:4;4200:6;4196:17;4183:54;4281:1;4257:15;;;4274:4;4253:26;4246:37;;;;4261:6;3699:614;-1:-1:-1;;;3699:614:39:o;4318:943::-;4472:6;4480;4488;4496;4504;4557:3;4545:9;4536:7;4532:23;4528:33;4525:53;;;4574:1;4571;4564:12;4525:53;4597:29;4616:9;4597:29;:::i;:::-;4587:39;;4645:38;4679:2;4668:9;4664:18;4645:38;:::i;:::-;4635:48;;4734:2;4723:9;4719:18;4706:32;4757:18;4798:2;4790:6;4787:14;4784:34;;;4814:1;4811;4804:12;4784:34;4837:61;4890:7;4881:6;4870:9;4866:22;4837:61;:::i;:::-;4827:71;;4951:2;4940:9;4936:18;4923:32;4907:48;;4980:2;4970:8;4967:16;4964:36;;;4996:1;4993;4986:12;4964:36;5019:63;5074:7;5063:8;5052:9;5048:24;5019:63;:::i;:::-;5009:73;;5135:3;5124:9;5120:19;5107:33;5091:49;;5165:2;5155:8;5152:16;5149:36;;;5181:1;5178;5171:12;5149:36;;5204:51;5247:7;5236:8;5225:9;5221:24;5204:51;:::i;:::-;5194:61;;;4318:943;;;;;;;;:::o;5266:1208::-;5384:6;5392;5445:2;5433:9;5424:7;5420:23;5416:32;5413:52;;;5461:1;5458;5451:12;5413:52;5501:9;5488:23;5530:18;5571:2;5563:6;5560:14;5557:34;;;5587:1;5584;5577:12;5557:34;5625:6;5614:9;5610:22;5600:32;;5670:7;5663:4;5659:2;5655:13;5651:27;5641:55;;5692:1;5689;5682:12;5641:55;5728:2;5715:16;5750:4;5773:43;5813:2;5773:43;:::i;:::-;5845:2;5839:9;5857:31;5885:2;5877:6;5857:31;:::i;:::-;5923:18;;;6011:1;6007:10;;;;5999:19;;5995:28;;;5957:15;;;;-1:-1:-1;6035:19:39;;;6032:39;;;6067:1;6064;6057:12;6032:39;6091:11;;;;6111:148;6127:6;6122:3;6119:15;6111:148;;;6193:23;6212:3;6193:23;:::i;:::-;6181:36;;6144:12;;;;6237;;;;6111:148;;;6278:6;-1:-1:-1;;6322:18:39;;6309:32;;-1:-1:-1;;6353:16:39;;;6350:36;;;6382:1;6379;6372:12;6350:36;;6405:63;6460:7;6449:8;6438:9;6434:24;6405:63;:::i;:::-;6395:73;;;5266:1208;;;;;:::o;6479:435::-;6532:3;6570:5;6564:12;6597:6;6592:3;6585:19;6623:4;6652:2;6647:3;6643:12;6636:19;;6689:2;6682:5;6678:14;6710:1;6720:169;6734:6;6731:1;6728:13;6720:169;;;6795:13;;6783:26;;6829:12;;;;6864:15;;;;6756:1;6749:9;6720:169;;;-1:-1:-1;6905:3:39;;6479:435;-1:-1:-1;;;;;6479:435:39:o;6919:261::-;7098:2;7087:9;7080:21;7061:4;7118:56;7170:2;7159:9;7155:18;7147:6;7118:56;:::i;7185:388::-;7262:6;7270;7323:2;7311:9;7302:7;7298:23;7294:32;7291:52;;;7339:1;7336;7329:12;7291:52;7375:9;7362:23;7352:33;;7436:2;7425:9;7421:18;7408:32;7463:18;7455:6;7452:30;7449:50;;;7495:1;7492;7485:12;7449:50;7518:49;7559:7;7550:6;7539:9;7535:22;7518:49;:::i;7809:347::-;7874:6;7882;7935:2;7923:9;7914:7;7910:23;7906:32;7903:52;;;7951:1;7948;7941:12;7903:52;7974:29;7993:9;7974:29;:::i;:::-;7964:39;;8053:2;8042:9;8038:18;8025:32;8100:5;8093:13;8086:21;8079:5;8076:32;8066:60;;8122:1;8119;8112:12;8066:60;8145:5;8135:15;;;7809:347;;;;;:::o;8161:637::-;8396:6;8390:13;8379:9;8372:32;8460:4;8452:6;8448:17;8442:24;8435:4;8424:9;8420:20;8413:54;8537:4;8529:6;8525:17;8519:24;8512:32;8505:40;8498:4;8487:9;8483:20;8476:70;8602:4;8594:6;8590:17;8584:24;8577:4;8566:9;8562:20;8555:54;8679:4;8671:6;8667:17;8661:24;8654:32;8647:40;8640:4;8629:9;8625:20;8618:70;8725:3;8719;8708:9;8704:19;8697:32;8353:4;8746:46;8787:3;8776:9;8772:19;8764:6;8746:46;:::i;:::-;8738:54;8161:637;-1:-1:-1;;;;8161:637:39:o;8803:260::-;8871:6;8879;8932:2;8920:9;8911:7;8907:23;8903:32;8900:52;;;8948:1;8945;8938:12;8900:52;8971:29;8990:9;8971:29;:::i;:::-;8961:39;;9019:38;9053:2;9042:9;9038:18;9019:38;:::i;:::-;9009:48;;8803:260;;;;;:::o;9068:606::-;9172:6;9180;9188;9196;9204;9257:3;9245:9;9236:7;9232:23;9228:33;9225:53;;;9274:1;9271;9264:12;9225:53;9297:29;9316:9;9297:29;:::i;:::-;9287:39;;9345:38;9379:2;9368:9;9364:18;9345:38;:::i;:::-;9335:48;;9430:2;9419:9;9415:18;9402:32;9392:42;;9481:2;9470:9;9466:18;9453:32;9443:42;;9536:3;9525:9;9521:19;9508:33;9564:18;9556:6;9553:30;9550:50;;;9596:1;9593;9586:12;9550:50;9619:49;9660:7;9651:6;9640:9;9636:22;9619:49;:::i;9679:186::-;9738:6;9791:2;9779:9;9770:7;9766:23;9762:32;9759:52;;;9807:1;9804;9797:12;9759:52;9830:29;9849:9;9830:29;:::i;10281:184::-;10351:6;10404:2;10392:9;10383:7;10379:23;10375:32;10372:52;;;10420:1;10417;10410:12;10372:52;-1:-1:-1;10443:16:39;;10281:184;-1:-1:-1;10281:184:39:o;10659:::-;10711:77;10708:1;10701:88;10808:4;10805:1;10798:15;10832:4;10829:1;10822:15;10848:274;10888:1;10914;10904:189;;10949:77;10946:1;10939:88;11050:4;11047:1;11040:15;11078:4;11075:1;11068:15;10904:189;-1:-1:-1;11107:9:39;;10848:274::o;11127:780::-;11479:34;11474:3;11467:47;11544:34;11539:2;11534:3;11530:12;11523:56;11609:34;11604:2;11599:3;11595:12;11588:56;11674:6;11669:2;11664:3;11660:12;11653:28;11449:3;11710:6;11704:13;11726:74;11793:6;11787:3;11782;11778:13;11773:2;11765:6;11761:15;11726:74;:::i;:::-;11865:7;11859:3;11819:16;;;;11851:12;;;11844:29;-1:-1:-1;11897:3:39;11889:12;;11127:780;-1:-1:-1;11127:780:39:o;11912:125::-;11977:9;;;11998:10;;;11995:36;;;12011:18;;:::i;12042:195::-;12081:3;12112:66;12105:5;12102:77;12099:103;;12182:18;;:::i;:::-;-1:-1:-1;12229:1:39;12218:13;;12042:195::o;13067:184::-;13119:77;13116:1;13109:88;13216:4;13213:1;13206:15;13240:4;13237:1;13230:15;13256:128;13323:9;;;13344:11;;;13341:37;;;13358:18;;:::i;13834:228::-;13874:7;14000:1;13932:66;13928:74;13925:1;13922:81;13917:1;13910:9;13903:17;13899:105;13896:131;;;14007:18;;:::i;:::-;-1:-1:-1;14047:9:39;;13834:228::o;14067:437::-;14146:1;14142:12;;;;14189;;;14210:61;;14264:4;14256:6;14252:17;14242:27;;14210:61;14317:2;14309:6;14306:14;14286:18;14283:38;14280:218;;14354:77;14351:1;14344:88;14455:4;14452:1;14445:15;14483:4;14480:1;14473:15;14634:1019;14741:4;14770:2;14799;14788:9;14781:21;14822:1;14855:6;14849:13;14885:36;14911:9;14885:36;:::i;:::-;14957:6;14952:2;14941:9;14937:18;14930:34;14983:2;15004:1;15036:2;15025:9;15021:18;15053:1;15048:216;;;;15278:1;15273:354;;;;15014:613;;15048:216;15111:66;15100:9;15096:82;15091:2;15080:9;15076:18;15069:110;15251:2;15239:6;15232:14;15225:22;15222:1;15218:30;15207:9;15203:46;15199:55;15192:62;;15048:216;;15273:354;15304:6;15301:1;15294:17;15352:2;15349:1;15339:16;15377:1;15391:180;15405:6;15402:1;15399:13;15391:180;;;15498:14;;15474:17;;;15470:26;;15463:50;15541:16;;;;15420:10;;15391:180;;;15595:17;;15591:26;;;-1:-1:-1;;15014:613:39;-1:-1:-1;15644:3:39;;14634:1019;-1:-1:-1;;;;;;;;14634:1019:39:o;15658:544::-;15759:2;15754:3;15751:11;15748:448;;;15795:1;15820:5;15816:2;15809:17;15865:4;15861:2;15851:19;15935:2;15923:10;15919:19;15916:1;15912:27;15906:4;15902:38;15971:4;15959:10;15956:20;15953:47;;;-1:-1:-1;15994:4:39;15953:47;16049:2;16044:3;16040:12;16037:1;16033:20;16027:4;16023:31;16013:41;;16104:82;16122:2;16115:5;16112:13;16104:82;;;16167:17;;;16148:1;16137:13;16104:82;;16438:1467;16562:3;16556:10;16589:18;16581:6;16578:30;16575:56;;;16611:18;;:::i;:::-;16640:96;16729:6;16689:38;16721:4;16715:11;16689:38;:::i;:::-;16683:4;16640:96;:::i;:::-;16791:4;;16855:2;16844:14;;16872:1;16867:781;;;;17692:1;17709:6;17706:89;;;-1:-1:-1;17761:19:39;;;17755:26;17706:89;16344:66;16335:1;16331:11;;;16327:84;16323:89;16313:100;16419:1;16415:11;;;16310:117;17808:81;;16837:1062;;16867:781;14581:1;14574:14;;;14618:4;14605:18;;16915:66;16903:79;;;17079:236;17093:7;17090:1;17087:14;17079:236;;;17182:19;;;17176:26;17161:42;;17274:27;;;;17242:1;17230:14;;;;17109:19;;17079:236;;;17083:3;17343:6;17334:7;17331:19;17328:261;;;17404:19;;;17398:26;17505:66;17487:1;17483:14;;;17499:3;17479:24;17475:97;17471:102;17456:118;17441:134;;17328:261;-1:-1:-1;;;;;17635:1:39;17619:14;;;17615:22;17602:36;;-1:-1:-1;16438:1467:39:o;20502:465::-;20759:2;20748:9;20741:21;20722:4;20785:56;20837:2;20826:9;20822:18;20814:6;20785:56;:::i;:::-;20889:9;20881:6;20877:22;20872:2;20861:9;20857:18;20850:50;20917:44;20954:6;20946;20917:44;:::i;:::-;20909:52;20502:465;-1:-1:-1;;;;;20502:465:39:o;20972:287::-;21101:3;21139:6;21133:13;21155:66;21214:6;21209:3;21202:4;21194:6;21190:17;21155:66;:::i;:::-;21237:16;;;;;20972:287;-1:-1:-1;;20972:287:39:o;23916:850::-;24238:4;24267:42;24348:2;24340:6;24336:15;24325:9;24318:34;24400:2;24392:6;24388:15;24383:2;24372:9;24368:18;24361:43;;24440:3;24435:2;24424:9;24420:18;24413:31;24467:57;24519:3;24508:9;24504:19;24496:6;24467:57;:::i;:::-;24572:9;24564:6;24560:22;24555:2;24544:9;24540:18;24533:50;24606:44;24643:6;24635;24606:44;:::i;:::-;24592:58;;24699:9;24691:6;24687:22;24681:3;24670:9;24666:19;24659:51;24727:33;24753:6;24745;24727:33;:::i;:::-;24719:41;23916:850;-1:-1:-1;;;;;;;;23916:850:39:o;24771:249::-;24840:6;24893:2;24881:9;24872:7;24868:23;24864:32;24861:52;;;24909:1;24906;24899:12;24861:52;24941:9;24935:16;24960:30;24984:5;24960:30;:::i;25025:179::-;25060:3;25102:1;25084:16;25081:23;25078:120;;;25148:1;25145;25142;25127:23;-1:-1:-1;25185:1:39;25179:8;25174:3;25170:18;25078:120;25025:179;:::o;25209:731::-;25248:3;25290:4;25272:16;25269:26;25266:39;;;25209:731;:::o;25266:39::-;25332:2;25326:9;25354:66;25475:2;25457:16;25453:25;25450:1;25444:4;25429:50;25508:4;25502:11;25532:16;25567:18;25638:2;25631:4;25623:6;25619:17;25616:25;25611:2;25603:6;25600:14;25597:45;25594:58;;;25645:5;;;;;25209:731;:::o;25594:58::-;25682:6;25676:4;25672:17;25661:28;;25718:3;25712:10;25745:2;25737:6;25734:14;25731:27;;;25751:5;;;;;;25209:731;:::o;25731:27::-;25835:2;25816:16;25810:4;25806:27;25802:36;25795:4;25786:6;25781:3;25777:16;25773:27;25770:69;25767:82;;;25842:5;;;;;;25209:731;:::o;25767:82::-;25858:57;25909:4;25900:6;25892;25888:19;25884:30;25878:4;25858:57;:::i;:::-;-1:-1:-1;25931:3:39;;25209:731;-1:-1:-1;;;;;25209:731:39:o;27177:584::-;27399:4;27428:42;27509:2;27501:6;27497:15;27486:9;27479:34;27561:2;27553:6;27549:15;27544:2;27533:9;27529:18;27522:43;;27601:6;27596:2;27585:9;27581:18;27574:34;27644:6;27639:2;27628:9;27624:18;27617:34;27688:3;27682;27671:9;27667:19;27660:32;27709:46;27750:3;27739:9;27735:19;27727:6;27709:46;:::i;:::-;27701:54;27177:584;-1:-1:-1;;;;;;;27177:584:39:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "changeETHLimit(uint256)": "b1251026",
    "closeSoloVault()": "63b613f2",
    "contractURI()": "e8a3d485",
    "depositSoloVault()": "ccae8a8d",
    "exists(uint256)": "4f558e79",
    "getAvailableRPLStake()": "9fe8d3aa",
    "getBalance()": "12065fe0",
    "getCurrentEthLimit()": "354228be",
    "getMetadata(uint256)": "a574cea4",
    "getReqRPLStake()": "02943854",
    "getTokenID()": "6ba367a3",
    "hasNodeEnoughRPLStake()": "66f9fa3a",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isVaultOpen()": "ec36d35e",
    "name()": "06fdde03",
    "openSoloVault()": "f9d7afd7",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBlockscapeRocketPoolNode(address)": "f6b76685",
    "setWithdrawFee(uint256)": "b6ac642a",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "totalSupply(uint256)": "bd85b039",
    "transferOwnership(address)": "f2fde38b",
    "updateValidator(uint256,bytes)": "8d8b7ca9",
    "uri(uint256)": "0e89341c",
    "userRequestWithdraw(uint256)": "6ea5ba1a",
    "viewUserRequestWithdraw(uint256)": "8776d1d7",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawBatch()": "f6b21af2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughRPLStake\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vali\",\"type\":\"bytes\"}],\"name\":\"ValidatorAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"ETHLimitChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_availRPL\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_requiredRPL\",\"type\":\"uint256\"}],\"name\":\"RPLStakeRequired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"RocketPoolNodeAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_stakedETH\",\"type\":\"uint256\"}],\"name\":\"UserRequestedWithdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"changeETHLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeSoloVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositSoloVault\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableRPLStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEthLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"institution\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"institutionName\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"institutionVerified\",\"type\":\"bool\"}],\"internalType\":\"struct BlockscapeSoloVault.Metadata\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReqRPLStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasNodeEnoughRPLStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVaultOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openSoloVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlockscapeRocketPoolNode\",\"type\":\"address\"}],\"name\":\"setBlockscapeRocketPoolNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_vali\",\"type\":\"bytes\"}],\"name\":\"updateValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"userRequestWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"viewUserRequestWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Blockscape Finance AG <info@blockscape.network>\",\"errors\":{\"NotEnoughRPLStake()\":[{\"details\":\"more RPL stake has to be done in order to open vault\"}]},\"events\":{\"ETHLimitChanged(uint256)\":{\"details\":\"event for when the ETH limit is changed\"},\"RPLStakeRequired(uint256,uint256)\":{\"details\":\"event for when a batch is tried to withdrawn but not enough rpl are available yet\"},\"RocketPoolNodeAddressChanged(address)\":{\"details\":\"event for when the RocketPool Node Address is changed\"},\"UserRequestedWithdrawal(uint256,address,uint256,uint256)\":{\"details\":\"event for when a user requests a withdrawal\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"changeETHLimit(uint256)\":{\"params\":{\"_newLimit\":\"the new pool amount which has to be staked\"}},\"closeSoloVault()\":{\"details\":\"future staking interactions are prevented afterwards\"},\"constructor\":{\"details\":\"the IPNS makes sure the nfts stay reachable via this link while  new nfts get added to the underlying ipfs folder\"},\"contractURI()\":{\"details\":\"this path will never change as the contract defines a collection\",\"returns\":{\"_0\":\"the fixed collection metadata path \"}},\"depositSoloVault()\":{\"details\":\"the vault must be open and equal the depositing amount\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"getAvailableRPLStake()\":{\"returns\":{\"_0\":\"the current available RPL stake with already deducted minimum stake\"}},\"getBalance()\":{\"returns\":{\"_0\":\"amount in wei\"}},\"getCurrentEthLimit()\":{\"returns\":{\"_0\":\"is depositing enabled\"}},\"getMetadata(uint256)\":{\"params\":{\"_tokenID\":\"identifies the pool\"},\"returns\":{\"_0\":\"Metadata of the pool \",\"_1\":\"the validator address\"}},\"getReqRPLStake()\":{\"details\":\"if the minipoollimit is `0` then the required stake is also `0`!\",\"returns\":{\"_0\":\"the RPLs needed\"}},\"getTokenID()\":{\"returns\":{\"_0\":\"the current tokenID \"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"isVaultOpen()\":{\"details\":\"the backend controller will reopen then vault after the stake have been transferred\",\"returns\":{\"_0\":\"is depositing enabled\"}},\"openSoloVault()\":{\"details\":\"is triggered when the vault can be staked at rocketpool\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setBlockscapeRocketPoolNode(address)\":{\"params\":{\"_newBlockscapeRocketPoolNode\":\"the new address of the pool node\"}},\"setWithdrawFee(uint256)\":{\"params\":{\"_amount\":\"the new fee in wei\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"returns\":{\"_0\":\"total amount of staker\"}},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateValidator(uint256,bytes)\":{\"details\":\"works only once and emits, then reverts\",\"params\":{\"_tokenID\":\"Identifier of the vault\",\"_vali\":\"the current address of the validator\"}},\"uri(uint256)\":{\"params\":{\"_tokenID\":\"the pool\"},\"returns\":{\"_0\":\"the url\"}},\"userRequestWithdraw(uint256)\":{\"params\":{\"_tokenID\":\"which pool the staker wants to unstake\"},\"returns\":{\"_amount\":\"how much the user gets back\"}},\"viewUserRequestWithdraw(uint256)\":{\"params\":{\"_tokenID\":\"which pool the staker wants to unstake\"},\"returns\":{\"_amount\":\"how much the user would pay on fees\"}},\"withdraw(uint256)\":{\"details\":\"the withdraw function remains public as safety measurement to not lock-in client stakes in case of contract issues\",\"params\":{\"_amount\":\"the amount in wei to withdraw\"}}},\"stateVariables\":{\"allowPubDeposit\":{\"details\":\"is `false` when pool is full, will be reopened, as soon as  the backend controller withdraws & transfers the stake\"},\"rocketNodeStaking\":{\"details\":\"rocketpool contract interface for interactions\"},\"rocketNodeStakingAddress\":{\"details\":\"this is a given way to always retrieve the most up-to-date node address\"},\"rocketStorage\":{\"details\":\"RocketStorageInterface of rocketpool\"},\"tokenID\":{\"details\":\"the tokenID is the same as the tokenID of the pool (poolID)\"},\"tokenIDtoMetadata\":{\"details\":\"Mappings of tokenID to Metadata\"},\"tokenIDtoValidator\":{\"details\":\"Mappings of tokenID to Validator\"}},\"title\":\"Rocketpool Staking Allocation Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ValidatorAlreadySet(bytes)\":[{\"notice\":\"for a token the validator can only be set once otherwise revert with this error\"}]},\"kind\":\"user\",\"methods\":{\"changeETHLimit(uint256)\":{\"notice\":\"the limit might change in the future if rocketpool supports  smaller pool sizes\"},\"closeSoloVault()\":{\"notice\":\"is triggered when the vault can be staked at rocketpool\"},\"constructor\":{\"notice\":\"each pool related vault gets its separate tokenID which depicts  the nft for each staker\"},\"contractURI()\":{\"notice\":\"stake nft metdata location\"},\"depositSoloVault()\":{\"notice\":\"used when staking eth into the contract\"},\"getAvailableRPLStake()\":{\"notice\":\"show the currently available RPL stake which is needed to create  a pool on rocketscape\"},\"getBalance()\":{\"notice\":\"how much balance does this vault current have\"},\"getCurrentEthLimit()\":{\"notice\":\"the current depositing threshold\"},\"getMetadata(uint256)\":{\"notice\":\"gets the metadata of a given pool\"},\"getReqRPLStake()\":{\"notice\":\"calculates the required RPL needed to stake according to  poolsize\"},\"getTokenID()\":{\"notice\":\"the tokenID is incremented with every pool\"},\"hasNodeEnoughRPLStake()\":{\"notice\":\"has the node enough RPL to stake another minipool\"},\"isVaultOpen()\":{\"notice\":\"does the vault currently allow depositing\"},\"name()\":{\"notice\":\"Contract name\"},\"openSoloVault()\":{\"notice\":\"makes the vault stakable again after it has been closed\"},\"setBlockscapeRocketPoolNode(address)\":{\"notice\":\"gets used if rocket pool changes the address of their node\"},\"setWithdrawFee(uint256)\":{\"notice\":\"the withdraw fee might be changed in the future\"},\"symbol()\":{\"notice\":\"Contract symbol\"},\"totalSupply()\":{\"notice\":\"how many staker are there totally\"},\"updateValidator(uint256,bytes)\":{\"notice\":\"set validator address for given token id\"},\"uri(uint256)\":{\"notice\":\"gets the url to the metadata of a given pool\"},\"userRequestWithdraw(uint256)\":{\"notice\":\"used when user wants to unstake\"},\"viewUserRequestWithdraw(uint256)\":{\"notice\":\"how much fees would the user has to pay if he would unstake now within the first year of staking the fee is 20%, afterwards 0.5%\"},\"withdraw(uint256)\":{\"notice\":\"withdraw the given amount to the deployer, triggered when the  the backend controller moves the stake to rocketpool\"},\"withdrawBatch()\":{\"notice\":\"this gets triggered by the backend controller when the vault  is closed\"}},\"notice\":\"collects staking, mints NFT in return for staker and let's backend controller  transfer the stake when the pool is full (currently 16 ETH) and enough RPL are available\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BlockscapeSoloVault.sol\":\"BlockscapeSoloVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x80624c6edbd746d79801e14ec439156af772972f52528da5cab019ba965627cc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5ed8a2e92f9a346c5d2a7c1b3e7cc640163929cb8e1c325d0453ccf274686c8f\",\"dweb:/ipfs/QmSciSaQ6g3Jb4BSK5DY5vNAFM1q1XZk3hbYY2N86AGT7w\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xcf8e96732d76b4ab92bdd207b6774dff08d5bc65d222275b5f12bcd2bf0c6024\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c59722c0d706c6bdb307e7aa46060e0bb29c5897f113a4a751a8299648b85d7a\",\"dweb:/ipfs/QmQsJWG6oDvphNzaVPLT4ma5dkgo4MhSgiQd2nPqmQft4R\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd0ce5c93dc4a4e78c2a2fa7b6bed0c42e3541791692e976ce723c137b19d58ef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0761f78942c03a5b3ed22d4652fddd731aeb8963904d6cb171d9887a40954047\",\"dweb:/ipfs/QmS2Xqfm6zpBy4BjaNyLPQruhvBMWSMJazPSuPxtRiKM83\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xbad85de003e1c57b02ac5dc696b6681fed18974c1189f6afa15c3012b53bb2f1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c2326250350017d49f47f1871dd59655d21a9b3b465ba26aee12c568210a1510\",\"dweb:/ipfs/QmWPm9yKtJ3FhqurEHWmzdTkPMdKzDSPKUPU6CS8iuHRGA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xd36f0f545e78d3606dbdd4d1212bd3d5aad0e7e03de0c67a646923549d0fdb19\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d920bcc433df0fc2b109350ed96ad520c69a2bc2a5e9a8b5fc401bba6cdc3578\",\"dweb:/ipfs/QmVVepcDvbM9Jfh8vTmEYJt1tpbbxw7Sw7vvhySKbNh23o\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xb82f4a89e161c2060225896873e51cbd25fca2f926123299799ad4efac7e0fba\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0be4585b0e073781703974a4e836ae983b34761cfd89f4905fd19051203505d7\",\"dweb:/ipfs/QmdAn1g7cyPt89QG2mYoDibtHwQ7GmFEVS9ydEKAaPNAEs\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x2a87e35d54d9c688b1c2c57baa509ada98163c4f45d5bce98728c34d95a8c874\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5fe78a9e379f21e2521d190938e09adbb28971dc2a8ff21e8c9947ee080d17f6\",\"dweb:/ipfs/QmeWZRnVodorh6L5ByXBJi57NbgptU44pp31YpnpdDgviF\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xdf50c53dd630c34294482396206919741a59f86f50f953f430e0f7d5de340271\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3154ab33750ca8e22b67daf8c75628def7d60c2f40354cbf66831ef735a601d7\",\"dweb:/ipfs/QmfCTXNVFoEArk2PiZK9KWbQQ2HgvNhYtZqKKVV6y9ChoW\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xccec5bb843930ecee3858df0f7f027400f72ff93c59a5e44ca120d07e1129dee\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac5fd17a7f3c98c54bc30f3a236424f2f7a720b578cd24a9ef5640ce2e3975f6\",\"dweb:/ipfs/Qmema3xzoKST19BiGyojVN6dYL9TN57qdjunXdFyfEKeWP\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x9faea797c75b0190cdec513c03e37e56597699fc9370a6e4999112e6aaf4e516\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9e269ac534eaf6ed7cae0d3a46172ca660eb421ba1be44f351d42eeb0b85c606\",\"dweb:/ipfs/QmYrmTSZWRHkSDoeAgxzVmAiHLbmGPQka81sPgp8kJp5wW\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x4589f620f74aa943a22453af42347cd7ab66a2524e695788921133b6b5ce3a47\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bad1b7f7b090767bc1e5ad5d5659efadeee9a06c893c882545bec7cc56619a57\",\"dweb:/ipfs/QmYpFrKQTVcubKCfGDY5tFaGQbAa62ZuvDfpt3R32u2V9M\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x9ea78c25a1585f72c73822d3e9cb8d9a0a66ec1a54e2dc2b2f714fa135a6afef\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://72ed14b7b517b8953efd1b14c9afed54e32b12f029decc1bbe3d33205bf2c8c9\",\"dweb:/ipfs/QmSMpuAwTf6J5ysioMJN2sDL2BECL4wcBxsQWiGbFpcFpp\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x56e77dab42aa895fe63b560080ad0f42d1ecdff9c1348a491d32f6328c6bc8ac\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d55b9b5ccbfa098416c1fe0814c40ea4b79c06ade0bd6f01ca62f1321b5b5d04\",\"dweb:/ipfs/QmfKmVX9rvCtb414z7YcUq23yVy829pTkx7CyH5WQdmERm\"]},\"src/BlockscapeSoloVault.sol\":{\"keccak256\":\"0x0a221f66967a98496216325e02e40f3ac7cf11ca2f1cbe7248d44ed8a40f256a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d6dd60869edcce3aa4e870148493ec34c720aebf64e5bb82c1651b7c0ec82e8\",\"dweb:/ipfs/QmR33d7k8VRiR3r4sDNopDVFAzwDa3Q5SsGAxvx4HHx9wT\"]},\"src/utils/RocketNodeStakingInterface.sol\":{\"keccak256\":\"0x562ef87f2e518db7dbff2e06f0bf097675f478bcbf83198f8b285a41d2683f7f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fdb8742144c4d5641018dc9854606159d8cc6e9f65dc419223b54d31e13a4bc7\",\"dweb:/ipfs/QmUiQvZHvXXg3asYAB1YHGqkiw614UTa3Pe6hEW2eJAaRQ\"]},\"src/utils/RocketStorageInterface.sol\":{\"keccak256\":\"0xe80d7611be03e1b8256c02e19ff27f39041c3f2be25442e0f29eb93365ea8497\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://5f7a070b28c126e7fd051510d4fbe65619b4df755e5b50bd1ca562cc7c9bab2f\",\"dweb:/ipfs/Qmd96ioaCGpBHwBoAxvX33XguXH5bNpyGAyCR732kcr1T7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughRPLStake"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vali",
              "type": "bytes"
            }
          ],
          "type": "error",
          "name": "ValidatorAlreadySet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHLimitChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_availRPL",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_requiredRPL",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RPLStakeRequired",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RocketPoolNodeAddressChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_stakedETH",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserRequestedWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_newLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "changeETHLimit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeSoloVault"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositSoloVault"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAvailableRPLStake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentEthLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMetadata",
          "outputs": [
            {
              "internalType": "struct BlockscapeSoloVault.Metadata",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stakedETH",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "institution",
                  "type": "bool"
                },
                {
                  "internalType": "bytes32",
                  "name": "institutionName",
                  "type": "bytes32"
                },
                {
                  "internalType": "bool",
                  "name": "institutionVerified",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReqRPLStake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenID",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hasNodeEnoughRPLStake",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openSoloVault"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newBlockscapeRocketPoolNode",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlockscapeRocketPoolNode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithdrawFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_vali",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateValidator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userRequestWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenID",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "viewUserRequestWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawBatch"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "changeETHLimit(uint256)": {
            "params": {
              "_newLimit": "the new pool amount which has to be staked"
            }
          },
          "closeSoloVault()": {
            "details": "future staking interactions are prevented afterwards"
          },
          "constructor": {
            "details": "the IPNS makes sure the nfts stay reachable via this link while  new nfts get added to the underlying ipfs folder"
          },
          "contractURI()": {
            "details": "this path will never change as the contract defines a collection",
            "returns": {
              "_0": "the fixed collection metadata path "
            }
          },
          "depositSoloVault()": {
            "details": "the vault must be open and equal the depositing amount"
          },
          "exists(uint256)": {
            "details": "Indicates whether any token exist with a given id, or not."
          },
          "getAvailableRPLStake()": {
            "returns": {
              "_0": "the current available RPL stake with already deducted minimum stake"
            }
          },
          "getBalance()": {
            "returns": {
              "_0": "amount in wei"
            }
          },
          "getCurrentEthLimit()": {
            "returns": {
              "_0": "is depositing enabled"
            }
          },
          "getMetadata(uint256)": {
            "params": {
              "_tokenID": "identifies the pool"
            },
            "returns": {
              "_0": "Metadata of the pool ",
              "_1": "the validator address"
            }
          },
          "getReqRPLStake()": {
            "details": "if the minipoollimit is `0` then the required stake is also `0`!",
            "returns": {
              "_0": "the RPLs needed"
            }
          },
          "getTokenID()": {
            "returns": {
              "_0": "the current tokenID "
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC1155-isApprovedForAll}."
          },
          "isVaultOpen()": {
            "details": "the backend controller will reopen then vault after the stake have been transferred",
            "returns": {
              "_0": "is depositing enabled"
            }
          },
          "openSoloVault()": {
            "details": "is triggered when the vault can be staked at rocketpool"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC1155-setApprovalForAll}."
          },
          "setBlockscapeRocketPoolNode(address)": {
            "params": {
              "_newBlockscapeRocketPoolNode": "the new address of the pool node"
            }
          },
          "setWithdrawFee(uint256)": {
            "params": {
              "_amount": "the new fee in wei"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "totalSupply()": {
            "returns": {
              "_0": "total amount of staker"
            }
          },
          "totalSupply(uint256)": {
            "details": "Total amount of tokens in with a given id."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateValidator(uint256,bytes)": {
            "details": "works only once and emits, then reverts",
            "params": {
              "_tokenID": "Identifier of the vault",
              "_vali": "the current address of the validator"
            }
          },
          "uri(uint256)": {
            "params": {
              "_tokenID": "the pool"
            },
            "returns": {
              "_0": "the url"
            }
          },
          "userRequestWithdraw(uint256)": {
            "params": {
              "_tokenID": "which pool the staker wants to unstake"
            },
            "returns": {
              "_amount": "how much the user gets back"
            }
          },
          "viewUserRequestWithdraw(uint256)": {
            "params": {
              "_tokenID": "which pool the staker wants to unstake"
            },
            "returns": {
              "_amount": "how much the user would pay on fees"
            }
          },
          "withdraw(uint256)": {
            "details": "the withdraw function remains public as safety measurement to not lock-in client stakes in case of contract issues",
            "params": {
              "_amount": "the amount in wei to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "changeETHLimit(uint256)": {
            "notice": "the limit might change in the future if rocketpool supports  smaller pool sizes"
          },
          "closeSoloVault()": {
            "notice": "is triggered when the vault can be staked at rocketpool"
          },
          "constructor": {
            "notice": "each pool related vault gets its separate tokenID which depicts  the nft for each staker"
          },
          "contractURI()": {
            "notice": "stake nft metdata location"
          },
          "depositSoloVault()": {
            "notice": "used when staking eth into the contract"
          },
          "getAvailableRPLStake()": {
            "notice": "show the currently available RPL stake which is needed to create  a pool on rocketscape"
          },
          "getBalance()": {
            "notice": "how much balance does this vault current have"
          },
          "getCurrentEthLimit()": {
            "notice": "the current depositing threshold"
          },
          "getMetadata(uint256)": {
            "notice": "gets the metadata of a given pool"
          },
          "getReqRPLStake()": {
            "notice": "calculates the required RPL needed to stake according to  poolsize"
          },
          "getTokenID()": {
            "notice": "the tokenID is incremented with every pool"
          },
          "hasNodeEnoughRPLStake()": {
            "notice": "has the node enough RPL to stake another minipool"
          },
          "isVaultOpen()": {
            "notice": "does the vault currently allow depositing"
          },
          "name()": {
            "notice": "Contract name"
          },
          "openSoloVault()": {
            "notice": "makes the vault stakable again after it has been closed"
          },
          "setBlockscapeRocketPoolNode(address)": {
            "notice": "gets used if rocket pool changes the address of their node"
          },
          "setWithdrawFee(uint256)": {
            "notice": "the withdraw fee might be changed in the future"
          },
          "symbol()": {
            "notice": "Contract symbol"
          },
          "totalSupply()": {
            "notice": "how many staker are there totally"
          },
          "updateValidator(uint256,bytes)": {
            "notice": "set validator address for given token id"
          },
          "uri(uint256)": {
            "notice": "gets the url to the metadata of a given pool"
          },
          "userRequestWithdraw(uint256)": {
            "notice": "used when user wants to unstake"
          },
          "viewUserRequestWithdraw(uint256)": {
            "notice": "how much fees would the user has to pay if he would unstake now within the first year of staking the fee is 20%, afterwards 0.5%"
          },
          "withdraw(uint256)": {
            "notice": "withdraw the given amount to the deployer, triggered when the  the backend controller moves the stake to rocketpool"
          },
          "withdrawBatch()": {
            "notice": "this gets triggered by the backend controller when the vault  is closed"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BlockscapeSoloVault.sol": "BlockscapeSoloVault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x80624c6edbd746d79801e14ec439156af772972f52528da5cab019ba965627cc",
        "urls": [
          "bzz-raw://5ed8a2e92f9a346c5d2a7c1b3e7cc640163929cb8e1c325d0453ccf274686c8f",
          "dweb:/ipfs/QmSciSaQ6g3Jb4BSK5DY5vNAFM1q1XZk3hbYY2N86AGT7w"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xcf8e96732d76b4ab92bdd207b6774dff08d5bc65d222275b5f12bcd2bf0c6024",
        "urls": [
          "bzz-raw://c59722c0d706c6bdb307e7aa46060e0bb29c5897f113a4a751a8299648b85d7a",
          "dweb:/ipfs/QmQsJWG6oDvphNzaVPLT4ma5dkgo4MhSgiQd2nPqmQft4R"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0xd0ce5c93dc4a4e78c2a2fa7b6bed0c42e3541791692e976ce723c137b19d58ef",
        "urls": [
          "bzz-raw://0761f78942c03a5b3ed22d4652fddd731aeb8963904d6cb171d9887a40954047",
          "dweb:/ipfs/QmS2Xqfm6zpBy4BjaNyLPQruhvBMWSMJazPSuPxtRiKM83"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xbad85de003e1c57b02ac5dc696b6681fed18974c1189f6afa15c3012b53bb2f1",
        "urls": [
          "bzz-raw://c2326250350017d49f47f1871dd59655d21a9b3b465ba26aee12c568210a1510",
          "dweb:/ipfs/QmWPm9yKtJ3FhqurEHWmzdTkPMdKzDSPKUPU6CS8iuHRGA"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xd36f0f545e78d3606dbdd4d1212bd3d5aad0e7e03de0c67a646923549d0fdb19",
        "urls": [
          "bzz-raw://d920bcc433df0fc2b109350ed96ad520c69a2bc2a5e9a8b5fc401bba6cdc3578",
          "dweb:/ipfs/QmVVepcDvbM9Jfh8vTmEYJt1tpbbxw7Sw7vvhySKbNh23o"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
        "keccak256": "0xb82f4a89e161c2060225896873e51cbd25fca2f926123299799ad4efac7e0fba",
        "urls": [
          "bzz-raw://0be4585b0e073781703974a4e836ae983b34761cfd89f4905fd19051203505d7",
          "dweb:/ipfs/QmdAn1g7cyPt89QG2mYoDibtHwQ7GmFEVS9ydEKAaPNAEs"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0x2a87e35d54d9c688b1c2c57baa509ada98163c4f45d5bce98728c34d95a8c874",
        "urls": [
          "bzz-raw://5fe78a9e379f21e2521d190938e09adbb28971dc2a8ff21e8c9947ee080d17f6",
          "dweb:/ipfs/QmeWZRnVodorh6L5ByXBJi57NbgptU44pp31YpnpdDgviF"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xdf50c53dd630c34294482396206919741a59f86f50f953f430e0f7d5de340271",
        "urls": [
          "bzz-raw://3154ab33750ca8e22b67daf8c75628def7d60c2f40354cbf66831ef735a601d7",
          "dweb:/ipfs/QmfCTXNVFoEArk2PiZK9KWbQQ2HgvNhYtZqKKVV6y9ChoW"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xccec5bb843930ecee3858df0f7f027400f72ff93c59a5e44ca120d07e1129dee",
        "urls": [
          "bzz-raw://ac5fd17a7f3c98c54bc30f3a236424f2f7a720b578cd24a9ef5640ce2e3975f6",
          "dweb:/ipfs/Qmema3xzoKST19BiGyojVN6dYL9TN57qdjunXdFyfEKeWP"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x9faea797c75b0190cdec513c03e37e56597699fc9370a6e4999112e6aaf4e516",
        "urls": [
          "bzz-raw://9e269ac534eaf6ed7cae0d3a46172ca660eb421ba1be44f351d42eeb0b85c606",
          "dweb:/ipfs/QmYrmTSZWRHkSDoeAgxzVmAiHLbmGPQka81sPgp8kJp5wW"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x4589f620f74aa943a22453af42347cd7ab66a2524e695788921133b6b5ce3a47",
        "urls": [
          "bzz-raw://bad1b7f7b090767bc1e5ad5d5659efadeee9a06c893c882545bec7cc56619a57",
          "dweb:/ipfs/QmYpFrKQTVcubKCfGDY5tFaGQbAa62ZuvDfpt3R32u2V9M"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x9ea78c25a1585f72c73822d3e9cb8d9a0a66ec1a54e2dc2b2f714fa135a6afef",
        "urls": [
          "bzz-raw://72ed14b7b517b8953efd1b14c9afed54e32b12f029decc1bbe3d33205bf2c8c9",
          "dweb:/ipfs/QmSMpuAwTf6J5ysioMJN2sDL2BECL4wcBxsQWiGbFpcFpp"
        ],
        "license": "BUSL-1.1"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x56e77dab42aa895fe63b560080ad0f42d1ecdff9c1348a491d32f6328c6bc8ac",
        "urls": [
          "bzz-raw://d55b9b5ccbfa098416c1fe0814c40ea4b79c06ade0bd6f01ca62f1321b5b5d04",
          "dweb:/ipfs/QmfKmVX9rvCtb414z7YcUq23yVy829pTkx7CyH5WQdmERm"
        ],
        "license": "BUSL-1.1"
      },
      "src/BlockscapeSoloVault.sol": {
        "keccak256": "0x0a221f66967a98496216325e02e40f3ac7cf11ca2f1cbe7248d44ed8a40f256a",
        "urls": [
          "bzz-raw://2d6dd60869edcce3aa4e870148493ec34c720aebf64e5bb82c1651b7c0ec82e8",
          "dweb:/ipfs/QmR33d7k8VRiR3r4sDNopDVFAzwDa3Q5SsGAxvx4HHx9wT"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/RocketNodeStakingInterface.sol": {
        "keccak256": "0x562ef87f2e518db7dbff2e06f0bf097675f478bcbf83198f8b285a41d2683f7f",
        "urls": [
          "bzz-raw://fdb8742144c4d5641018dc9854606159d8cc6e9f65dc419223b54d31e13a4bc7",
          "dweb:/ipfs/QmUiQvZHvXXg3asYAB1YHGqkiw614UTa3Pe6hEW2eJAaRQ"
        ],
        "license": "GPL-3.0-only"
      },
      "src/utils/RocketStorageInterface.sol": {
        "keccak256": "0xe80d7611be03e1b8256c02e19ff27f39041c3f2be25442e0f29eb93365ea8497",
        "urls": [
          "bzz-raw://5f7a070b28c126e7fd051510d4fbe65619b4df755e5b50bd1ca562cc7c9bab2f",
          "dweb:/ipfs/Qmd96ioaCGpBHwBoAxvX33XguXH5bNpyGAyCR732kcr1T7"
        ],
        "license": "GPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BlockscapeSoloVault.sol",
    "id": 30533,
    "exportedSymbols": {
      "Address": [
        26835
      ],
      "BlockscapeSoloVault": [
        30532
      ],
      "Context": [
        26857
      ],
      "ERC1155": [
        26170
      ],
      "ERC1155Supply": [
        26490
      ],
      "ERC165": [
        27056
      ],
      "IERC1155": [
        26292
      ],
      "IERC1155MetadataURI": [
        26505
      ],
      "IERC1155Receiver": [
        26333
      ],
      "IERC165": [
        27068
      ],
      "Math": [
        27934
      ],
      "Ownable": [
        24882
      ],
      "ReentrancyGuard": [
        24947
      ],
      "RocketNodeStakingInterface": [
        31367
      ],
      "RocketStorageInterface": [
        31563
      ],
      "Strings": [
        27032
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:15925:31",
    "nodes": [
      {
        "id": 29815,
        "nodeType": "PragmaDirective",
        "src": "37:24:31",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 29816,
        "nodeType": "ImportDirective",
        "src": "63:58:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "file": "openzeppelin-contracts/token/ERC1155/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 26171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29817,
        "nodeType": "ImportDirective",
        "src": "122:75:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
        "file": "openzeppelin-contracts/token/ERC1155/extensions/ERC1155Supply.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 26491,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29818,
        "nodeType": "ImportDirective",
        "src": "198:61:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 24948,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29819,
        "nodeType": "ImportDirective",
        "src": "260:51:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 24883,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29820,
        "nodeType": "ImportDirective",
        "src": "312:50:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 27033,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29821,
        "nodeType": "ImportDirective",
        "src": "364:44:31",
        "nodes": [],
        "absolutePath": "src/utils/RocketStorageInterface.sol",
        "file": "./utils/RocketStorageInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 31564,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29822,
        "nodeType": "ImportDirective",
        "src": "409:48:31",
        "nodes": [],
        "absolutePath": "src/utils/RocketNodeStakingInterface.sol",
        "file": "./utils/RocketNodeStakingInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30533,
        "sourceUnit": 31368,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30532,
        "nodeType": "ContractDefinition",
        "src": "761:15200:31",
        "nodes": [
          {
            "id": 29836,
            "nodeType": "VariableDeclaration",
            "src": "889:122:31",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 29830,
              "nodeType": "StructuredDocumentation",
              "src": "839:45:31",
              "text": "@dev RocketStorageInterface of rocketpool"
            },
            "mutability": "constant",
            "name": "rocketStorage",
            "nameLocation": "921:13:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RocketStorageInterface_$31563",
              "typeString": "contract RocketStorageInterface"
            },
            "typeName": {
              "id": 29832,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29831,
                "name": "RocketStorageInterface",
                "nameLocations": [
                  "889:22:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31563,
                "src": "889:22:31"
              },
              "referencedDeclaration": 31563,
              "src": "889:22:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RocketStorageInterface_$31563",
                "typeString": "contract RocketStorageInterface"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831643866386630306366613637353864376245373833333636383437383846623065653046613436",
                  "id": 29834,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "968:42:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1d8f8f00cfa6758d7bE78336684788Fb0ee0Fa46"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29833,
                "name": "RocketStorageInterface",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31563,
                "src": "945:22:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_RocketStorageInterface_$31563_$",
                  "typeString": "type(contract RocketStorageInterface)"
                }
              },
              "id": 29835,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "945:66:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RocketStorageInterface_$31563",
                "typeString": "contract RocketStorageInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29840,
            "nodeType": "VariableDeclaration",
            "src": "1048:53:31",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 29837,
              "nodeType": "StructuredDocumentation",
              "src": "1018:25:31",
              "text": "@notice Contract name"
            },
            "functionSelector": "06fdde03",
            "mutability": "constant",
            "name": "name",
            "nameLocation": "1071:4:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 29838,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1048:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "426c6f636b736361706520536f6c6f205661756c74",
              "id": 29839,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1078:23:31",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6015f52e391537cff43d65f44acb0557c3da9762490dd3d191e9d490025b2847",
                "typeString": "literal_string \"Blockscape Solo Vault\""
              },
              "value": "Blockscape Solo Vault"
            },
            "visibility": "public"
          },
          {
            "id": 29844,
            "nodeType": "VariableDeclaration",
            "src": "1140:37:31",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 29841,
              "nodeType": "StructuredDocumentation",
              "src": "1108:27:31",
              "text": "@notice Contract symbol"
            },
            "functionSelector": "95d89b41",
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "1163:6:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 29842,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1140:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "425356",
              "id": 29843,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1172:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_461172c92cee5274f34826f70861578ee76ece078643ef285832ecdd4c053844",
                "typeString": "literal_string \"BSV\""
              },
              "value": "BSV"
            },
            "visibility": "public"
          },
          {
            "id": 29848,
            "nodeType": "VariableDeclaration",
            "src": "1236:85:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29845,
              "nodeType": "StructuredDocumentation",
              "src": "1184:47:31",
              "text": "@notice Blockscape Rocket Pool Node Address"
            },
            "mutability": "mutable",
            "name": "blockscapeRocketPoolNode",
            "nameLocation": "1244:24:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29846,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846363133326635333241426333393032454132446361453766384437464343644637426134393832",
              "id": 29847,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1279:42:31",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xF6132f532ABc3902EA2DcaE7f8D7FCCdF7Ba4982"
            },
            "visibility": "internal"
          },
          {
            "id": 29854,
            "nodeType": "VariableDeclaration",
            "src": "1372:35:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29849,
              "nodeType": "StructuredDocumentation",
              "src": "1328:39:31",
              "text": "@notice Current inital Withdraw Fee"
            },
            "mutability": "mutable",
            "name": "initWithdrawFee",
            "nameLocation": "1380:15:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29850,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1372:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_20000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000"
              },
              "id": 29853,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3230",
                "id": 29851,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1398:2:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_20_by_1",
                  "typeString": "int_const 20"
                },
                "value": "20"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653138",
                "id": 29852,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1403:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "value": "1e18"
              },
              "src": "1398:9:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000000_by_1",
                "typeString": "int_const 20000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29858,
            "nodeType": "VariableDeclaration",
            "src": "1464:30:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29855,
              "nodeType": "StructuredDocumentation",
              "src": "1414:45:31",
              "text": "@notice Current Rocketpool Minipool Limit"
            },
            "mutability": "mutable",
            "name": "curETHlimit",
            "nameLocation": "1472:11:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1464:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3136",
              "id": 29857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1486:8:31",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16000000000000000000_by_1",
                "typeString": "int_const 16000000000000000000"
              },
              "value": "16"
            },
            "visibility": "internal"
          },
          {
            "id": 29862,
            "nodeType": "VariableDeclaration",
            "src": "1697:28:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29859,
              "nodeType": "StructuredDocumentation",
              "src": "1501:191:31",
              "text": "@notice state of the Solo Vault Pool\n@dev is `false` when pool is full, will be reopened, as soon as \nthe backend controller withdraws & transfers the stake"
            },
            "mutability": "mutable",
            "name": "allowPubDeposit",
            "nameLocation": "1702:15:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 29860,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1697:4:31",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 29861,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1720:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "id": 29866,
            "nodeType": "VariableDeclaration",
            "src": "1853:19:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29863,
              "nodeType": "StructuredDocumentation",
              "src": "1732:116:31",
              "text": "@notice initial tokenID\n@dev the tokenID is the same as the tokenID of the pool (poolID)"
            },
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "1861:7:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29864,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1853:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 29865,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1871:1:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 29879,
            "nodeType": "VariableDeclaration",
            "src": "1963:159:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29867,
              "nodeType": "StructuredDocumentation",
              "src": "1878:80:31",
              "text": "@dev this is a given way to always retrieve the most up-to-date node address"
            },
            "mutability": "mutable",
            "name": "rocketNodeStakingAddress",
            "nameLocation": "1971:24:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 29868,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1963:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "hexValue": "636f6e74726163742e61646472657373",
                          "id": 29874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2071:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                            "typeString": "literal_string \"contract.address\""
                          },
                          "value": "contract.address"
                        },
                        {
                          "hexValue": "726f636b65744e6f64655374616b696e67",
                          "id": 29875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ee687a6ce1ef040844cb11ecf02735c7ba426347e21292cb1983a2fbda22fd8a",
                            "typeString": "literal_string \"rocketNodeStaking\""
                          },
                          "value": "rocketNodeStaking"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                            "typeString": "literal_string \"contract.address\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ee687a6ce1ef040844cb11ecf02735c7ba426347e21292cb1983a2fbda22fd8a",
                            "typeString": "literal_string \"rocketNodeStaking\""
                          }
                        ],
                        "expression": {
                          "id": 29872,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "2054:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 29873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2058:12:31",
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "src": "2054:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 29876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2054:57:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "id": 29871,
                    "name": "keccak256",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -8,
                    "src": "2044:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                      "typeString": "function (bytes memory) pure returns (bytes32)"
                    }
                  },
                  "id": 29877,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2044:68:31",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                ],
                "expression": {
                  "id": 29869,
                  "name": "rocketStorage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 29836,
                  "src": "2006:13:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RocketStorageInterface_$31563",
                    "typeString": "contract RocketStorageInterface"
                  }
                },
                "id": 29870,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "2020:10:31",
                "memberName": "getAddress",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 31394,
                "src": "2006:24:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                  "typeString": "function (bytes32) view external returns (address)"
                }
              },
              "id": 29878,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2006:116:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29886,
            "nodeType": "VariableDeclaration",
            "src": "2188:107:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29880,
              "nodeType": "StructuredDocumentation",
              "src": "2128:55:31",
              "text": "@dev rocketpool contract interface for interactions"
            },
            "mutability": "mutable",
            "name": "rocketNodeStaking",
            "nameLocation": "2215:17:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
              "typeString": "contract RocketNodeStakingInterface"
            },
            "typeName": {
              "id": 29882,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29881,
                "name": "RocketNodeStakingInterface",
                "nameLocations": [
                  "2188:26:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31367,
                "src": "2188:26:31"
              },
              "referencedDeclaration": 31367,
              "src": "2188:26:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                "typeString": "contract RocketNodeStakingInterface"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 29884,
                  "name": "rocketNodeStakingAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 29879,
                  "src": "2270:24:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 29883,
                "name": "RocketNodeStakingInterface",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 31367,
                "src": "2243:26:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_RocketNodeStakingInterface_$31367_$",
                  "typeString": "type(contract RocketNodeStakingInterface)"
                }
              },
              "id": 29885,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2243:52:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                "typeString": "contract RocketNodeStakingInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29897,
            "nodeType": "StructDefinition",
            "src": "2331:176:31",
            "nodes": [],
            "canonicalName": "BlockscapeSoloVault.Metadata",
            "members": [
              {
                "constant": false,
                "id": 29888,
                "mutability": "mutable",
                "name": "stakedETH",
                "nameLocation": "2365:9:31",
                "nodeType": "VariableDeclaration",
                "scope": 29897,
                "src": "2357:17:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29887,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2357:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29890,
                "mutability": "mutable",
                "name": "stakedTimestamp",
                "nameLocation": "2392:15:31",
                "nodeType": "VariableDeclaration",
                "scope": 29897,
                "src": "2384:23:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29889,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2384:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29892,
                "mutability": "mutable",
                "name": "institution",
                "nameLocation": "2422:11:31",
                "nodeType": "VariableDeclaration",
                "scope": 29897,
                "src": "2417:16:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 29891,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2417:4:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29894,
                "mutability": "mutable",
                "name": "institutionName",
                "nameLocation": "2451:15:31",
                "nodeType": "VariableDeclaration",
                "scope": 29897,
                "src": "2443:23:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29893,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2443:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29896,
                "mutability": "mutable",
                "name": "institutionVerified",
                "nameLocation": "2481:19:31",
                "nodeType": "VariableDeclaration",
                "scope": 29897,
                "src": "2476:24:31",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 29895,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2476:4:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Metadata",
            "nameLocation": "2338:8:31",
            "scope": 30532,
            "visibility": "public"
          },
          {
            "id": 29903,
            "nodeType": "VariableDeclaration",
            "src": "2558:46:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29898,
              "nodeType": "StructuredDocumentation",
              "src": "2513:40:31",
              "text": "@dev Mappings of tokenID to Metadata"
            },
            "mutability": "mutable",
            "name": "tokenIDtoMetadata",
            "nameLocation": "2587:17:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
              "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata)"
            },
            "typeName": {
              "id": 29902,
              "keyType": {
                "id": 29899,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2566:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2558:28:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
                "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata)"
              },
              "valueType": {
                "id": 29901,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 29900,
                  "name": "Metadata",
                  "nameLocations": [
                    "2577:8:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29897,
                  "src": "2577:8:31"
                },
                "referencedDeclaration": 29897,
                "src": "2577:8:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Metadata_$29897_storage_ptr",
                  "typeString": "struct BlockscapeSoloVault.Metadata"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29908,
            "nodeType": "VariableDeclaration",
            "src": "2750:44:31",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29904,
              "nodeType": "StructuredDocumentation",
              "src": "2704:41:31",
              "text": "@dev Mappings of tokenID to Validator"
            },
            "mutability": "mutable",
            "name": "tokenIDtoValidator",
            "nameLocation": "2776:18:31",
            "scope": 30532,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
              "typeString": "mapping(uint256 => bytes)"
            },
            "typeName": {
              "id": 29907,
              "keyType": {
                "id": 29905,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2758:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2750:25:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                "typeString": "mapping(uint256 => bytes)"
              },
              "valueType": {
                "id": 29906,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "2769:5:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 29915,
            "nodeType": "EventDefinition",
            "src": "2904:64:31",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29909,
              "nodeType": "StructuredDocumentation",
              "src": "2801:98:31",
              "text": "@dev event for when a batch is tried to withdrawn but not enough rpl\n are available yet"
            },
            "eventSelector": "6cac971587f3485cf88026d10806eb012734ef89e176a8317db787673df0bc86",
            "name": "RPLStakeRequired",
            "nameLocation": "2910:16:31",
            "parameters": {
              "id": 29914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29911,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availRPL",
                  "nameLocation": "2935:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29915,
                  "src": "2927:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29913,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_requiredRPL",
                  "nameLocation": "2954:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29915,
                  "src": "2946:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:41:31"
            }
          },
          {
            "id": 29926,
            "nodeType": "EventDefinition",
            "src": "3032:135:31",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29916,
              "nodeType": "StructuredDocumentation",
              "src": "2975:52:31",
              "text": "@dev event for when a user requests a withdrawal"
            },
            "eventSelector": "57e8bc4c74baca16ab16c5cc83fa0bc416b230ea2a49969e56a6fe1b5ea5a863",
            "name": "UserRequestedWithdrawal",
            "nameLocation": "3038:23:31",
            "parameters": {
              "id": 29925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29918,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "3079:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29926,
                  "src": "3071:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3071:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29920,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3105:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29926,
                  "src": "3097:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3097:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29922,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "3128:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29926,
                  "src": "3120:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29924,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_stakedETH",
                  "nameLocation": "3150:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29926,
                  "src": "3142:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3061:105:31"
            }
          },
          {
            "id": 29931,
            "nodeType": "EventDefinition",
            "src": "3226:41:31",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29927,
              "nodeType": "StructuredDocumentation",
              "src": "3173:48:31",
              "text": "@dev event for when the ETH limit is changed"
            },
            "eventSelector": "f5ef0716d925ac1ef70d8b610f013c7fd7cd03f9120fb486f0c4f18b4ef6f5c5",
            "name": "ETHLimitChanged",
            "nameLocation": "3232:15:31",
            "parameters": {
              "id": 29930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29929,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newLimit",
                  "nameLocation": "3256:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29931,
                  "src": "3248:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3247:19:31"
            }
          },
          {
            "id": 29936,
            "nodeType": "EventDefinition",
            "src": "3340:56:31",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 29932,
              "nodeType": "StructuredDocumentation",
              "src": "3273:62:31",
              "text": "@dev event for when the RocketPool Node Address is changed"
            },
            "eventSelector": "234e4926e7311948b723292a80f6b0aa228047bf0ef59c361707c3e91e0e33a2",
            "name": "RocketPoolNodeAddressChanged",
            "nameLocation": "3346:28:31",
            "parameters": {
              "id": 29935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29934,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newAddress",
                  "nameLocation": "3383:11:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29936,
                  "src": "3375:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3375:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3374:21:31"
            }
          },
          {
            "id": 29939,
            "nodeType": "ErrorDefinition",
            "src": "3468:26:31",
            "nodes": [],
            "documentation": {
              "id": 29937,
              "nodeType": "StructuredDocumentation",
              "src": "3402:61:31",
              "text": "@dev more RPL stake has to be done in order to open vault"
            },
            "errorSelector": "c7d40719",
            "name": "NotEnoughRPLStake",
            "nameLocation": "3474:17:31",
            "parameters": {
              "id": 29938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3491:2:31"
            }
          },
          {
            "id": 29947,
            "nodeType": "FunctionDefinition",
            "src": "3765:201:31",
            "nodes": [],
            "body": {
              "id": 29946,
              "nodeType": "Block",
              "src": "3964:2:31",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 29940,
              "nodeType": "StructuredDocumentation",
              "src": "3500:260:31",
              "text": "@notice each pool related vault gets its separate tokenID which depicts \nthe nft for each staker\n@dev the IPNS makes sure the nfts stay reachable via this link while \nnew nfts get added to the underlying ipfs folder"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f69706e732f6b3531717a6935757175356469766b6661327678753269373179686a336b36726d36626776676e64347130306834663830636234696d736739757932396c2f7b69647d2e6a736f6e",
                    "id": 29943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3808:141:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bba1ca916793713bf83d854442dd41232f2a5e2a6c1963135c33f690e70b17c5",
                      "typeString": "literal_string \"https://ipfs.blockscape.network/ipns/k51qzi5uqu5divkfa2vxu2i71yhj3k6rm6bgvgnd4q00h4f80cb4imsg9uy29l/{id}.json\""
                    },
                    "value": "https://ipfs.blockscape.network/ipns/k51qzi5uqu5divkfa2vxu2i71yhj3k6rm6bgvgnd4q00h4f80cb4imsg9uy29l/{id}.json"
                  }
                ],
                "id": 29944,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29942,
                  "name": "ERC1155",
                  "nameLocations": [
                    "3787:7:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26170,
                  "src": "3787:7:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "3787:172:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3776:2:31"
            },
            "returnParameters": {
              "id": 29945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3964:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29952,
            "nodeType": "ErrorDefinition",
            "src": "4133:39:31",
            "nodes": [],
            "documentation": {
              "id": 29948,
              "nodeType": "StructuredDocumentation",
              "src": "4029:99:31",
              "text": "@notice for a token the validator can only be set once otherwise revert\n with this error"
            },
            "errorSelector": "47b41d48",
            "name": "ValidatorAlreadySet",
            "nameLocation": "4139:19:31",
            "parameters": {
              "id": 29951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29950,
                  "mutability": "mutable",
                  "name": "_vali",
                  "nameLocation": "4165:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29952,
                  "src": "4159:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29949,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4159:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4158:13:31"
            }
          },
          {
            "id": 29967,
            "nodeType": "FunctionDefinition",
            "src": "4373:277:31",
            "nodes": [],
            "body": {
              "id": 29966,
              "nodeType": "Block",
              "src": "4415:235:31",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 29960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4429:24:31",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29958,
                        "name": "hasNodeEnoughRPLStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30277,
                        "src": "4430:21:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 29959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4430:23:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29964,
                  "nodeType": "IfStatement",
                  "src": "4425:56:31",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 29961,
                        "name": "NotEnoughRPLStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29939,
                        "src": "4462:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 29962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4462:19:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 29963,
                    "nodeType": "RevertStatement",
                    "src": "4455:26:31"
                  }
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "4501:143:31",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4546:44:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4571:1:31",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4574:1:31",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4564:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4564:12:31"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4564:12:31"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "allowPubDeposit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "4524:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "4518:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4518:27:31"
                        },
                        "nodeType": "YulIf",
                        "src": "4515:75:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "allowPubDeposit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "4610:20:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4632:1:31",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "4603:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4603:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4603:31:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "4524:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "4610:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 29965,
                  "nodeType": "InlineAssembly",
                  "src": "4492:152:31"
                }
              ]
            },
            "documentation": {
              "id": 29953,
              "nodeType": "StructuredDocumentation",
              "src": "4232:136:31",
              "text": "@notice makes the vault stakable again after it has been closed\n @dev is triggered when the vault can be staked at rocketpool"
            },
            "functionSelector": "f9d7afd7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29955,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4405:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "4405:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "4405:9:31"
              }
            ],
            "name": "openSoloVault",
            "nameLocation": "4382:13:31",
            "parameters": {
              "id": 29954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4395:2:31"
            },
            "returnParameters": {
              "id": 29957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4415:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29985,
            "nodeType": "FunctionDefinition",
            "src": "5001:103:31",
            "nodes": [],
            "body": {
              "id": 29984,
              "nodeType": "Block",
              "src": "5053:51:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29981,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29970,
                        "src": "5089:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 29977,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24810,
                              "src": "5071:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 29978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5071:7:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5063:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 29975,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5063:8:31",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5063:16:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 29980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5080:8:31",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5063:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 29982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5063:34:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29983,
                  "nodeType": "ExpressionStatement",
                  "src": "5063:34:31"
                }
              ]
            },
            "documentation": {
              "id": 29968,
              "nodeType": "StructuredDocumentation",
              "src": "4656:340:31",
              "text": "@notice withdraw the given amount to the deployer, triggered when the \nthe backend controller moves the stake to rocketpool\n@dev the withdraw function remains public as safety measurement to\nnot lock-in client stakes in case of contract issues\n@param _amount the amount in wei to withdraw"
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29973,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29972,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5043:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "5043:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "5043:9:31"
              }
            ],
            "name": "withdraw",
            "nameLocation": "5010:8:31",
            "parameters": {
              "id": 29971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29970,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5027:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 29985,
                  "src": "5019:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5019:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5018:17:31"
            },
            "returnParameters": {
              "id": 29974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5053:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29993,
            "nodeType": "FunctionDefinition",
            "src": "5264:125:31",
            "nodes": [],
            "body": {
              "id": 29992,
              "nodeType": "Block",
              "src": "5309:80:31",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5328:55:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "allowPubDeposit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "5349:20:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5371:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "5342:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5342:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5342:31:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "5349:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 29991,
                  "nodeType": "InlineAssembly",
                  "src": "5319:64:31"
                }
              ]
            },
            "documentation": {
              "id": 29986,
              "nodeType": "StructuredDocumentation",
              "src": "5110:149:31",
              "text": "@notice is triggered when the vault can be staked at rocketpool\n@dev future staking interactions are prevented afterwards"
            },
            "functionSelector": "63b613f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29989,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29988,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5299:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "5299:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "5299:9:31"
              }
            ],
            "name": "closeSoloVault",
            "nameLocation": "5273:14:31",
            "parameters": {
              "id": 29987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5287:2:31"
            },
            "returnParameters": {
              "id": 29990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30019,
            "nodeType": "FunctionDefinition",
            "src": "5519:1050:31",
            "nodes": [],
            "body": {
              "id": 30018,
              "nodeType": "Block",
              "src": "5577:992:31",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5597:424:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5660:34:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "curETHlimit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "5677:16:31"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "5671:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5671:23:31"
                        },
                        "variables": [
                          {
                            "name": "cel",
                            "nodeType": "YulTypedName",
                            "src": "5664:3:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5789:44:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5814:1:31",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5817:1:31",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5807:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5807:12:31"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5807:12:31"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "allowPubDeposit.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "5766:20:31"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "5760:5:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5760:27:31"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5753:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5753:35:31"
                        },
                        "nodeType": "YulIf",
                        "src": "5750:83:31"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5967:44:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5992:1:31",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5995:1:31",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5985:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5985:12:31"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5985:12:31"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "callvalue",
                                    "nodeType": "YulIdentifier",
                                    "src": "5948:9:31"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5948:11:31"
                                },
                                {
                                  "name": "cel",
                                  "nodeType": "YulIdentifier",
                                  "src": "5961:3:31"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "5945:2:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5945:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5938:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5938:28:31"
                        },
                        "nodeType": "YulIf",
                        "src": "5935:76:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "5766:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29858,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "5677:16:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 29999,
                  "nodeType": "InlineAssembly",
                  "src": "5588:433:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 30001,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6112:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6116:5:31",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6112:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 30003,
                          "name": "curETHlimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29858,
                          "src": "6125:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6112:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420455448",
                        "id": 30005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6138:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bdfce708c38b38e49561819ad1e311f4e27ccdb7e08770846f15d78c1e72db1",
                          "typeString": "literal_string \"Insufficient ETH\""
                        },
                        "value": "Insufficient ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bdfce708c38b38e49561819ad1e311f4e27ccdb7e08770846f15d78c1e72db1",
                          "typeString": "literal_string \"Insufficient ETH\""
                        }
                      ],
                      "id": 30000,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6104:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:53:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30007,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:53:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6250:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6254:5:31",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6250:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 30011,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29866,
                        "src": "6261:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30008,
                      "name": "_metadataSoloVaultInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30497,
                      "src": "6223:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 30012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6223:46:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30013,
                  "nodeType": "ExpressionStatement",
                  "src": "6223:46:31"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6289:211:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6339:40:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "tokenID.slot",
                              "nodeType": "YulIdentifier",
                              "src": "6366:12:31"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "6360:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6360:19:31"
                        },
                        "variables": [
                          {
                            "name": "tokenID_value",
                            "nodeType": "YulTypedName",
                            "src": "6343:13:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6392:46:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "tokenID_value",
                              "nodeType": "YulIdentifier",
                              "src": "6421:13:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6436:1:31",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6417:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6417:21:31"
                        },
                        "variables": [
                          {
                            "name": "new_tokenID_value",
                            "nodeType": "YulTypedName",
                            "src": "6396:17:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "tokenID.slot",
                              "nodeType": "YulIdentifier",
                              "src": "6458:12:31"
                            },
                            {
                              "name": "new_tokenID_value",
                              "nodeType": "YulIdentifier",
                              "src": "6472:17:31"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "6451:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6451:39:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6451:39:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29866,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "6366:12:31",
                      "suffix": "slot",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29866,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "6458:12:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 30014,
                  "nodeType": "InlineAssembly",
                  "src": "6280:220:31"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30015,
                      "name": "_closeSoloVaultInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30503,
                      "src": "6537:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:25:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30017,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:25:31"
                }
              ]
            },
            "documentation": {
              "id": 29994,
              "nodeType": "StructuredDocumentation",
              "src": "5395:119:31",
              "text": "@notice used when staking eth into the contract\n @dev the vault must be open and equal the depositing amount"
            },
            "functionSelector": "ccae8a8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29997,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29996,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5564:12:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24912,
                  "src": "5564:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "5564:12:31"
              }
            ],
            "name": "depositSoloVault",
            "nameLocation": "5528:16:31",
            "parameters": {
              "id": 29995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5544:2:31"
            },
            "returnParameters": {
              "id": 29998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5577:0:31"
            },
            "scope": 30532,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30031,
            "nodeType": "FunctionDefinition",
            "src": "6687:244:31",
            "nodes": [],
            "body": {
              "id": 30030,
              "nodeType": "Block",
              "src": "6731:200:31",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6750:143:31",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6839:44:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6864:1:31",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6867:1:31",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6857:6:31"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6857:12:31"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6857:12:31"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "allowPubDeposit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "6817:20:31"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "6811:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6811:27:31"
                        },
                        "nodeType": "YulIf",
                        "src": "6808:75:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "6817:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 30025,
                  "nodeType": "InlineAssembly",
                  "src": "6741:152:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30027,
                        "name": "curETHlimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29858,
                        "src": "6912:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30026,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29985,
                      "src": "6903:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 30028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6903:21:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30029,
                  "nodeType": "ExpressionStatement",
                  "src": "6903:21:31"
                }
              ]
            },
            "documentation": {
              "id": 30020,
              "nodeType": "StructuredDocumentation",
              "src": "6575:107:31",
              "text": "@notice this gets triggered by the backend controller when the vault \nis closed"
            },
            "functionSelector": "f6b21af2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30023,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30022,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6721:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "6721:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "6721:9:31"
              }
            ],
            "name": "withdrawBatch",
            "nameLocation": "6696:13:31",
            "parameters": {
              "id": 30021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6709:2:31"
            },
            "returnParameters": {
              "id": 30024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6731:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30086,
            "nodeType": "FunctionDefinition",
            "src": "7168:559:31",
            "nodes": [],
            "body": {
              "id": 30085,
              "nodeType": "Block",
              "src": "7270:457:31",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 30047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7284:48:31",
                    "subExpression": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 30042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7299:2:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        {
                          "baseExpression": {
                            "id": 30043,
                            "name": "tokenIDtoValidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29908,
                            "src": "7303:18:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                              "typeString": "mapping(uint256 => bytes storage ref)"
                            }
                          },
                          "id": 30045,
                          "indexExpression": {
                            "id": 30044,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30034,
                            "src": "7322:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7303:28:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        ],
                        "id": 30041,
                        "name": "_compareBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30531,
                        "src": "7285:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (bytes memory,bytes memory) pure returns (bool)"
                        }
                      },
                      "id": 30046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7285:47:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30055,
                  "nodeType": "IfStatement",
                  "src": "7280:135:31",
                  "trueBody": {
                    "id": 30054,
                    "nodeType": "Block",
                    "src": "7334:81:31",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 30049,
                                "name": "tokenIDtoValidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29908,
                                "src": "7375:18:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                                  "typeString": "mapping(uint256 => bytes storage ref)"
                                }
                              },
                              "id": 30051,
                              "indexExpression": {
                                "id": 30050,
                                "name": "_tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30034,
                                "src": "7394:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7375:28:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "id": 30048,
                            "name": "ValidatorAlreadySet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29952,
                            "src": "7355:19:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) pure"
                            }
                          },
                          "id": 30052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7355:49:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30053,
                        "nodeType": "RevertStatement",
                        "src": "7348:56:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 30060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30056,
                        "name": "tokenIDtoValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29908,
                        "src": "7424:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                          "typeString": "mapping(uint256 => bytes storage ref)"
                        }
                      },
                      "id": 30058,
                      "indexExpression": {
                        "id": 30057,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30034,
                        "src": "7443:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7424:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30059,
                      "name": "_vali",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30036,
                      "src": "7455:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "7424:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 30061,
                  "nodeType": "ExpressionStatement",
                  "src": "7424:36:31"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30062,
                      "name": "hasNodeEnoughRPLStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30277,
                      "src": "7475:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 30063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7475:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 30083,
                    "nodeType": "Block",
                    "src": "7546:175:31",
                    "statements": [
                      {
                        "assignments": [
                          30069
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30069,
                            "mutability": "mutable",
                            "name": "availableRPL",
                            "nameLocation": "7568:12:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 30083,
                            "src": "7560:20:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30068,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7560:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30072,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30070,
                            "name": "getAvailableRPLStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30204,
                            "src": "7583:20:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 30071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7583:22:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7560:45:31"
                      },
                      {
                        "assignments": [
                          30074
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30074,
                            "mutability": "mutable",
                            "name": "reqRPL",
                            "nameLocation": "7627:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 30083,
                            "src": "7619:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30073,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7619:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30077,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30075,
                            "name": "getReqRPLStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30237,
                            "src": "7636:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 30076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7636:16:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7619:33:31"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 30079,
                              "name": "availableRPL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30069,
                              "src": "7689:12:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30080,
                              "name": "reqRPL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30074,
                              "src": "7703:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30078,
                            "name": "RPLStakeRequired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29915,
                            "src": "7672:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7672:38:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30082,
                        "nodeType": "EmitStatement",
                        "src": "7667:43:31"
                      }
                    ]
                  },
                  "id": 30084,
                  "nodeType": "IfStatement",
                  "src": "7471:250:31",
                  "trueBody": {
                    "id": 30067,
                    "nodeType": "Block",
                    "src": "7500:40:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30064,
                            "name": "openSoloVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29967,
                            "src": "7514:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 30065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7514:15:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30066,
                        "nodeType": "ExpressionStatement",
                        "src": "7514:15:31"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 30032,
              "nodeType": "StructuredDocumentation",
              "src": "6937:226:31",
              "text": "@notice set validator address for given token id\n@dev works only once and emits, then reverts\n@param _tokenID Identifier of the vault\n@param _vali the current address of the validator"
            },
            "functionSelector": "8d8b7ca9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30039,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30038,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7256:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "7256:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "7256:9:31"
              }
            ],
            "name": "updateValidator",
            "nameLocation": "7177:15:31",
            "parameters": {
              "id": 30037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30034,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7201:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30086,
                  "src": "7193:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7193:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30036,
                  "mutability": "mutable",
                  "name": "_vali",
                  "nameLocation": "7224:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30086,
                  "src": "7211:18:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30035,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7211:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7192:38:31"
            },
            "returnParameters": {
              "id": 30040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7270:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30123,
            "nodeType": "FunctionDefinition",
            "src": "7913:469:31",
            "nodes": [],
            "body": {
              "id": 30122,
              "nodeType": "Block",
              "src": "8015:367:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30095,
                      "mutability": "mutable",
                      "name": "curWithdrawFee",
                      "nameLocation": "8033:14:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30122,
                      "src": "8025:22:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8025:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30099,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30097,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30089,
                        "src": "8074:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30096,
                      "name": "viewUserRequestWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30345,
                      "src": "8050:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 30098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8050:33:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8025:58:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8108:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8112:6:31",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8108:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30103,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30089,
                          "src": "8120:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30100,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25063,
                        "src": "8098:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 30104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8098:31:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 30105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8133:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "8098:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30119,
                  "nodeType": "IfStatement",
                  "src": "8094:250:31",
                  "trueBody": {
                    "id": 30118,
                    "nodeType": "Block",
                    "src": "8136:208:31",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 30108,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30089,
                              "src": "8196:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 30109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8222:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8226:6:31",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8222:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30111,
                              "name": "curWithdrawFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30095,
                              "src": "8250:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 30112,
                                  "name": "tokenIDtoMetadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29903,
                                  "src": "8282:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
                                    "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata storage ref)"
                                  }
                                },
                                "id": 30114,
                                "indexExpression": {
                                  "id": 30113,
                                  "name": "_tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30089,
                                  "src": "8300:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8282:27:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Metadata_$29897_storage",
                                  "typeString": "struct BlockscapeSoloVault.Metadata storage ref"
                                }
                              },
                              "id": 30115,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8310:9:31",
                              "memberName": "stakedETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29888,
                              "src": "8282:37:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30107,
                            "name": "UserRequestedWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29926,
                            "src": "8155:23:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256)"
                            }
                          },
                          "id": 30116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8155:178:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30117,
                        "nodeType": "EmitStatement",
                        "src": "8150:183:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 30120,
                    "name": "curWithdrawFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30095,
                    "src": "8361:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30093,
                  "id": 30121,
                  "nodeType": "Return",
                  "src": "8354:21:31"
                }
              ]
            },
            "documentation": {
              "id": 30087,
              "nodeType": "StructuredDocumentation",
              "src": "7734:174:31",
              "text": "@notice used when user wants to unstake\n@param _tokenID which pool the staker wants to unstake\n@return _amount how much the user gets back"
            },
            "functionSelector": "6ea5ba1a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userRequestWithdraw",
            "nameLocation": "7922:19:31",
            "parameters": {
              "id": 30090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30089,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "7950:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30123,
                  "src": "7942:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7942:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7941:18:31"
            },
            "returnParameters": {
              "id": 30093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30092,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8002:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30123,
                  "src": "7994:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7994:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7993:17:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30140,
            "nodeType": "FunctionDefinition",
            "src": "8622:143:31",
            "nodes": [],
            "body": {
              "id": 30139,
              "nodeType": "Block",
              "src": "8684:81:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30131,
                      "name": "curETHlimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29858,
                      "src": "8694:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30132,
                      "name": "_newLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30126,
                      "src": "8708:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8694:23:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30134,
                  "nodeType": "ExpressionStatement",
                  "src": "8694:23:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 30136,
                        "name": "_newLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30126,
                        "src": "8748:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30135,
                      "name": "ETHLimitChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29931,
                      "src": "8732:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 30137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8732:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30138,
                  "nodeType": "EmitStatement",
                  "src": "8727:31:31"
                }
              ]
            },
            "documentation": {
              "id": 30124,
              "nodeType": "StructuredDocumentation",
              "src": "8435:182:31",
              "text": "@notice the limit might change in the future if rocketpool supports \nsmaller pool sizes\n@param _newLimit the new pool amount which has to be staked"
            },
            "functionSelector": "b1251026",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30128,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8674:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "8674:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "8674:9:31"
              }
            ],
            "name": "changeETHLimit",
            "nameLocation": "8631:14:31",
            "parameters": {
              "id": 30127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30126,
                  "mutability": "mutable",
                  "name": "_newLimit",
                  "nameLocation": "8654:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30140,
                  "src": "8646:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8646:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8645:19:31"
            },
            "returnParameters": {
              "id": 30130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8684:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30153,
            "nodeType": "FunctionDefinition",
            "src": "8893:102:31",
            "nodes": [],
            "body": {
              "id": 30152,
              "nodeType": "Block",
              "src": "8953:42:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30148,
                      "name": "initWithdrawFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29854,
                      "src": "8963:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30149,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30143,
                      "src": "8981:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8963:25:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30151,
                  "nodeType": "ExpressionStatement",
                  "src": "8963:25:31"
                }
              ]
            },
            "documentation": {
              "id": 30141,
              "nodeType": "StructuredDocumentation",
              "src": "8771:117:31",
              "text": "@notice the withdraw fee might be changed in the future\n@param _amount the new fee in wei"
            },
            "functionSelector": "b6ac642a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30145,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8943:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "8943:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "8943:9:31"
              }
            ],
            "name": "setWithdrawFee",
            "nameLocation": "8902:14:31",
            "parameters": {
              "id": 30144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30143,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8925:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30153,
                  "src": "8917:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8917:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8916:17:31"
            },
            "returnParameters": {
              "id": 30147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8953:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30170,
            "nodeType": "FunctionDefinition",
            "src": "9169:259:31",
            "nodes": [],
            "body": {
              "id": 30169,
              "nodeType": "Block",
              "src": "9283:145:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30161,
                      "name": "blockscapeRocketPoolNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29848,
                      "src": "9293:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30162,
                      "name": "_newBlockscapeRocketPoolNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30156,
                      "src": "9320:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9293:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30164,
                  "nodeType": "ExpressionStatement",
                  "src": "9293:55:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 30166,
                        "name": "_newBlockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30156,
                        "src": "9392:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30165,
                      "name": "RocketPoolNodeAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29936,
                      "src": "9363:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9363:58:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30168,
                  "nodeType": "EmitStatement",
                  "src": "9358:63:31"
                }
              ]
            },
            "documentation": {
              "id": 30154,
              "nodeType": "StructuredDocumentation",
              "src": "9001:163:31",
              "text": "@notice gets used if rocket pool changes the address of their node\n@param _newBlockscapeRocketPoolNode the new address of the pool node"
            },
            "functionSelector": "f6b76685",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30158,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9269:9:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "9269:9:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "9269:9:31"
              }
            ],
            "name": "setBlockscapeRocketPoolNode",
            "nameLocation": "9178:27:31",
            "parameters": {
              "id": 30157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30156,
                  "mutability": "mutable",
                  "name": "_newBlockscapeRocketPoolNode",
                  "nameLocation": "9214:28:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30170,
                  "src": "9206:36:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9206:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9205:38:31"
            },
            "returnParameters": {
              "id": 30160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9283:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30179,
            "nodeType": "FunctionDefinition",
            "src": "9681:89:31",
            "nodes": [],
            "body": {
              "id": 30178,
              "nodeType": "Block",
              "src": "9731:39:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30176,
                    "name": "allowPubDeposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29862,
                    "src": "9748:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30175,
                  "id": 30177,
                  "nodeType": "Return",
                  "src": "9741:22:31"
                }
              ]
            },
            "documentation": {
              "id": 30171,
              "nodeType": "StructuredDocumentation",
              "src": "9464:212:31",
              "text": "@notice does the vault currently allow depositing\n@dev the backend controller will reopen then vault after the stake\nhave been transferred\n@return is depositing enabled"
            },
            "functionSelector": "ec36d35e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultOpen",
            "nameLocation": "9690:11:31",
            "parameters": {
              "id": 30172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9701:2:31"
            },
            "returnParameters": {
              "id": 30175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30179,
                  "src": "9725:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30173,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9725:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9724:6:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30188,
            "nodeType": "FunctionDefinition",
            "src": "9878:95:31",
            "nodes": [],
            "body": {
              "id": 30187,
              "nodeType": "Block",
              "src": "9938:35:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30185,
                    "name": "curETHlimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29858,
                    "src": "9955:11:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30184,
                  "id": 30186,
                  "nodeType": "Return",
                  "src": "9948:18:31"
                }
              ]
            },
            "documentation": {
              "id": 30180,
              "nodeType": "StructuredDocumentation",
              "src": "9776:97:31",
              "text": "@notice the current depositing threshold\n@return is depositing enabled"
            },
            "functionSelector": "354228be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentEthLimit",
            "nameLocation": "9887:18:31",
            "parameters": {
              "id": 30181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9905:2:31"
            },
            "returnParameters": {
              "id": 30184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30188,
                  "src": "9929:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9929:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9928:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30204,
            "nodeType": "FunctionDefinition",
            "src": "10199:213:31",
            "nodes": [],
            "body": {
              "id": 30203,
              "nodeType": "Block",
              "src": "10261:151:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30195,
                      "mutability": "mutable",
                      "name": "nodeRPLStake",
                      "nameLocation": "10279:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30203,
                      "src": "10271:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10271:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30198,
                        "name": "blockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29848,
                        "src": "10341:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30196,
                        "name": "rocketNodeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29886,
                        "src": "10294:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                          "typeString": "contract RocketNodeStakingInterface"
                        }
                      },
                      "id": 30197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10312:15:31",
                      "memberName": "getNodeRPLStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31291,
                      "src": "10294:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10294:81:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10271:104:31"
                },
                {
                  "expression": {
                    "id": 30201,
                    "name": "nodeRPLStake",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30195,
                    "src": "10393:12:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30193,
                  "id": 30202,
                  "nodeType": "Return",
                  "src": "10386:19:31"
                }
              ]
            },
            "documentation": {
              "id": 30189,
              "nodeType": "StructuredDocumentation",
              "src": "9979:215:31",
              "text": "@notice show the currently available RPL stake which is needed to create \na pool on rocketscape\n@return the current available RPL stake with already deducted minimum\nstake"
            },
            "functionSelector": "9fe8d3aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableRPLStake",
            "nameLocation": "10208:20:31",
            "parameters": {
              "id": 30190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10228:2:31"
            },
            "returnParameters": {
              "id": 30193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30204,
                  "src": "10252:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10252:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10251:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30237,
            "nodeType": "FunctionDefinition",
            "src": "10635:426:31",
            "nodes": [],
            "body": {
              "id": 30236,
              "nodeType": "Block",
              "src": "10691:370:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30211,
                      "mutability": "mutable",
                      "name": "minipoolLimit",
                      "nameLocation": "10709:13:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30236,
                      "src": "10701:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10701:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30216,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30214,
                        "name": "blockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29848,
                        "src": "10777:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30212,
                        "name": "rocketNodeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29886,
                        "src": "10725:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                          "typeString": "contract RocketNodeStakingInterface"
                        }
                      },
                      "id": 30213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10743:20:31",
                      "memberName": "getNodeMinipoolLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31342,
                      "src": "10725:38:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10725:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10701:110:31"
                },
                {
                  "assignments": [
                    30218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30218,
                      "mutability": "mutable",
                      "name": "minimumRPLStake",
                      "nameLocation": "10830:15:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30236,
                      "src": "10822:23:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10822:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30223,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30221,
                        "name": "blockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29848,
                        "src": "10902:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30219,
                        "name": "rocketNodeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29886,
                        "src": "10848:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                          "typeString": "contract RocketNodeStakingInterface"
                        }
                      },
                      "id": 30220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10866:22:31",
                      "memberName": "getNodeMinimumRPLStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31328,
                      "src": "10848:40:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10848:88:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10822:114:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30224,
                      "name": "minipoolLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30211,
                      "src": "10951:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 30225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10968:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10951:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30230,
                  "nodeType": "IfStatement",
                  "src": "10947:57:31",
                  "trueBody": {
                    "id": 30229,
                    "nodeType": "Block",
                    "src": "10971:33:31",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 30227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10992:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 30209,
                        "id": 30228,
                        "nodeType": "Return",
                        "src": "10985:8:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30231,
                          "name": "minimumRPLStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30218,
                          "src": "11022:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 30232,
                          "name": "minipoolLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30211,
                          "src": "11040:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11022:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 30234,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11021:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30209,
                  "id": 30235,
                  "nodeType": "Return",
                  "src": "11014:40:31"
                }
              ]
            },
            "documentation": {
              "id": 30205,
              "nodeType": "StructuredDocumentation",
              "src": "10418:212:31",
              "text": "@notice calculates the required RPL needed to stake according to \npoolsize\n@dev if the minipoollimit is `0` then the required stake is also `0`!\n@return the RPLs needed"
            },
            "functionSelector": "02943854",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReqRPLStake",
            "nameLocation": "10644:14:31",
            "parameters": {
              "id": 30206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10658:2:31"
            },
            "returnParameters": {
              "id": 30209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30237,
                  "src": "10682:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10682:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10681:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30277,
            "nodeType": "FunctionDefinition",
            "src": "11133:475:31",
            "nodes": [],
            "body": {
              "id": 30276,
              "nodeType": "Block",
              "src": "11193:415:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30244,
                      "mutability": "mutable",
                      "name": "minipoolLimit",
                      "nameLocation": "11211:13:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30276,
                      "src": "11203:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11203:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30249,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30247,
                        "name": "blockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29848,
                        "src": "11279:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30245,
                        "name": "rocketNodeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29886,
                        "src": "11227:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                          "typeString": "contract RocketNodeStakingInterface"
                        }
                      },
                      "id": 30246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11245:20:31",
                      "memberName": "getNodeMinipoolLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31342,
                      "src": "11227:38:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11227:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11203:110:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30250,
                      "name": "minipoolLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30244,
                      "src": "11327:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 30251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11344:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11327:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30256,
                  "nodeType": "IfStatement",
                  "src": "11323:61:31",
                  "trueBody": {
                    "id": 30255,
                    "nodeType": "Block",
                    "src": "11347:37:31",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 30253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11368:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 30242,
                        "id": 30254,
                        "nodeType": "Return",
                        "src": "11361:12:31"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    30258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30258,
                      "mutability": "mutable",
                      "name": "nodeRPLStake",
                      "nameLocation": "11402:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30276,
                      "src": "11394:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11394:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30263,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30261,
                        "name": "blockscapeRocketPoolNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29848,
                        "src": "11464:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30259,
                        "name": "rocketNodeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29886,
                        "src": "11417:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RocketNodeStakingInterface_$31367",
                          "typeString": "contract RocketNodeStakingInterface"
                        }
                      },
                      "id": 30260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11435:15:31",
                      "memberName": "getNodeRPLStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31291,
                      "src": "11417:33:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 30262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11417:81:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11394:104:31"
                },
                {
                  "assignments": [
                    30265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30265,
                      "mutability": "mutable",
                      "name": "minimumReqRPL",
                      "nameLocation": "11516:13:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30276,
                      "src": "11508:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11508:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30268,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30266,
                      "name": "getReqRPLStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30237,
                      "src": "11532:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 30267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11532:16:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11508:40:31"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30269,
                            "name": "nodeRPLStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30258,
                            "src": "11567:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 30270,
                            "name": "minimumReqRPL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30265,
                            "src": "11582:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11567:28:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 30272,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11566:30:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 30273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11600:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11566:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30242,
                  "id": 30275,
                  "nodeType": "Return",
                  "src": "11559:42:31"
                }
              ]
            },
            "documentation": {
              "id": 30238,
              "nodeType": "StructuredDocumentation",
              "src": "11067:61:31",
              "text": "@notice has the node enough RPL to stake another minipool"
            },
            "functionSelector": "66f9fa3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasNodeEnoughRPLStake",
            "nameLocation": "11142:21:31",
            "parameters": {
              "id": 30239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11163:2:31"
            },
            "returnParameters": {
              "id": 30242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30277,
                  "src": "11187:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11186:6:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30345,
            "nodeType": "FunctionDefinition",
            "src": "11906:739:31",
            "nodes": [],
            "body": {
              "id": 30344,
              "nodeType": "Block",
              "src": "12023:622:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30286,
                      "mutability": "mutable",
                      "name": "curWithdrawFee",
                      "nameLocation": "12041:14:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30344,
                      "src": "12033:22:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12033:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30288,
                  "initialValue": {
                    "id": 30287,
                    "name": "initWithdrawFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29854,
                    "src": "12058:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12033:40:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 30290,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12098:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 30291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12102:6:31",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12098:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 30292,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30280,
                          "src": "12110:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30289,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25063,
                        "src": "12088:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 30293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12088:31:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 30294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12123:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12088:36:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30341,
                  "nodeType": "IfStatement",
                  "src": "12084:524:31",
                  "trueBody": {
                    "id": 30340,
                    "nodeType": "Block",
                    "src": "12126:482:31",
                    "statements": [
                      {
                        "assignments": [
                          30297
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30297,
                            "mutability": "mutable",
                            "name": "secFee",
                            "nameLocation": "12148:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 30340,
                            "src": "12140:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30296,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12140:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30302,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30298,
                                "name": "initWithdrawFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29854,
                                "src": "12158:15:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 30299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12176:8:31",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "value": "365"
                              },
                              "src": "12158:26:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 30301,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12157:28:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12140:45:31"
                      },
                      {
                        "assignments": [
                          30304
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30304,
                            "mutability": "mutable",
                            "name": "timePassed",
                            "nameLocation": "12214:10:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 30340,
                            "src": "12206:18:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30303,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12206:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30313,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 30305,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12227:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 30306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12233:9:31",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12227:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 30307,
                                    "name": "tokenIDtoMetadata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29903,
                                    "src": "12262:17:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
                                      "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata storage ref)"
                                    }
                                  },
                                  "id": 30309,
                                  "indexExpression": {
                                    "id": 30308,
                                    "name": "_tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30280,
                                    "src": "12280:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12262:27:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Metadata_$29897_storage",
                                    "typeString": "struct BlockscapeSoloVault.Metadata storage ref"
                                  }
                                },
                                "id": 30310,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12290:15:31",
                                "memberName": "stakedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29890,
                                "src": "12262:43:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 30311,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12261:45:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12227:79:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12206:100:31"
                      },
                      {
                        "assignments": [
                          30315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30315,
                            "mutability": "mutable",
                            "name": "maxTime05EthReached",
                            "nameLocation": "12329:19:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 30340,
                            "src": "12321:27:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30314,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12321:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30317,
                        "initialValue": {
                          "hexValue": "3330373437363030",
                          "id": 30316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12351:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30747600_by_1",
                            "typeString": "int_const 30747600"
                          },
                          "value": "30747600"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12321:38:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30318,
                            "name": "timePassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30304,
                            "src": "12377:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 30319,
                            "name": "maxTime05EthReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30315,
                            "src": "12391:19:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12377:33:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 30338,
                          "nodeType": "Block",
                          "src": "12507:91:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 30336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30328,
                                  "name": "curWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30286,
                                  "src": "12525:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 30334,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 30329,
                                        "name": "initWithdrawFee",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29854,
                                        "src": "12543:15:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 30332,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 30330,
                                              "name": "secFee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 30297,
                                              "src": "12562:6:31",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 30331,
                                              "name": "timePassed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 30304,
                                              "src": "12571:10:31",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "12562:19:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 30333,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "12561:21:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12543:39:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 30335,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "12542:41:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12525:58:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30337,
                              "nodeType": "ExpressionStatement",
                              "src": "12525:58:31"
                            }
                          ]
                        },
                        "id": 30339,
                        "nodeType": "IfStatement",
                        "src": "12373:225:31",
                        "trueBody": {
                          "id": 30327,
                          "nodeType": "Block",
                          "src": "12412:89:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 30325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 30321,
                                  "name": "curWithdrawFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30286,
                                  "src": "12430:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_500000000000000000_by_1",
                                    "typeString": "int_const 500000000000000000"
                                  },
                                  "id": 30324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "35",
                                    "id": 30322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12447:1:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_5_by_1",
                                      "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "31653137",
                                    "id": 30323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12451:4:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000"
                                    },
                                    "value": "1e17"
                                  },
                                  "src": "12447:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_500000000000000000_by_1",
                                    "typeString": "int_const 500000000000000000"
                                  }
                                },
                                "src": "12430:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 30326,
                              "nodeType": "ExpressionStatement",
                              "src": "12430:25:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 30342,
                    "name": "curWithdrawFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30286,
                    "src": "12624:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30284,
                  "id": 30343,
                  "nodeType": "Return",
                  "src": "12617:21:31"
                }
              ]
            },
            "documentation": {
              "id": 30278,
              "nodeType": "StructuredDocumentation",
              "src": "11614:287:31",
              "text": "@notice how much fees would the user has to pay if he would unstake now\nwithin the first year of staking the fee is 20%, afterwards 0.5%\n@param _tokenID which pool the staker wants to unstake\n@return _amount how much the user would pay on fees"
            },
            "functionSelector": "8776d1d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewUserRequestWithdraw",
            "nameLocation": "11915:23:31",
            "parameters": {
              "id": 30281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30280,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "11947:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30345,
                  "src": "11939:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11939:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11938:18:31"
            },
            "returnParameters": {
              "id": 30284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30283,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "12010:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30345,
                  "src": "12002:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12002:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12001:17:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30365,
            "nodeType": "FunctionDefinition",
            "src": "12836:280:31",
            "nodes": [],
            "body": {
              "id": 30364,
              "nodeType": "Block",
              "src": "12957:159:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 30356,
                          "name": "tokenIDtoMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29903,
                          "src": "12988:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
                            "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata storage ref)"
                          }
                        },
                        "id": 30358,
                        "indexExpression": {
                          "id": 30357,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30348,
                          "src": "13006:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12988:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$29897_storage",
                          "typeString": "struct BlockscapeSoloVault.Metadata storage ref"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 30359,
                          "name": "tokenIDtoValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29908,
                          "src": "13071:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 30361,
                        "indexExpression": {
                          "id": 30360,
                          "name": "_tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30348,
                          "src": "13090:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13071:28:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "id": 30362,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12974:135:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Metadata_$29897_storage_$_t_bytes_storage_$",
                      "typeString": "tuple(struct BlockscapeSoloVault.Metadata storage ref,bytes storage ref)"
                    }
                  },
                  "functionReturnParameters": 30355,
                  "id": 30363,
                  "nodeType": "Return",
                  "src": "12967:142:31"
                }
              ]
            },
            "documentation": {
              "id": 30346,
              "nodeType": "StructuredDocumentation",
              "src": "12650:181:31",
              "text": "@notice gets the metadata of a given pool\n@param _tokenID identifies the pool\n@return Metadata of the pool \n@return the validator address"
            },
            "functionSelector": "a574cea4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMetadata",
            "nameLocation": "12845:11:31",
            "parameters": {
              "id": 30349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30348,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "12865:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30365,
                  "src": "12857:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12857:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12856:18:31"
            },
            "returnParameters": {
              "id": 30355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30352,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30365,
                  "src": "12922:15:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$29897_memory_ptr",
                    "typeString": "struct BlockscapeSoloVault.Metadata"
                  },
                  "typeName": {
                    "id": 30351,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30350,
                      "name": "Metadata",
                      "nameLocations": [
                        "12922:8:31"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 29897,
                      "src": "12922:8:31"
                    },
                    "referencedDeclaration": 29897,
                    "src": "12922:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$29897_storage_ptr",
                      "typeString": "struct BlockscapeSoloVault.Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30365,
                  "src": "12939:12:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30353,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12939:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12921:31:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30374,
            "nodeType": "FunctionDefinition",
            "src": "13234:83:31",
            "nodes": [],
            "body": {
              "id": 30373,
              "nodeType": "Block",
              "src": "13286:31:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30371,
                    "name": "tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29866,
                    "src": "13303:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30370,
                  "id": 30372,
                  "nodeType": "Return",
                  "src": "13296:14:31"
                }
              ]
            },
            "documentation": {
              "id": 30366,
              "nodeType": "StructuredDocumentation",
              "src": "13122:107:31",
              "text": "@notice the tokenID is incremented with every pool\n@return the current tokenID "
            },
            "functionSelector": "6ba367a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenID",
            "nameLocation": "13243:10:31",
            "parameters": {
              "id": 30367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13253:2:31"
            },
            "returnParameters": {
              "id": 30370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30374,
                  "src": "13277:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13277:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13276:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30387,
            "nodeType": "FunctionDefinition",
            "src": "13431:99:31",
            "nodes": [],
            "body": {
              "id": 30386,
              "nodeType": "Block",
              "src": "13485:45:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 30382,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13510:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockscapeSoloVault_$30532",
                            "typeString": "contract BlockscapeSoloVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BlockscapeSoloVault_$30532",
                            "typeString": "contract BlockscapeSoloVault"
                          }
                        ],
                        "id": 30381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13502:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13502:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13502:13:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13516:7:31",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "13502:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30379,
                  "id": 30385,
                  "nodeType": "Return",
                  "src": "13495:28:31"
                }
              ]
            },
            "documentation": {
              "id": 30375,
              "nodeType": "StructuredDocumentation",
              "src": "13323:103:31",
              "text": "@notice how much balance does this vault current have\n@return amount in wei"
            },
            "functionSelector": "12065fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "13440:10:31",
            "parameters": {
              "id": 30376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13450:2:31"
            },
            "returnParameters": {
              "id": 30379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30387,
                  "src": "13476:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13476:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13475:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30421,
            "nodeType": "FunctionDefinition",
            "src": "13625:225:31",
            "nodes": [],
            "body": {
              "id": 30420,
              "nodeType": "Block",
              "src": "13680:170:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30394,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "13698:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30420,
                      "src": "13690:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30393,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13690:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30396,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 30395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13707:1:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13690:18:31"
                },
                {
                  "body": {
                    "id": 30416,
                    "nodeType": "Block",
                    "src": "13767:54:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 30414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30409,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30394,
                            "src": "13781:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 30412,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30398,
                                "src": "13808:1:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30410,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "13791:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlockscapeSoloVault_$30532",
                                  "typeString": "contract BlockscapeSoloVault"
                                }
                              },
                              "id": 30411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13796:11:31",
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26356,
                              "src": "13791:16:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 30413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13791:19:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13781:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30415,
                        "nodeType": "ExpressionStatement",
                        "src": "13781:29:31"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30401,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30398,
                      "src": "13738:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 30402,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "13743:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockscapeSoloVault_$30532",
                            "typeString": "contract BlockscapeSoloVault"
                          }
                        },
                        "id": 30403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13748:10:31",
                        "memberName": "getTokenID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30374,
                        "src": "13743:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 30404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13743:17:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13738:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30417,
                  "initializationExpression": {
                    "assignments": [
                      30398
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 30398,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13731:1:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 30417,
                        "src": "13723:9:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 30397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13723:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 30400,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 30399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13735:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13723:13:31"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 30407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13762:3:31",
                      "subExpression": {
                        "id": 30406,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30398,
                        "src": "13762:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30408,
                    "nodeType": "ExpressionStatement",
                    "src": "13762:3:31"
                  },
                  "nodeType": "ForStatement",
                  "src": "13718:103:31"
                },
                {
                  "expression": {
                    "id": 30418,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30394,
                    "src": "13837:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30392,
                  "id": 30419,
                  "nodeType": "Return",
                  "src": "13830:13:31"
                }
              ]
            },
            "documentation": {
              "id": 30388,
              "nodeType": "StructuredDocumentation",
              "src": "13536:84:31",
              "text": "@notice how many staker are there totally\n @return total amount of staker"
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "13634:11:31",
            "parameters": {
              "id": 30389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13645:2:31"
            },
            "returnParameters": {
              "id": 30392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30391,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30421,
                  "src": "13671:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13671:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13670:9:31"
            },
            "scope": 30532,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30430,
            "nodeType": "FunctionDefinition",
            "src": "14046:182:31",
            "nodes": [],
            "body": {
              "id": 30429,
              "nodeType": "Block",
              "src": "14107:121:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f697066732f516d5052446a5367336964785445384254533337756d446d545a324c5a62337833344c5642514d79616a396e5679",
                    "id": 30427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14136:85:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1dd3ea697a5734e4ff2d1582408b6c7e2dcba446bcf2d0168d2532ffdd5cb23b",
                      "typeString": "literal_string \"https://ipfs.blockscape.network/ipfs/QmPRDjSg3idxTE8BTS37umDmTZ2LZb3x34LVBQMyaj9nVy\""
                    },
                    "value": "https://ipfs.blockscape.network/ipfs/QmPRDjSg3idxTE8BTS37umDmTZ2LZb3x34LVBQMyaj9nVy"
                  },
                  "functionReturnParameters": 30426,
                  "id": 30428,
                  "nodeType": "Return",
                  "src": "14117:104:31"
                }
              ]
            },
            "documentation": {
              "id": 30422,
              "nodeType": "StructuredDocumentation",
              "src": "13856:185:31",
              "text": "@notice stake nft metdata location\n@dev this path will never change as the contract defines a collection\n@return the fixed collection metadata path "
            },
            "functionSelector": "e8a3d485",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nameLocation": "14055:11:31",
            "parameters": {
              "id": 30423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14066:2:31"
            },
            "returnParameters": {
              "id": 30426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30430,
                  "src": "14092:13:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30424,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14092:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14091:15:31"
            },
            "scope": 30532,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30451,
            "nodeType": "FunctionDefinition",
            "src": "14368:328:31",
            "nodes": [],
            "body": {
              "id": 30450,
              "nodeType": "Block",
              "src": "14444:252:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f697066732e626c6f636b73636170652e6e6574776f726b2f69706e732f6b3531717a6935757175356469766b6661327678753269373179686a336b36726d36626776676e64347130306834663830636234696d736739757932396c2f",
                        "id": 30442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14504:102:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd58a03101480676c5c6bdb1f029010494337c0d3d158e96f5db992541623a42",
                          "typeString": "literal_string \"https://ipfs.blockscape.network/ipns/k51qzi5uqu5divkfa2vxu2i71yhj3k6rm6bgvgnd4q00h4f80cb4imsg9uy29l/\""
                        },
                        "value": "https://ipfs.blockscape.network/ipns/k51qzi5uqu5divkfa2vxu2i71yhj3k6rm6bgvgnd4q00h4f80cb4imsg9uy29l/"
                      },
                      {
                        "arguments": [
                          {
                            "id": 30445,
                            "name": "_tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30433,
                            "src": "14641:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 30443,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27032,
                            "src": "14624:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$27032_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 30444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14632:8:31",
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26915,
                          "src": "14624:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 30446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14624:26:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "2e6a736f6e",
                        "id": 30447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14668:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        },
                        "value": ".json"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dd58a03101480676c5c6bdb1f029010494337c0d3d158e96f5db992541623a42",
                          "typeString": "literal_string \"https://ipfs.blockscape.network/ipns/k51qzi5uqu5divkfa2vxu2i71yhj3k6rm6bgvgnd4q00h4f80cb4imsg9uy29l/\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                          "typeString": "literal_string \".json\""
                        }
                      ],
                      "expression": {
                        "id": 30440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14473:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 30439,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14473:6:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14480:6:31",
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "src": "14473:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () pure returns (string memory)"
                      }
                    },
                    "id": 30448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14473:216:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 30438,
                  "id": 30449,
                  "nodeType": "Return",
                  "src": "14454:235:31"
                }
              ]
            },
            "baseFunctions": [
              25035
            ],
            "documentation": {
              "id": 30431,
              "nodeType": "StructuredDocumentation",
              "src": "14234:129:31",
              "text": "@notice gets the url to the metadata of a given pool\n@param _tokenID the pool\n@return the url"
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "14377:3:31",
            "overrides": {
              "id": 30435,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14399:8:31"
            },
            "parameters": {
              "id": 30434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30433,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "14389:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30451,
                  "src": "14381:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14381:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14380:18:31"
            },
            "returnParameters": {
              "id": 30438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30451,
                  "src": "14429:13:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30436,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14429:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14428:15:31"
            },
            "scope": 30532,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30497,
            "nodeType": "FunctionDefinition",
            "src": "14919:424:31",
            "nodes": [],
            "body": {
              "id": 30496,
              "nodeType": "Block",
              "src": "15024:319:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30461,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "15050:8:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 30496,
                      "src": "15034:24:31",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$29897_memory_ptr",
                        "typeString": "struct BlockscapeSoloVault.Metadata"
                      },
                      "typeName": {
                        "id": 30460,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30459,
                          "name": "Metadata",
                          "nameLocations": [
                            "15034:8:31"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 29897,
                          "src": "15034:8:31"
                        },
                        "referencedDeclaration": 29897,
                        "src": "15034:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$29897_storage_ptr",
                          "typeString": "struct BlockscapeSoloVault.Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30462,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15034:24:31"
                },
                {
                  "expression": {
                    "id": 30467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 30463,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "15069:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$29897_memory_ptr",
                          "typeString": "struct BlockscapeSoloVault.Metadata memory"
                        }
                      },
                      "id": 30465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15078:9:31",
                      "memberName": "stakedETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29888,
                      "src": "15069:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30466,
                      "name": "_stakedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30454,
                      "src": "15090:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15069:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30468,
                  "nodeType": "ExpressionStatement",
                  "src": "15069:31:31"
                },
                {
                  "expression": {
                    "id": 30474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 30469,
                        "name": "metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30461,
                        "src": "15110:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$29897_memory_ptr",
                          "typeString": "struct BlockscapeSoloVault.Metadata memory"
                        }
                      },
                      "id": 30471,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15119:15:31",
                      "memberName": "stakedTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29890,
                      "src": "15110:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 30472,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "15137:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 30473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15143:9:31",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "15137:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15110:42:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30475,
                  "nodeType": "ExpressionStatement",
                  "src": "15110:42:31"
                },
                {
                  "expression": {
                    "id": 30480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30476,
                        "name": "tokenIDtoMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29903,
                        "src": "15163:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Metadata_$29897_storage_$",
                          "typeString": "mapping(uint256 => struct BlockscapeSoloVault.Metadata storage ref)"
                        }
                      },
                      "id": 30478,
                      "indexExpression": {
                        "id": 30477,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30456,
                        "src": "15181:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15163:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$29897_storage",
                        "typeString": "struct BlockscapeSoloVault.Metadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30479,
                      "name": "metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30461,
                      "src": "15193:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$29897_memory_ptr",
                        "typeString": "struct BlockscapeSoloVault.Metadata memory"
                      }
                    },
                    "src": "15163:38:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$29897_storage",
                      "typeString": "struct BlockscapeSoloVault.Metadata storage ref"
                    }
                  },
                  "id": 30481,
                  "nodeType": "ExpressionStatement",
                  "src": "15163:38:31"
                },
                {
                  "expression": {
                    "id": 30486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30482,
                        "name": "tokenIDtoValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29908,
                        "src": "15258:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                          "typeString": "mapping(uint256 => bytes storage ref)"
                        }
                      },
                      "id": 30484,
                      "indexExpression": {
                        "id": 30483,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30456,
                        "src": "15277:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15258:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "",
                      "id": 30485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15289:2:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "src": "15258:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 30487,
                  "nodeType": "ExpressionStatement",
                  "src": "15258:33:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30489,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15308:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15312:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15308:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30491,
                        "name": "_tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30456,
                        "src": "15320:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 30492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15330:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 30493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15333:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 30488,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25604,
                      "src": "15302:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 30494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15302:34:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30495,
                  "nodeType": "ExpressionStatement",
                  "src": "15302:34:31"
                }
              ]
            },
            "documentation": {
              "id": 30452,
              "nodeType": "StructuredDocumentation",
              "src": "14729:185:31",
              "text": "@notice creates and mints metadata for a given pool and staker\n@param _stakedETH staked amount from the sender\n@param _tokenID Identifier of the vault"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_metadataSoloVaultInternal",
            "nameLocation": "14928:26:31",
            "parameters": {
              "id": 30457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30454,
                  "mutability": "mutable",
                  "name": "_stakedETH",
                  "nameLocation": "14972:10:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30497,
                  "src": "14964:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14964:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30456,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "15000:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30497,
                  "src": "14992:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14992:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14954:60:31"
            },
            "returnParameters": {
              "id": 30458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15024:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30503,
            "nodeType": "FunctionDefinition",
            "src": "15424:124:31",
            "nodes": [],
            "body": {
              "id": 30502,
              "nodeType": "Block",
              "src": "15468:80:31",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "15487:55:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "allowPubDeposit.slot",
                              "nodeType": "YulIdentifier",
                              "src": "15508:20:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15530:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "15501:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15501:31:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15501:31:31"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 29862,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "15508:20:31",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 30501,
                  "nodeType": "InlineAssembly",
                  "src": "15478:64:31"
                }
              ]
            },
            "documentation": {
              "id": 30498,
              "nodeType": "StructuredDocumentation",
              "src": "15349:70:31",
              "text": "@notice closes the vault to temporarily prevent further depositing"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_closeSoloVaultInternal",
            "nameLocation": "15433:23:31",
            "parameters": {
              "id": 30499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15456:2:31"
            },
            "returnParameters": {
              "id": 30500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15468:0:31"
            },
            "scope": 30532,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30531,
            "nodeType": "FunctionDefinition",
            "src": "15741:218:31",
            "nodes": [],
            "body": {
              "id": 30530,
              "nodeType": "Block",
              "src": "15853:106:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 30527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 30516,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30506,
                                      "src": "15899:1:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 30517,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15898:3:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 30514,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "15881:3:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 30515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "15885:12:31",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "15881:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 30518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15881:21:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 30513,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "15871:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 30519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15871:32:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 30523,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30508,
                                      "src": "15947:1:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 30524,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15946:3:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 30521,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "15929:3:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 30522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "15933:12:31",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "15929:16:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 30525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15929:21:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 30520,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "15919:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 30526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15919:32:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "15871:80:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 30528,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15870:82:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30512,
                  "id": 30529,
                  "nodeType": "Return",
                  "src": "15863:89:31"
                }
              ]
            },
            "documentation": {
              "id": 30504,
              "nodeType": "StructuredDocumentation",
              "src": "15554:182:31",
              "text": "@notice compares two values and checks if there are equal\n@dev hashes the stringified values and compares those hashes\n@return are the bytes equal"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_compareBytes",
            "nameLocation": "15750:13:31",
            "parameters": {
              "id": 30509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30506,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "15777:1:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30531,
                  "src": "15764:14:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15764:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30508,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "15793:1:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 30531,
                  "src": "15780:14:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30507,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15780:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15763:32:31"
            },
            "returnParameters": {
              "id": 30512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30531,
                  "src": "15843:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30510,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15843:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15842:6:31"
            },
            "scope": 30532,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29824,
              "name": "ERC1155Supply",
              "nameLocations": [
                "793:13:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26490,
              "src": "793:13:31"
            },
            "id": 29825,
            "nodeType": "InheritanceSpecifier",
            "src": "793:13:31"
          },
          {
            "baseName": {
              "id": 29826,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "808:15:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24947,
              "src": "808:15:31"
            },
            "id": 29827,
            "nodeType": "InheritanceSpecifier",
            "src": "808:15:31"
          },
          {
            "baseName": {
              "id": 29828,
              "name": "Ownable",
              "nameLocations": [
                "825:7:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24882,
              "src": "825:7:31"
            },
            "id": 29829,
            "nodeType": "InheritanceSpecifier",
            "src": "825:7:31"
          }
        ],
        "canonicalName": "BlockscapeSoloVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29823,
          "nodeType": "StructuredDocumentation",
          "src": "459:301:31",
          "text": "@title Rocketpool Staking Allocation Contract\n@author Blockscape Finance AG <info@blockscape.network>\n@notice collects staking, mints NFT in return for staker and let's backend controller \ntransfer the stake when the pool is full (currently 16 ETH) and enough RPL are available"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30532,
          24882,
          24947,
          26490,
          26170,
          26505,
          26292,
          27056,
          27068,
          26857
        ],
        "name": "BlockscapeSoloVault",
        "nameLocation": "770:19:31",
        "scope": 30533,
        "usedErrors": [
          29939,
          29952
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 31
}