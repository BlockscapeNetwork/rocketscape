strict digraph {
subgraph cluster_5766_stdStorageSafe {
label = "stdStorageSafe"
"5766_with_key" [label="with_key"]
"5766_depth" [label="depth"]
"5766_sigs" [label="sigs"]
"5766_read_bool" [label="read_bool"]
"5766_read_address" [label="read_address"]
"5766_read_uint" [label="read_uint"]
"5766_read_int" [label="read_int"]
"5766_sig" [label="sig"]
"5766_bytesToBytes32" [label="bytesToBytes32"]
"5766_flatten" [label="flatten"]
"5766_read" [label="read"]
"5766_target" [label="target"]
"5766_find" [label="find"]
"5766_read_bytes32" [label="read_bytes32"]
"5766_read" -> "5766_find"
"5766_read_int" -> "5766_read"
"5766_read_bytes32" -> "5766_read"
"5766_read_bool" -> "5766_read_int"
"5766_read_uint" -> "5766_read"
"5766_find" -> "5766_flatten"
"5766_read_address" -> "5766_read"
"5766_sig" -> "5766_sigs"
"5766_find" -> "5766_bytesToBytes32"
}subgraph cluster_26505_IERC1155MetadataURI {
label = "IERC1155MetadataURI"
"26505_uri" [label="uri"]
}subgraph cluster_31381_RocketNodeStakingInterface {
label = "RocketNodeStakingInterface"
"31381_stakeRPL" [label="stakeRPL"]
"31381_stakeRPLFor" [label="stakeRPLFor"]
"31381_getNodeMaximumRPLStake" [label="getNodeMaximumRPLStake"]
"31381_getNodeMinipoolLimit" [label="getNodeMinipoolLimit"]
"31381_calculateTotalEffectiveRPLStake" [label="calculateTotalEffectiveRPLStake"]
"31381_slashRPL" [label="slashRPL"]
"31381_getNodeRPLStake" [label="getNodeRPLStake"]
"31381_getTotalEffectiveRPLStake" [label="getTotalEffectiveRPLStake"]
"31381_getNodeEffectiveRPLStake" [label="getNodeEffectiveRPLStake"]
"31381_getNodeRPLStakedTime" [label="getNodeRPLStakedTime"]
"31381_getNodeMinimumRPLStake" [label="getNodeMinimumRPLStake"]
"31381_getTotalRPLStake" [label="getTotalRPLStake"]
"31381_withdrawRPL" [label="withdrawRPL"]
}subgraph cluster_27032_Strings {
label = "Strings"
"27032_toString" [label="toString"]
"27032_toHexString" [label="toHexString"]
"27032_toHexString" -> "27032_toHexString"
}subgraph cluster_29721_DSTest {
label = "DSTest"
"29721_failed" [label="failed"]
"29721_assertGt" [label="assertGt"]
"29721_assertGe" [label="assertGe"]
"29721_assertEq0" [label="assertEq0"]
"29721_assertGeDecimal" [label="assertGeDecimal"]
"29721_hasHEVMContext" [label="hasHEVMContext"]
"29721_assertLtDecimal" [label="assertLtDecimal"]
"29721_fail" [label="fail"]
"29721_assertEq32" [label="assertEq32"]
"29721_assertEq" [label="assertEq"]
"29721_checkEq0" [label="checkEq0"]
"29721_assertEqDecimal" [label="assertEqDecimal"]
"29721_assertGtDecimal" [label="assertGtDecimal"]
"29721_assertTrue" [label="assertTrue"]
"29721_assertLt" [label="assertLt"]
"29721_assertLeDecimal" [label="assertLeDecimal"]
"29721_assertLe" [label="assertLe"]
"29721_assertLe" -> "29721_assertLe"
"29721_assertEq" -> "29721_fail"
"29721_assertTrue" -> "29721_fail"
"29721_assertGeDecimal" -> "29721_fail"
"29721_assertLeDecimal" -> "29721_assertLeDecimal"
"29721_assertGtDecimal" -> "29721_fail"
"29721_assertLt" -> "29721_assertLt"
"29721_assertEq0" -> "29721_fail"
"29721_assertGt" -> "29721_fail"
"29721_assertTrue" -> "29721_assertTrue"
"29721_assertLtDecimal" -> "29721_assertLtDecimal"
"29721_assertLt" -> "29721_fail"
"29721_assertGt" -> "29721_assertGt"
"29721_assertLeDecimal" -> "29721_assertGeDecimal"
"29721_assertGe" -> "29721_assertGe"
"29721_failed" -> "29721_hasHEVMContext"
"29721_assertGeDecimal" -> "29721_assertGeDecimal"
"29721_assertLtDecimal" -> "29721_fail"
"29721_assertGtDecimal" -> "29721_assertGtDecimal"
"29721_fail" -> "29721_hasHEVMContext"
"29721_assertEq0" -> "29721_checkEq0"
"29721_assertEq" -> "29721_assertEq"
"29721_assertLe" -> "29721_fail"
"29721_assertEq0" -> "29721_assertEq0"
"29721_assertEq32" -> "29721_assertEq"
"29721_assertEqDecimal" -> "29721_assertEqDecimal"
"29721_assertLeDecimal" -> "29721_fail"
"29721_assertGe" -> "29721_fail"
"29721_assertEqDecimal" -> "29721_fail"
}subgraph cluster_31257_BlockscapeValidatorNFTGoerli {
label = "BlockscapeValidatorNFTGoerli"
"31257_getBalance" [label="getBalance"]
"31257_getReqRPLStake" [label="getReqRPLStake"]
"31257_uri" [label="uri"]
"31257_getCurrentEthLimit" [label="getCurrentEthLimit"]
"31257_userRequestWithdraw" [label="userRequestWithdraw"]
"31257_getMetadata" [label="getMetadata"]
"31257_closeValidatorNFT" [label="closeValidatorNFT"]
"31257_tryDepositValidatorNFT" [label="tryDepositValidatorNFT"]
"31257_contractURI" [label="contractURI"]
"31257_openValidatorNFT" [label="openValidatorNFT"]
"31257_hasNodeEnoughRPLStake" [label="hasNodeEnoughRPLStake"]
"31257_updateValidator" [label="updateValidator"]
"31257_constructor" [label="constructor"]
"31257_totalSupply" [label="totalSupply"]
"31257_withdraw" [label="withdraw"]
"31257__compareBytes" [label="_compareBytes"]
"31257__closeValidatorNFTInternal" [label="_closeValidatorNFTInternal"]
"31257_isVaultOpen" [label="isVaultOpen"]
"31257_changeETHLimit" [label="changeETHLimit"]
"31257_viewUserRequestWithdraw" [label="viewUserRequestWithdraw"]
"31257_tryWithdrawBatch" [label="tryWithdrawBatch"]
"31257__metadataValidatorNFTInternal" [label="_metadataValidatorNFTInternal"]
"31257_getAvailableRPLStake" [label="getAvailableRPLStake"]
"31257_setWithdrawFee" [label="setWithdrawFee"]
"31257_setBlockscapeRocketPoolNode" [label="setBlockscapeRocketPoolNode"]
"31257_getTokenID" [label="getTokenID"]
"31257_userRequestWithdraw" -> "31257_viewUserRequestWithdraw"
"31257_closeValidatorNFT" -> "31257_onlyOwner"
"31257_updateValidator" -> "31257__compareBytes"
"31257_withdraw" -> "31257_onlyOwner"
"31257_tryDepositValidatorNFT" -> "31257__metadataValidatorNFTInternal"
"31257_changeETHLimit" -> "31257_onlyOwner"
"31257_setWithdrawFee" -> "31257_onlyOwner"
"31257_constructor" -> "31257_constructor"
"31257_updateValidator" -> "31257_openValidatorNFT"
"31257_withdraw" -> "31257_owner"
"31257_updateValidator" -> "31257_getReqRPLStake"
"31257_tryDepositValidatorNFT" -> "31257__closeValidatorNFTInternal"
"31257_openValidatorNFT" -> "31257_onlyOwner"
"31257_updateValidator" -> "31257_hasNodeEnoughRPLStake"
"31257_tryDepositValidatorNFT" -> "31257_nonReentrant"
"31257_hasNodeEnoughRPLStake" -> "31257_getReqRPLStake"
"31257_setBlockscapeRocketPoolNode" -> "31257_onlyOwner"
"31257_updateValidator" -> "31257_getAvailableRPLStake"
"31257_updateValidator" -> "31257_onlyOwner"
"31257_tryWithdrawBatch" -> "31257_onlyOwner"
"31257__metadataValidatorNFTInternal" -> "31257__mint"
}subgraph cluster_27934_Math {
label = "Math"
"27934_log10" [label="log10"]
"27934_mulDiv" [label="mulDiv"]
"27934_sqrt" [label="sqrt"]
"27934_average" [label="average"]
"27934_log2" [label="log2"]
"27934_max" [label="max"]
"27934_ceilDiv" [label="ceilDiv"]
"27934_log256" [label="log256"]
"27934_min" [label="min"]
"27934_log256" -> "27934_log256"
"27934_sqrt" -> "27934_min"
"27934_log2" -> "27934_log2"
"27934_log10" -> "27934_log10"
"27934_sqrt" -> "27934_log2"
"27934_sqrt" -> "27934_sqrt"
"27934_mulDiv" -> "27934_mulDiv"
}subgraph cluster_24606_console2 {
label = "console2"
"24606_logBytes6" [label="logBytes6"]
"24606_logBytes26" [label="logBytes26"]
"24606_logBytes7" [label="logBytes7"]
"24606_logBytes19" [label="logBytes19"]
"24606_logBytes2" [label="logBytes2"]
"24606__sendLogPayload" [label="_sendLogPayload"]
"24606_logBytes22" [label="logBytes22"]
"24606_logBytes30" [label="logBytes30"]
"24606_logBytes9" [label="logBytes9"]
"24606_logBytes18" [label="logBytes18"]
"24606_logBytes31" [label="logBytes31"]
"24606_logBytes29" [label="logBytes29"]
"24606_logInt" [label="logInt"]
"24606_logBytes15" [label="logBytes15"]
"24606_logBytes8" [label="logBytes8"]
"24606_logBytes32" [label="logBytes32"]
"24606_logBytes25" [label="logBytes25"]
"24606_logBytes13" [label="logBytes13"]
"24606_logBytes14" [label="logBytes14"]
"24606_logBytes3" [label="logBytes3"]
"24606_logBytes23" [label="logBytes23"]
"24606_logBytes1" [label="logBytes1"]
"24606_logUint" [label="logUint"]
"24606_logBool" [label="logBool"]
"24606_logBytes16" [label="logBytes16"]
"24606_logBytes10" [label="logBytes10"]
"24606_logBytes20" [label="logBytes20"]
"24606_logBytes28" [label="logBytes28"]
"24606_logBytes21" [label="logBytes21"]
"24606_logBytes5" [label="logBytes5"]
"24606_logString" [label="logString"]
"24606_logBytes11" [label="logBytes11"]
"24606_logBytes27" [label="logBytes27"]
"24606_logBytes12" [label="logBytes12"]
"24606_logBytes24" [label="logBytes24"]
"24606_logBytes17" [label="logBytes17"]
"24606_logBytes" [label="logBytes"]
"24606_logAddress" [label="logAddress"]
"24606_log" [label="log"]
"24606_logBytes4" [label="logBytes4"]
"24606_logBytes3" -> "24606__sendLogPayload"
"24606_logBytes25" -> "24606__sendLogPayload"
"24606_logBytes1" -> "24606__sendLogPayload"
"24606_logBytes16" -> "24606__sendLogPayload"
"24606_logBytes9" -> "24606__sendLogPayload"
"24606_logBytes7" -> "24606__sendLogPayload"
"24606_logBytes21" -> "24606__sendLogPayload"
"24606_logBytes32" -> "24606__sendLogPayload"
"24606_logBytes20" -> "24606__sendLogPayload"
"24606_logBytes5" -> "24606__sendLogPayload"
"24606_logBytes26" -> "24606__sendLogPayload"
"24606_logBytes31" -> "24606__sendLogPayload"
"24606_logBytes17" -> "24606__sendLogPayload"
"24606_logBytes19" -> "24606__sendLogPayload"
"24606_log" -> "24606__sendLogPayload"
"24606_logString" -> "24606__sendLogPayload"
"24606_logBytes12" -> "24606__sendLogPayload"
"24606_logBool" -> "24606__sendLogPayload"
"24606_logBytes8" -> "24606__sendLogPayload"
"24606_logBytes22" -> "24606__sendLogPayload"
"24606_logBytes14" -> "24606__sendLogPayload"
"24606_logUint" -> "24606__sendLogPayload"
"24606_logBytes6" -> "24606__sendLogPayload"
"24606_logBytes10" -> "24606__sendLogPayload"
"24606_logBytes15" -> "24606__sendLogPayload"
"24606_logBytes23" -> "24606__sendLogPayload"
"24606_logInt" -> "24606__sendLogPayload"
"24606_logBytes27" -> "24606__sendLogPayload"
"24606_logBytes13" -> "24606__sendLogPayload"
"24606_logBytes11" -> "24606__sendLogPayload"
"24606_logAddress" -> "24606__sendLogPayload"
"24606_logBytes" -> "24606__sendLogPayload"
"24606_logBytes29" -> "24606__sendLogPayload"
"24606_logBytes28" -> "24606__sendLogPayload"
"24606_logBytes24" -> "24606__sendLogPayload"
"24606_logBytes2" -> "24606__sendLogPayload"
"24606_logBytes4" -> "24606__sendLogPayload"
"24606_logBytes18" -> "24606__sendLogPayload"
"24606_logBytes30" -> "24606__sendLogPayload"
}subgraph cluster_6307_stdStorage {
label = "stdStorage"
"6307_target" [label="target"]
"6307_read_address" [label="read_address"]
"6307_with_key" [label="with_key"]
"6307_find" [label="find"]
"6307_read_bytes32" [label="read_bytes32"]
"6307_bytesToBytes32" [label="bytesToBytes32"]
"6307_read_uint" [label="read_uint"]
"6307_flatten" [label="flatten"]
"6307_depth" [label="depth"]
"6307_sigs" [label="sigs"]
"6307_read_int" [label="read_int"]
"6307_checked_write" [label="checked_write"]
"6307_sig" [label="sig"]
"6307_read_bool" [label="read_bool"]
"6307_checked_write" -> "6307_checked_write"
"6307_checked_write" -> "6307_flatten"
"6307_checked_write" -> "6307_find"
"6307_checked_write" -> "6307_bytesToBytes32"
}subgraph cluster_27056_ERC165 {
label = "ERC165"
"27056_supportsInterface" [label="supportsInterface"]
}subgraph cluster_24882_Ownable {
label = "Ownable"
"24882_owner" [label="owner"]
"24882__checkOwner" [label="_checkOwner"]
"24882_transferOwnership" [label="transferOwnership"]
"24882_renounceOwnership" [label="renounceOwnership"]
"24882_constructor" [label="constructor"]
"24882__transferOwnership" [label="_transferOwnership"]
"24882_renounceOwnership" -> "24882_onlyOwner"
"24882__checkOwner" -> "24882__msgSender"
"24882_constructor" -> "24882__msgSender"
"24882_renounceOwnership" -> "24882__transferOwnership"
"24882_transferOwnership" -> "24882__transferOwnership"
"24882_transferOwnership" -> "24882_onlyOwner"
"24882_constructor" -> "24882__transferOwnership"
"24882__checkOwner" -> "24882_owner"
}subgraph cluster_26292_IERC1155 {
label = "IERC1155"
"26292_isApprovedForAll" [label="isApprovedForAll"]
"26292_balanceOf" [label="balanceOf"]
"26292_setApprovalForAll" [label="setApprovalForAll"]
"26292_safeBatchTransferFrom" [label="safeBatchTransferFrom"]
"26292_balanceOfBatch" [label="balanceOfBatch"]
"26292_safeTransferFrom" [label="safeTransferFrom"]
}subgraph cluster_8121_VmSafe {
label = "VmSafe"
"8121_parseJsonBytes32" [label="parseJsonBytes32"]
"8121_envBool" [label="envBool"]
"8121_parseJsonInt" [label="parseJsonInt"]
"8121_toString" [label="toString"]
"8121_serializeAddress" [label="serializeAddress"]
"8121_setEnv" [label="setEnv"]
"8121_parseJsonBytes32Array" [label="parseJsonBytes32Array"]
"8121_pauseGasMetering" [label="pauseGasMetering"]
"8121_stopBroadcast" [label="stopBroadcast"]
"8121_parseJsonAddress" [label="parseJsonAddress"]
"8121_resumeGasMetering" [label="resumeGasMetering"]
"8121_serializeString" [label="serializeString"]
"8121_rpcUrl" [label="rpcUrl"]
"8121_serializeBool" [label="serializeBool"]
"8121_addr" [label="addr"]
"8121_parseJsonString" [label="parseJsonString"]
"8121_serializeInt" [label="serializeInt"]
"8121_envOr" [label="envOr"]
"8121_getCode" [label="getCode"]
"8121_parseJsonBytesArray" [label="parseJsonBytesArray"]
"8121_envBytes32" [label="envBytes32"]
"8121_parseJsonUintArray" [label="parseJsonUintArray"]
"8121_envInt" [label="envInt"]
"8121_parseUint" [label="parseUint"]
"8121_writeFile" [label="writeFile"]
"8121_parseJsonBool" [label="parseJsonBool"]
"8121_parseBytes32" [label="parseBytes32"]
"8121_parseJsonAddressArray" [label="parseJsonAddressArray"]
"8121_removeFile" [label="removeFile"]
"8121_parseBytes" [label="parseBytes"]
"8121_envUint" [label="envUint"]
"8121_deriveKey" [label="deriveKey"]
"8121_readLine" [label="readLine"]
"8121_recordLogs" [label="recordLogs"]
"8121_accesses" [label="accesses"]
"8121_rpcUrlStructs" [label="rpcUrlStructs"]
"8121_ffi" [label="ffi"]
"8121_record" [label="record"]
"8121_envString" [label="envString"]
"8121_rememberKey" [label="rememberKey"]
"8121_parseJson" [label="parseJson"]
"8121_getRecordedLogs" [label="getRecordedLogs"]
"8121_parseJsonBoolArray" [label="parseJsonBoolArray"]
"8121_parseJsonBytes" [label="parseJsonBytes"]
"8121_startBroadcast" [label="startBroadcast"]
"8121_envAddress" [label="envAddress"]
"8121_readFileBinary" [label="readFileBinary"]
"8121_serializeBytes32" [label="serializeBytes32"]
"8121_envBytes" [label="envBytes"]
"8121_projectRoot" [label="projectRoot"]
"8121_parseAddress" [label="parseAddress"]
"8121_getDeployedCode" [label="getDeployedCode"]
"8121_parseJsonUint" [label="parseJsonUint"]
"8121_writeLine" [label="writeLine"]
"8121_rpcUrls" [label="rpcUrls"]
"8121_parseInt" [label="parseInt"]
"8121_getNonce" [label="getNonce"]
"8121_parseBool" [label="parseBool"]
"8121_label" [label="label"]
"8121_assume" [label="assume"]
"8121_writeFileBinary" [label="writeFileBinary"]
"8121_readFile" [label="readFile"]
"8121_sign" [label="sign"]
"8121_parseJsonStringArray" [label="parseJsonStringArray"]
"8121_parseJsonIntArray" [label="parseJsonIntArray"]
"8121_fsMetadata" [label="fsMetadata"]
"8121_writeJson" [label="writeJson"]
"8121_serializeBytes" [label="serializeBytes"]
"8121_closeFile" [label="closeFile"]
"8121_broadcast" [label="broadcast"]
"8121_serializeUint" [label="serializeUint"]
"8121_load" [label="load"]
}subgraph cluster_26170_ERC1155 {
label = "ERC1155"
"26170__doSafeTransferAcceptanceCheck" [label="_doSafeTransferAcceptanceCheck"]
"26170_balanceOf" [label="balanceOf"]
"26170_isApprovedForAll" [label="isApprovedForAll"]
"26170_safeBatchTransferFrom" [label="safeBatchTransferFrom"]
"26170_uri" [label="uri"]
"26170_constructor" [label="constructor"]
"26170__safeTransferFrom" [label="_safeTransferFrom"]
"26170_balanceOfBatch" [label="balanceOfBatch"]
"26170__burn" [label="_burn"]
"26170__asSingletonArray" [label="_asSingletonArray"]
"26170__setURI" [label="_setURI"]
"26170__mint" [label="_mint"]
"26170_safeTransferFrom" [label="safeTransferFrom"]
"26170__afterTokenTransfer" [label="_afterTokenTransfer"]
"26170__setApprovalForAll" [label="_setApprovalForAll"]
"26170__safeBatchTransferFrom" [label="_safeBatchTransferFrom"]
"26170_setApprovalForAll" [label="setApprovalForAll"]
"26170__mintBatch" [label="_mintBatch"]
"26170__burnBatch" [label="_burnBatch"]
"26170_supportsInterface" [label="supportsInterface"]
"26170__beforeTokenTransfer" [label="_beforeTokenTransfer"]
"26170__doSafeBatchTransferAcceptanceCheck" [label="_doSafeBatchTransferAcceptanceCheck"]
"26170__mintBatch" -> "26170__beforeTokenTransfer"
"26170__mint" -> "26170__doSafeTransferAcceptanceCheck"
"26170_safeBatchTransferFrom" -> "26170__safeBatchTransferFrom"
"26170__safeTransferFrom" -> "26170__doSafeTransferAcceptanceCheck"
"26170__safeTransferFrom" -> "26170__afterTokenTransfer"
"26170_constructor" -> "26170__setURI"
"26170__mintBatch" -> "26170__doSafeBatchTransferAcceptanceCheck"
"26170__safeBatchTransferFrom" -> "26170__beforeTokenTransfer"
"26170__mint" -> "26170__beforeTokenTransfer"
"26170_setApprovalForAll" -> "26170__msgSender"
"26170_balanceOfBatch" -> "26170_balanceOf"
"26170_safeBatchTransferFrom" -> "26170__msgSender"
"26170__mint" -> "26170__msgSender"
"26170__burnBatch" -> "26170__msgSender"
"26170_safeTransferFrom" -> "26170_isApprovedForAll"
"26170__safeBatchTransferFrom" -> "26170__doSafeBatchTransferAcceptanceCheck"
"26170__safeTransferFrom" -> "26170__beforeTokenTransfer"
"26170__burn" -> "26170__asSingletonArray"
"26170__safeBatchTransferFrom" -> "26170__msgSender"
"26170_safeTransferFrom" -> "26170__msgSender"
"26170__safeBatchTransferFrom" -> "26170__afterTokenTransfer"
"26170__burnBatch" -> "26170__afterTokenTransfer"
"26170__burn" -> "26170__afterTokenTransfer"
"26170_setApprovalForAll" -> "26170__setApprovalForAll"
"26170__safeTransferFrom" -> "26170__msgSender"
"26170__mint" -> "26170__asSingletonArray"
"26170_safeTransferFrom" -> "26170__safeTransferFrom"
"26170__mintBatch" -> "26170__msgSender"
"26170__burnBatch" -> "26170__beforeTokenTransfer"
"26170__safeTransferFrom" -> "26170__asSingletonArray"
"26170__burn" -> "26170__beforeTokenTransfer"
"26170_supportsInterface" -> "26170_supportsInterface"
"26170__mintBatch" -> "26170__afterTokenTransfer"
"26170__mint" -> "26170__afterTokenTransfer"
"26170__burn" -> "26170__msgSender"
"26170_safeBatchTransferFrom" -> "26170_isApprovedForAll"
}subgraph cluster_31291_RocketNodeDepositInterface {
label = "RocketNodeDepositInterface"
"31291_getDepositType" [label="getDepositType"]
"31291_deposit" [label="deposit"]
}subgraph cluster_27068_IERC165 {
label = "IERC165"
"27068_supportsInterface" [label="supportsInterface"]
}subgraph cluster_1342_StdAssertions {
label = "StdAssertions"
"1342_assertEq" [label="assertEq"]
"1342_assertApproxEqRelDecimal" [label="assertApproxEqRelDecimal"]
"1342_assertApproxEqRel" [label="assertApproxEqRel"]
"1342_assertApproxEqAbs" [label="assertApproxEqAbs"]
"1342_assertFalse" [label="assertFalse"]
"1342_assertEqUint" [label="assertEqUint"]
"1342_fail" [label="fail"]
"1342_assertApproxEqAbsDecimal" [label="assertApproxEqAbsDecimal"]
"1342_fail" -> "1342_fail"
"1342_assertEq" -> "1342_assertEq0"
"1342_assertApproxEqAbs" -> "1342_assertApproxEqAbs"
"1342_assertApproxEqAbsDecimal" -> "1342_assertApproxEqAbsDecimal"
"1342_assertApproxEqRel" -> "1342_fail"
"1342_assertFalse" -> "1342_assertTrue"
"1342_assertApproxEqAbsDecimal" -> "1342_fail"
"1342_assertEq" -> "1342_fail"
"1342_assertApproxEqRelDecimal" -> "1342_assertApproxEqRelDecimal"
"1342_assertApproxEqAbs" -> "1342_fail"
"1342_assertApproxEqRel" -> "1342_assertEq"
"1342_assertEqUint" -> "1342_assertEq"
"1342_assertApproxEqRel" -> "1342_assertApproxEqRel"
"1342_assertEq" -> "1342_assertEq"
"1342_assertApproxEqRelDecimal" -> "1342_fail"
"1342_assertApproxEqRelDecimal" -> "1342_assertEq"
}subgraph cluster_24769_IMulticall3 {
label = "IMulticall3"
"24769_getCurrentBlockCoinbase" [label="getCurrentBlockCoinbase"]
"24769_getLastBlockHash" [label="getLastBlockHash"]
"24769_blockAndAggregate" [label="blockAndAggregate"]
"24769_getChainId" [label="getChainId"]
"24769_getCurrentBlockDifficulty" [label="getCurrentBlockDifficulty"]
"24769_getEthBalance" [label="getEthBalance"]
"24769_tryBlockAndAggregate" [label="tryBlockAndAggregate"]
"24769_aggregate" [label="aggregate"]
"24769_getCurrentBlockGasLimit" [label="getCurrentBlockGasLimit"]
"24769_aggregate3Value" [label="aggregate3Value"]
"24769_getBasefee" [label="getBasefee"]
"24769_getBlockHash" [label="getBlockHash"]
"24769_aggregate3" [label="aggregate3"]
"24769_getBlockNumber" [label="getBlockNumber"]
"24769_tryAggregate" [label="tryAggregate"]
"24769_getCurrentBlockTimestamp" [label="getCurrentBlockTimestamp"]
}subgraph cluster_30531_BlockscapeValidatorNFT {
label = "BlockscapeValidatorNFT"
"30531_setBlockscapeRocketPoolNode" [label="setBlockscapeRocketPoolNode"]
"30531_getBalance" [label="getBalance"]
"30531_getReqRPLStake" [label="getReqRPLStake"]
"30531_contractURI" [label="contractURI"]
"30531_userRequestWithdraw" [label="userRequestWithdraw"]
"30531_changeETHLimit" [label="changeETHLimit"]
"30531__compareBytes" [label="_compareBytes"]
"30531_depositValidatorNFT" [label="depositValidatorNFT"]
"30531_closeValidatorNFT" [label="closeValidatorNFT"]
"30531_withdraw" [label="withdraw"]
"30531_getTokenID" [label="getTokenID"]
"30531_totalSupply" [label="totalSupply"]
"30531__metadataValidatorNFTInternal" [label="_metadataValidatorNFTInternal"]
"30531_setWithdrawFee" [label="setWithdrawFee"]
"30531_openValidatorNFT" [label="openValidatorNFT"]
"30531_constructor" [label="constructor"]
"30531_getAvailableRPLStake" [label="getAvailableRPLStake"]
"30531_uri" [label="uri"]
"30531_hasNodeEnoughRPLStake" [label="hasNodeEnoughRPLStake"]
"30531_withdrawBatch" [label="withdrawBatch"]
"30531_getCurrentEthLimit" [label="getCurrentEthLimit"]
"30531__closeValidatorNFTInternal" [label="_closeValidatorNFTInternal"]
"30531_updateValidator" [label="updateValidator"]
"30531_getMetadata" [label="getMetadata"]
"30531_isVaultOpen" [label="isVaultOpen"]
"30531_viewUserRequestWithdraw" [label="viewUserRequestWithdraw"]
"30531_depositValidatorNFT" -> "30531_nonReentrant"
"30531_hasNodeEnoughRPLStake" -> "30531_getReqRPLStake"
"30531_openValidatorNFT" -> "30531_hasNodeEnoughRPLStake"
"30531_withdrawBatch" -> "30531_withdraw"
"30531_withdrawBatch" -> "30531_onlyOwner"
"30531_updateValidator" -> "30531_openValidatorNFT"
"30531_openValidatorNFT" -> "30531_onlyOwner"
"30531_withdraw" -> "30531_onlyOwner"
"30531_constructor" -> "30531_constructor"
"30531_setWithdrawFee" -> "30531_onlyOwner"
"30531_updateValidator" -> "30531__compareBytes"
"30531_updateValidator" -> "30531_getReqRPLStake"
"30531_updateValidator" -> "30531_hasNodeEnoughRPLStake"
"30531__metadataValidatorNFTInternal" -> "30531__mint"
"30531_withdraw" -> "30531_owner"
"30531_userRequestWithdraw" -> "30531_viewUserRequestWithdraw"
"30531_updateValidator" -> "30531_getAvailableRPLStake"
"30531_depositValidatorNFT" -> "30531__metadataValidatorNFTInternal"
"30531_updateValidator" -> "30531_onlyOwner"
"30531_closeValidatorNFT" -> "30531_onlyOwner"
"30531_changeETHLimit" -> "30531_onlyOwner"
"30531_depositValidatorNFT" -> "30531__closeValidatorNFTInternal"
"30531_setBlockscapeRocketPoolNode" -> "30531_onlyOwner"
}subgraph cluster_7114_StdUtils {
label = "StdUtils"
"7114_bytesToUint" [label="bytesToUint"]
"7114_addressFromLast20Bytes" [label="addressFromLast20Bytes"]
"7114__bound" [label="_bound"]
"7114_computeCreateAddress" [label="computeCreateAddress"]
"7114_bound" [label="bound"]
"7114_hashInitCode" [label="hashInitCode"]
"7114_getTokenBalances" [label="getTokenBalances"]
"7114_computeCreate2Address" [label="computeCreate2Address"]
"7114_console2_log" [label="console2_log"]
"7114_computeCreate2Address" -> "7114_addressFromLast20Bytes"
"7114_computeCreateAddress" -> "7114_addressFromLast20Bytes"
"7114_computeCreate2Address" -> "7114_computeCreate2Address"
"7114_hashInitCode" -> "7114_hashInitCode"
"7114_bound" -> "7114__bound"
"7114_bound" -> "7114_console2_log"
}subgraph cluster_3578_StdCheatsSafe {
label = "StdCheatsSafe"
"3578_assumeNoPrecompiles" [label="assumeNoPrecompiles"]
"3578__bytesToUint" [label="_bytesToUint"]
"3578_isFork" [label="isFork"]
"3578_rawToConvertedEIP1559Detail" [label="rawToConvertedEIP1559Detail"]
"3578_rawToConvertedEIPTx1559s" [label="rawToConvertedEIPTx1559s"]
"3578_readReceipts" [label="readReceipts"]
"3578_rawToConvertedReceipts" [label="rawToConvertedReceipts"]
"3578_makeAddrAndKey" [label="makeAddrAndKey"]
"3578_rawToConvertedReceipt" [label="rawToConvertedReceipt"]
"3578_rawToConvertedEIPTx1559" [label="rawToConvertedEIPTx1559"]
"3578_deployCode" [label="deployCode"]
"3578_readEIP1559ScriptArtifact" [label="readEIP1559ScriptArtifact"]
"3578_assumePayable" [label="assumePayable"]
"3578_readReceipt" [label="readReceipt"]
"3578_deriveRememberKey" [label="deriveRememberKey"]
"3578_makeAddr" [label="makeAddr"]
"3578_rawToConvertedReceiptLogs" [label="rawToConvertedReceiptLogs"]
"3578_readTx1559" [label="readTx1559"]
"3578_readTx1559s" [label="readTx1559s"]
"3578_readTx1559" -> "3578_rawToConvertedEIPTx1559"
"3578_assumeNoPrecompiles" -> "3578_assumeNoPrecompiles"
"3578_readTx1559s" -> "3578_rawToConvertedEIPTx1559s"
"3578_rawToConvertedReceipt" -> "3578_rawToConvertedReceiptLogs"
"3578_makeAddr" -> "3578_makeAddrAndKey"
"3578_rawToConvertedEIP1559Detail" -> "3578__bytesToUint"
"3578_rawToConvertedEIPTx1559" -> "3578_rawToConvertedEIP1559Detail"
"3578_rawToConvertedReceipt" -> "3578__bytesToUint"
"3578_readEIP1559ScriptArtifact" -> "3578_rawToConvertedReceipts"
"3578_rawToConvertedReceipts" -> "3578_rawToConvertedReceipt"
"3578_readEIP1559ScriptArtifact" -> "3578_rawToConvertedEIPTx1559s"
"3578_readReceipt" -> "3578_rawToConvertedReceipt"
"3578_readReceipts" -> "3578_rawToConvertedReceipts"
"3578_rawToConvertedReceiptLogs" -> "3578__bytesToUint"
"3578_rawToConvertedEIPTx1559s" -> "3578_rawToConvertedEIPTx1559"
}subgraph cluster_26835_Address {
label = "Address"
"26835_verifyCallResultFromTarget" [label="verifyCallResultFromTarget"]
"26835_functionStaticCall" [label="functionStaticCall"]
"26835_functionCallWithValue" [label="functionCallWithValue"]
"26835__revert" [label="_revert"]
"26835_sendValue" [label="sendValue"]
"26835_functionCall" [label="functionCall"]
"26835_verifyCallResult" [label="verifyCallResult"]
"26835_isContract" [label="isContract"]
"26835_functionDelegateCall" [label="functionDelegateCall"]
"26835_functionCallWithValue" -> "26835_verifyCallResultFromTarget"
"26835_verifyCallResultFromTarget" -> "26835_isContract"
"26835_verifyCallResult" -> "26835__revert"
"26835_functionCall" -> "26835_functionCallWithValue"
"26835_functionStaticCall" -> "26835_functionStaticCall"
"26835_verifyCallResultFromTarget" -> "26835__revert"
"26835_functionCallWithValue" -> "26835_functionCallWithValue"
"26835_functionStaticCall" -> "26835_verifyCallResultFromTarget"
"26835_functionDelegateCall" -> "26835_verifyCallResultFromTarget"
"26835_functionDelegateCall" -> "26835_functionDelegateCall"
}subgraph cluster_2006_StdChains {
label = "StdChains"
"2006__toUpper" [label="_toUpper"]
"2006_setChain" [label="setChain"]
"2006_setChainWithDefaultRpcUrl" [label="setChainWithDefaultRpcUrl"]
"2006_getChainWithUpdatedRpcUrl" [label="getChainWithUpdatedRpcUrl"]
"2006_getChain" [label="getChain"]
"2006_initialize" [label="initialize"]
"2006_setChain" -> "2006_setChain"
"2006_setChain" -> "2006_initialize"
"2006_initialize" -> "2006_setChainWithDefaultRpcUrl"
"2006_getChain" -> "2006_getChainWithUpdatedRpcUrl"
"2006_getChain" -> "2006_initialize"
"2006_getChainWithUpdatedRpcUrl" -> "2006__toUpper"
"2006_setChainWithDefaultRpcUrl" -> "2006_setChain"
}subgraph cluster_31577_RocketStorageInterface {
label = "RocketStorageInterface"
"31577_getAddress" [label="getAddress"]
"31577_getNodeWithdrawalAddress" [label="getNodeWithdrawalAddress"]
"31577_getUint" [label="getUint"]
"31577_deleteString" [label="deleteString"]
"31577_getGuardian" [label="getGuardian"]
"31577_confirmGuardian" [label="confirmGuardian"]
"31577_deleteBytes32" [label="deleteBytes32"]
"31577_setString" [label="setString"]
"31577_setUint" [label="setUint"]
"31577_subUint" [label="subUint"]
"31577_addUint" [label="addUint"]
"31577_setAddress" [label="setAddress"]
"31577_deleteBytes" [label="deleteBytes"]
"31577_getNodePendingWithdrawalAddress" [label="getNodePendingWithdrawalAddress"]
"31577_getBool" [label="getBool"]
"31577_deleteAddress" [label="deleteAddress"]
"31577_setInt" [label="setInt"]
"31577_getBytes" [label="getBytes"]
"31577_deleteUint" [label="deleteUint"]
"31577_getBytes32" [label="getBytes32"]
"31577_setBytes32" [label="setBytes32"]
"31577_setWithdrawalAddress" [label="setWithdrawalAddress"]
"31577_getInt" [label="getInt"]
"31577_setBool" [label="setBool"]
"31577_setBytes" [label="setBytes"]
"31577_getString" [label="getString"]
"31577_deleteInt" [label="deleteInt"]
"31577_confirmWithdrawalAddress" [label="confirmWithdrawalAddress"]
"31577_setGuardian" [label="setGuardian"]
"31577_getDeployedStatus" [label="getDeployedStatus"]
"31577_deleteBool" [label="deleteBool"]
}subgraph cluster_32860_BlockscapeValidatorNFTTest {
label = "BlockscapeValidatorNFTTest"
"32860_testCloseValidatorNFT" [label="testCloseValidatorNFT"]
"32860_testDepositWithdrawalMulti" [label="testDepositWithdrawalMulti"]
"32860_testUpdateValidator" [label="testUpdateValidator"]
"32860_testOpenValidatorNFT" [label="testOpenValidatorNFT"]
"32860_testDepositValidatorNFT" [label="testDepositValidatorNFT"]
"32860_testWithdraw" [label="testWithdraw"]
"32860_testSetWithdrawFee" [label="testSetWithdrawFee"]
"32860_testWithdrawBatch" [label="testWithdrawBatch"]
"32860_testChangeETHLimit" [label="testChangeETHLimit"]
"32860_testFallbacks" [label="testFallbacks"]
"32860_setUp" [label="setUp"]
"32860_testSetBlockscapeRocketPoolNode" [label="testSetBlockscapeRocketPoolNode"]
"32860_testUserRequestWithdraw" [label="testUserRequestWithdraw"]
"32860_testDepositWithdrawalMulti" -> "32860__openValidatorNFT"
"32860_testWithdrawBatch" -> "32860__depositSoloStaker"
"32860_testWithdraw" -> "32860_assertEq"
"32860_testCloseValidatorNFT" -> "32860__openValidatorNFT"
"32860_testDepositWithdrawalMulti" -> "32860__stakeRPL"
"32860_testWithdraw" -> "32860__depositSoloStaker"
"32860_testOpenValidatorNFT" -> "32860_assertEq"
"32860_testCloseValidatorNFT" -> "32860__testInitRocketPoolSetup"
"32860_testDepositValidatorNFT" -> "32860__stakeRPL"
"32860_testUpdateValidator" -> "32860__openValidatorNFT"
"32860_testWithdrawBatch" -> "32860_assertEq"
"32860_testCloseValidatorNFT" -> "32860__stakeRPL"
"32860_testOpenValidatorNFT" -> "32860__testContractSetupAfterStaking"
"32860_testChangeETHLimit" -> "32860_assertEq"
"32860_testCloseValidatorNFT" -> "32860__testInitContractSetup"
"32860_testDepositWithdrawalMulti" -> "32860__unstakeRPL"
"32860_testDepositWithdrawalMulti" -> "32860__depositSoloStaker"
"32860_testWithdraw" -> "32860__stakeRPL"
"32860_testUserRequestWithdraw" -> "32860_assertEq"
"32860_testUpdateValidator" -> "32860__stakeRPL"
"32860_testOpenValidatorNFT" -> "32860__testRocketPoolSetupAfterStaking"
"32860_testDepositWithdrawalMulti" -> "32860__warpAfterStakingCooldown"
"32860_testCloseValidatorNFT" -> "32860_assertEq"
"32860_testUserRequestWithdraw" -> "32860__stakeRPL"
"32860_testDepositWithdrawalMulti" -> "32860_assertEq"
"32860_testUpdateValidator" -> "32860__depositSoloStaker"
"32860_testOpenValidatorNFT" -> "32860__testInitContractSetup"
"32860_setUp" -> "32860__setupParticipants"
"32860_testDepositValidatorNFT" -> "32860__depositSoloStaker"
"32860_testOpenValidatorNFT" -> "32860__stakeRPL"
"32860_testDepositValidatorNFT" -> "32860__openValidatorNFT"
"32860_testDepositValidatorNFT" -> "32860_assertEq"
"32860_testWithdrawBatch" -> "32860__stakeRPL"
"32860_testOpenValidatorNFT" -> "32860__testInitRocketPoolSetup"
"32860_testWithdraw" -> "32860__openValidatorNFT"
"32860_testUserRequestWithdraw" -> "32860__depositSoloStaker"
"32860_testUpdateValidator" -> "32860_assertEq"
"32860_testOpenValidatorNFT" -> "32860__openValidatorNFT"
"32860_testWithdrawBatch" -> "32860__openValidatorNFT"
"32860_testUserRequestWithdraw" -> "32860__openValidatorNFT"
}subgraph cluster_4700_stdJson {
label = "stdJson"
"4700_readBytes" [label="readBytes"]
"4700_readBytesArray" [label="readBytesArray"]
"4700_readAddressArray" [label="readAddressArray"]
"4700_parseRaw" [label="parseRaw"]
"4700_write" [label="write"]
"4700_serialize" [label="serialize"]
"4700_readInt" [label="readInt"]
"4700_readString" [label="readString"]
"4700_readStringArray" [label="readStringArray"]
"4700_readAddress" [label="readAddress"]
"4700_readBool" [label="readBool"]
"4700_readIntArray" [label="readIntArray"]
"4700_readBytes32" [label="readBytes32"]
"4700_readUintArray" [label="readUintArray"]
"4700_readUint" [label="readUint"]
"4700_readBoolArray" [label="readBoolArray"]
"4700_readBytes32Array" [label="readBytes32Array"]
}subgraph cluster_26333_IERC1155Receiver {
label = "IERC1155Receiver"
"26333_onERC1155BatchReceived" [label="onERC1155BatchReceived"]
"26333_onERC1155Received" [label="onERC1155Received"]
}subgraph cluster_26857_Context {
label = "Context"
"26857__msgSender" [label="_msgSender"]
"26857__msgData" [label="_msgData"]
}subgraph cluster_4842_stdMath {
label = "stdMath"
"4842_abs" [label="abs"]
"4842_delta" [label="delta"]
"4842_percentDelta" [label="percentDelta"]
"4842_percentDelta" -> "4842_delta"
"4842_delta" -> "4842_delta"
"4842_delta" -> "4842_abs"
"4842_percentDelta" -> "4842_abs"
}subgraph cluster_24947_ReentrancyGuard {
label = "ReentrancyGuard"
"24947__nonReentrantAfter" [label="_nonReentrantAfter"]
"24947_constructor" [label="constructor"]
"24947__reentrancyGuardEntered" [label="_reentrancyGuardEntered"]
"24947__nonReentrantBefore" [label="_nonReentrantBefore"]
}subgraph cluster_33395_HelperContract {
label = "HelperContract"
"33395__unstakeRPL" [label="_unstakeRPL"]
"33395__depositToRocketpool" [label="_depositToRocketpool"]
"33395__warpTimeToDeposit" [label="_warpTimeToDeposit"]
"33395__testContractSetupAfterStaking" [label="_testContractSetupAfterStaking"]
"33395__stakeRPL" [label="_stakeRPL"]
"33395__warpTimeAfterRPLStake" [label="_warpTimeAfterRPLStake"]
"33395__testInitContractSetup" [label="_testInitContractSetup"]
"33395__warpAfterStakingCooldown" [label="_warpAfterStakingCooldown"]
"33395__testInitRocketPoolSetup" [label="_testInitRocketPoolSetup"]
"33395__openVaultDepositAndTestInitSetup" [label="_openVaultDepositAndTestInitSetup"]
"33395__testRocketPoolSetupAfterStaking" [label="_testRocketPoolSetupAfterStaking"]
"33395__openValidatorNFT" [label="_openValidatorNFT"]
"33395__depositSoloStaker" [label="_depositSoloStaker"]
"33395__setupParticipants" [label="_setupParticipants"]
"33395__testInitRocketPoolSetup" -> "33395_assertEq"
"33395__openVaultDepositAndTestInitSetup" -> "33395__openValidatorNFT"
"33395__testInitContractSetup" -> "33395_assertEq"
"33395__openVaultDepositAndTestInitSetup" -> "33395_assertEq"
"33395__depositToRocketpool" -> "33395__warpTimeToDeposit"
"33395__testRocketPoolSetupAfterStaking" -> "33395_assertEq"
"33395__testContractSetupAfterStaking" -> "33395_assertEq"
"33395__stakeRPL" -> "33395__warpTimeAfterRPLStake"
"33395__openVaultDepositAndTestInitSetup" -> "33395__testInitRocketPoolSetup"
"33395__openVaultDepositAndTestInitSetup" -> "33395__testInitContractSetup"
"33395__openVaultDepositAndTestInitSetup" -> "33395__depositSoloStaker"
}subgraph cluster_29813_EthAllocatorScript {
label = "EthAllocatorScript"
"29813_run" [label="run"]
"29813_setUp" [label="setUp"]
}subgraph cluster_26490_ERC1155Supply {
label = "ERC1155Supply"
"26490_totalSupply" [label="totalSupply"]
"26490_exists" [label="exists"]
"26490__beforeTokenTransfer" [label="_beforeTokenTransfer"]
"26490_exists" -> "26490_totalSupply"
"26490__beforeTokenTransfer" -> "26490__beforeTokenTransfer"
}subgraph cluster_8446_Vm {
label = "Vm"
"8446_mockCall" [label="mockCall"]
"8446_difficulty" [label="difficulty"]
"8446_fee" [label="fee"]
"8446_clearMockedCalls" [label="clearMockedCalls"]
"8446_expectRevert" [label="expectRevert"]
"8446_expectCall" [label="expectCall"]
"8446_isPersistent" [label="isPersistent"]
"8446_createSelectFork" [label="createSelectFork"]
"8446_transact" [label="transact"]
"8446_prank" [label="prank"]
"8446_warp" [label="warp"]
"8446_store" [label="store"]
"8446_revertTo" [label="revertTo"]
"8446_revokePersistent" [label="revokePersistent"]
"8446_coinbase" [label="coinbase"]
"8446_setNonce" [label="setNonce"]
"8446_expectEmit" [label="expectEmit"]
"8446_allowCheatcodes" [label="allowCheatcodes"]
"8446_createFork" [label="createFork"]
"8446_chainId" [label="chainId"]
"8446_selectFork" [label="selectFork"]
"8446_snapshot" [label="snapshot"]
"8446_activeFork" [label="activeFork"]
"8446_deal" [label="deal"]
"8446_startPrank" [label="startPrank"]
"8446_makePersistent" [label="makePersistent"]
"8446_stopPrank" [label="stopPrank"]
"8446_roll" [label="roll"]
"8446_rollFork" [label="rollFork"]
"8446_etch" [label="etch"]
}subgraph cluster_16510_console {
label = "console"
"16510__sendLogPayload" [label="_sendLogPayload"]
"16510_logBytes3" [label="logBytes3"]
"16510_logBytes29" [label="logBytes29"]
"16510_logBytes22" [label="logBytes22"]
"16510_logBytes9" [label="logBytes9"]
"16510_logBytes26" [label="logBytes26"]
"16510_logBytes" [label="logBytes"]
"16510_logBytes21" [label="logBytes21"]
"16510_logBytes8" [label="logBytes8"]
"16510_logBytes25" [label="logBytes25"]
"16510_logBytes13" [label="logBytes13"]
"16510_logString" [label="logString"]
"16510_logBool" [label="logBool"]
"16510_logBytes28" [label="logBytes28"]
"16510_logBytes1" [label="logBytes1"]
"16510_logBytes24" [label="logBytes24"]
"16510_logBytes5" [label="logBytes5"]
"16510_logUint" [label="logUint"]
"16510_logBytes2" [label="logBytes2"]
"16510_logBytes23" [label="logBytes23"]
"16510_logBytes10" [label="logBytes10"]
"16510_logBytes6" [label="logBytes6"]
"16510_logBytes4" [label="logBytes4"]
"16510_logBytes30" [label="logBytes30"]
"16510_log" [label="log"]
"16510_logAddress" [label="logAddress"]
"16510_logBytes17" [label="logBytes17"]
"16510_logBytes19" [label="logBytes19"]
"16510_logBytes20" [label="logBytes20"]
"16510_logBytes15" [label="logBytes15"]
"16510_logBytes12" [label="logBytes12"]
"16510_logBytes27" [label="logBytes27"]
"16510_logBytes31" [label="logBytes31"]
"16510_logBytes11" [label="logBytes11"]
"16510_logBytes18" [label="logBytes18"]
"16510_logBytes16" [label="logBytes16"]
"16510_logInt" [label="logInt"]
"16510_logBytes14" [label="logBytes14"]
"16510_logBytes7" [label="logBytes7"]
"16510_logBytes32" [label="logBytes32"]
"16510_logBytes8" -> "16510__sendLogPayload"
"16510_logBool" -> "16510__sendLogPayload"
"16510_logBytes2" -> "16510__sendLogPayload"
"16510_logBytes21" -> "16510__sendLogPayload"
"16510_logBytes6" -> "16510__sendLogPayload"
"16510_logBytes28" -> "16510__sendLogPayload"
"16510_logBytes31" -> "16510__sendLogPayload"
"16510_logBytes" -> "16510__sendLogPayload"
"16510_logString" -> "16510__sendLogPayload"
"16510_logBytes4" -> "16510__sendLogPayload"
"16510_logBytes22" -> "16510__sendLogPayload"
"16510_logBytes23" -> "16510__sendLogPayload"
"16510_logAddress" -> "16510__sendLogPayload"
"16510_log" -> "16510__sendLogPayload"
"16510_logBytes32" -> "16510__sendLogPayload"
"16510_logBytes26" -> "16510__sendLogPayload"
"16510_logBytes30" -> "16510__sendLogPayload"
"16510_logBytes15" -> "16510__sendLogPayload"
"16510_logBytes27" -> "16510__sendLogPayload"
"16510_logBytes7" -> "16510__sendLogPayload"
"16510_logBytes20" -> "16510__sendLogPayload"
"16510_logBytes29" -> "16510__sendLogPayload"
"16510_logBytes10" -> "16510__sendLogPayload"
"16510_logBytes25" -> "16510__sendLogPayload"
"16510_logBytes9" -> "16510__sendLogPayload"
"16510_logBytes5" -> "16510__sendLogPayload"
"16510_logUint" -> "16510__sendLogPayload"
"16510_logBytes19" -> "16510__sendLogPayload"
"16510_logBytes13" -> "16510__sendLogPayload"
"16510_logBytes3" -> "16510__sendLogPayload"
"16510_logBytes16" -> "16510__sendLogPayload"
"16510_logInt" -> "16510__sendLogPayload"
"16510_logBytes11" -> "16510__sendLogPayload"
"16510_logBytes12" -> "16510__sendLogPayload"
"16510_logBytes17" -> "16510__sendLogPayload"
"16510_logBytes18" -> "16510__sendLogPayload"
"16510_logBytes24" -> "16510__sendLogPayload"
"16510_logBytes1" -> "16510__sendLogPayload"
"16510_logBytes14" -> "16510__sendLogPayload"
}subgraph cluster_3967_StdCheats {
label = "StdCheats"
"3967_rewind" [label="rewind"]
"3967_deal" [label="deal"]
"3967_startHoax" [label="startHoax"]
"3967_hoax" [label="hoax"]
"3967_skip" [label="skip"]
"3967_changePrank" [label="changePrank"]
"3967_deal" -> "3967_deal"
}subgraph cluster_solidity {
label = "[Solidity]"
"code(address)" 
"byte(uint256,uint256)" 
"require(bool,string)" 
"revert NotEnoughRPLStake()" 
"revert(string)" 
"type()" 
"mstore8(uint256,uint256)" 
"sload(uint256)" 
"abi.encodePacked()" 
"abi.encodeWithSignature()" 
"abi.encode()" 
"create(uint256,uint256,uint256)" 
"keccak256(bytes)" 
"string.concat()" 
"revert ValidatorAlreadySet(bytes)" 
"sstore(uint256,uint256)" 
"mulmod(uint256,uint256,uint256)" 
"abi.encodeWithSelector()" 
"balance(address)" 
"revert(uint256,uint256)" 
"gas()" 
"staticcall(uint256,uint256,uint256,uint256,uint256,uint256)" 
"chainid()" 
"mload(uint256)" 
"mstore(uint256,uint256)" 
"abi.decode()" 
"16510_logBytes" -> "abi.encodeWithSignature()"
"6307_flatten" -> "mstore(uint256,uint256)"
"16510_logString" -> "abi.encodeWithSignature()"
"7114_hashInitCode" -> "abi.encodePacked()"
"26170__mint" -> "require(bool,string)"
"24606_logBytes9" -> "abi.encodeWithSignature()"
"24947__nonReentrantBefore" -> "require(bool,string)"
"26170_safeTransferFrom" -> "require(bool,string)"
"24606__sendLogPayload" -> "gas()"
"31257_getBalance" -> "balance(address)"
"4700_readBytes32Array" -> "abi.decode()"
"24606_logBytes6" -> "abi.encodeWithSignature()"
"29721_assertEq" -> "abi.encodePacked()"
"5766_find" -> "abi.encodePacked()"
"31257__compareBytes" -> "abi.encodePacked()"
"24606_logBytes18" -> "abi.encodeWithSignature()"
"16510_logBytes29" -> "abi.encodeWithSignature()"
"2006_setChain" -> "require(bool,string)"
"24606_logString" -> "abi.encodeWithSignature()"
"2006_getChain" -> "abi.encodePacked()"
"30531_openValidatorNFT" -> "sstore(uint256,uint256)"
"16510_logBytes16" -> "abi.encodeWithSignature()"
"32860_testWithdraw" -> "balance(address)"
"31257_openValidatorNFT" -> "sload(uint256)"
"16510_logBytes8" -> "abi.encodeWithSignature()"
"16510_logBytes13" -> "abi.encodeWithSignature()"
"4700_readAddress" -> "abi.decode()"
"2006_getChainWithUpdatedRpcUrl" -> "abi.encodePacked()"
"24606_logBytes21" -> "abi.encodeWithSignature()"
"16510_logBytes25" -> "abi.encodeWithSignature()"
"26835_sendValue" -> "balance(address)"
"31257__compareBytes" -> "keccak256(bytes)"
"3578__bytesToUint" -> "abi.decode()"
"2006_setChain" -> "keccak256(bytes)"
"5766_read_address" -> "abi.decode()"
"4700_readBytesArray" -> "abi.decode()"
"3578_readTx1559s" -> "abi.decode()"
"24606_logBytes27" -> "abi.encodeWithSignature()"
"4700_readBoolArray" -> "abi.decode()"
"16510_logBytes17" -> "abi.encodeWithSignature()"
"26170__safeTransferFrom" -> "require(bool,string)"
"7114_console2_log" -> "abi.encodeWithSignature()"
"24606_logBytes28" -> "abi.encodeWithSignature()"
"30531_openValidatorNFT" -> "sload(uint256)"
"24606_logBytes1" -> "abi.encodeWithSignature()"
"31257_tryDepositValidatorNFT" -> "sstore(uint256,uint256)"
"31257_tryWithdrawBatch" -> "sload(uint256)"
"16510_logBytes12" -> "abi.encodeWithSignature()"
"6307_checked_write" -> "keccak256(bytes)"
"7114_getTokenBalances" -> "require(bool,string)"
"24882__checkOwner" -> "require(bool,string)"
"7114_bound" -> "require(bool,string)"
"7114_getTokenBalances" -> "abi.decode()"
"26835_verifyCallResultFromTarget" -> "require(bool,string)"
"26170__doSafeTransferAcceptanceCheck" -> "revert(string)"
"7114_getTokenBalances" -> "abi.encodeWithSelector()"
"4700_readUintArray" -> "abi.decode()"
"7114_bytesToUint" -> "abi.encodePacked()"
"30531__compareBytes" -> "abi.encodePacked()"
"16510_logBytes2" -> "abi.encodeWithSignature()"
"16510_logBytes7" -> "abi.encodeWithSignature()"
"3578_readTx1559" -> "abi.decode()"
"16510_logBytes4" -> "abi.encodeWithSignature()"
"24606_logUint" -> "abi.encodeWithSignature()"
"24606_logBytes22" -> "abi.encodeWithSignature()"
"16510_logBytes31" -> "abi.encodeWithSignature()"
"16510_logBool" -> "abi.encodeWithSignature()"
"31257_tryDepositValidatorNFT" -> "sload(uint256)"
"24606_logBytes20" -> "abi.encodeWithSignature()"
"30531__compareBytes" -> "keccak256(bytes)"
"16510_logInt" -> "abi.encodeWithSignature()"
"24606__sendLogPayload" -> "staticcall(uint256,uint256,uint256,uint256,uint256,uint256)"
"16510_logUint" -> "abi.encodeWithSignature()"
"16510_logBytes15" -> "abi.encodeWithSignature()"
"31257_tryDepositValidatorNFT" -> "require(bool,string)"
"26170_safeBatchTransferFrom" -> "require(bool,string)"
"30531_depositValidatorNFT" -> "sstore(uint256,uint256)"
"26835__revert" -> "revert(string)"
"24606_logBytes" -> "abi.encodeWithSignature()"
"16510_logBytes10" -> "abi.encodeWithSignature()"
"24606_logBytes8" -> "abi.encodeWithSignature()"
"3578_makeAddrAndKey" -> "keccak256(bytes)"
"24606_logBytes23" -> "abi.encodeWithSignature()"
"7114_bytesToUint" -> "abi.decode()"
"24606_logBytes26" -> "abi.encodeWithSignature()"
"30531_depositValidatorNFT" -> "require(bool,string)"
"4700_readAddressArray" -> "abi.decode()"
"16510_logBytes18" -> "abi.encodeWithSignature()"
"5766_flatten" -> "mstore(uint256,uint256)"
"24606_logBytes15" -> "abi.encodeWithSignature()"
"26835_functionCallWithValue" -> "balance(address)"
"4700_readBytes32" -> "abi.decode()"
"30531_openValidatorNFT" -> "revert(uint256,uint256)"
"7114_bytesToUint" -> "require(bool,string)"
"3578_deployCode" -> "create(uint256,uint256,uint256)"
"30531_depositValidatorNFT" -> "sload(uint256)"
"3578_deployCode" -> "mload(uint256)"
"2006_getChainWithUpdatedRpcUrl" -> "mload(uint256)"
"31257_openValidatorNFT" -> "sstore(uint256,uint256)"
"16510_logBytes27" -> "abi.encodeWithSignature()"
"7114_computeCreate2Address" -> "abi.encodePacked()"
"26170__safeBatchTransferFrom" -> "require(bool,string)"
"3578_assumeNoPrecompiles" -> "chainid()"
"24606_logBytes29" -> "abi.encodeWithSignature()"
"3578_readReceipts" -> "abi.decode()"
"31257__closeValidatorNFTInternal" -> "sstore(uint256,uint256)"
"26170_balanceOfBatch" -> "require(bool,string)"
"16510_logBytes11" -> "abi.encodeWithSignature()"
"16510_logBytes1" -> "abi.encodeWithSignature()"
"30531_withdrawBatch" -> "sload(uint256)"
"26170__burnBatch" -> "require(bool,string)"
"29721_fail" -> "keccak256(bytes)"
"2006_getChainWithUpdatedRpcUrl" -> "abi.encodeWithSignature()"
"24606_logBytes24" -> "abi.encodeWithSignature()"
"24606_logBytes7" -> "abi.encodeWithSignature()"
"26835_isContract" -> "code(address)"
"31257_updateValidator" -> "revert ValidatorAlreadySet(bytes)"
"5766_read" -> "abi.encode()"
"29721_fail" -> "abi.encode()"
"5766_read_bytes32" -> "abi.decode()"
"16510_logBytes26" -> "abi.encodeWithSignature()"
"29721_failed" -> "keccak256(bytes)"
"16510_logBytes14" -> "abi.encodeWithSignature()"
"5766_find" -> "keccak256(bytes)"
"24606_logBytes12" -> "abi.encodeWithSignature()"
"29721_failed" -> "abi.decode()"
"27032_toString" -> "byte(uint256,uint256)"
"3578__bytesToUint" -> "require(bool,string)"
"29721_assertEq" -> "keccak256(bytes)"
"16510_logBytes5" -> "abi.encodeWithSignature()"
"7114__bound" -> "require(bool,string)"
"4700_readBool" -> "abi.decode()"
"24606_log" -> "abi.encodeWithSignature()"
"5766_find" -> "revert(string)"
"2006_getChainWithUpdatedRpcUrl" -> "keccak256(bytes)"
"26835_functionCallWithValue" -> "require(bool,string)"
"31257_uri" -> "string.concat()"
"16510_log" -> "abi.encodeWithSignature()"
"16510_logBytes23" -> "abi.encodeWithSignature()"
"3967_deal" -> "abi.encodeWithSelector()"
"29721_fail" -> "abi.encodePacked()"
"7114_computeCreateAddress" -> "keccak256(bytes)"
"24606_logBool" -> "abi.encodeWithSignature()"
"26170__doSafeBatchTransferAcceptanceCheck" -> "revert(string)"
"30531_uri" -> "string.concat()"
"3578_readEIP1559ScriptArtifact" -> "abi.decode()"
"16510__sendLogPayload" -> "staticcall(uint256,uint256,uint256,uint256,uint256,uint256)"
"4700_readString" -> "abi.decode()"
"24606_logBytes10" -> "abi.encodeWithSignature()"
"16510_logBytes20" -> "abi.encodeWithSignature()"
"6307_checked_write" -> "require(bool,string)"
"16510_logAddress" -> "abi.encodeWithSignature()"
"30531__closeValidatorNFTInternal" -> "sstore(uint256,uint256)"
"26170_balanceOf" -> "require(bool,string)"
"5766_sigs" -> "keccak256(bytes)"
"4700_readUint" -> "abi.decode()"
"24606_logBytes14" -> "abi.encodeWithSignature()"
"24882_transferOwnership" -> "require(bool,string)"
"24606_logBytes4" -> "abi.encodeWithSignature()"
"24606_logBytes3" -> "abi.encodeWithSignature()"
"16510_logBytes30" -> "abi.encodeWithSignature()"
"31257_closeValidatorNFT" -> "sstore(uint256,uint256)"
"1342_assertEq" -> "abi.encode()"
"26170__mintBatch" -> "require(bool,string)"
"16510_logBytes28" -> "abi.encodeWithSignature()"
"2006_getChainWithUpdatedRpcUrl" -> "revert(uint256,uint256)"
"5766_read_int" -> "abi.decode()"
"24606_logBytes31" -> "abi.encodeWithSignature()"
"3578_readReceipt" -> "abi.encodePacked()"
"24606_logBytes16" -> "abi.encodeWithSignature()"
"5766_read_uint" -> "abi.decode()"
"26170__burn" -> "require(bool,string)"
"3578_readReceipt" -> "abi.decode()"
"16510_logBytes19" -> "abi.encodeWithSignature()"
"32860_testUpdateValidator" -> "abi.encodePacked()"
"24606_logBytes2" -> "abi.encodeWithSignature()"
"1342_assertEq" -> "keccak256(bytes)"
"7114_computeCreateAddress" -> "abi.encodePacked()"
"24606_logBytes19" -> "abi.encodeWithSignature()"
"24606_logAddress" -> "abi.encodeWithSignature()"
"24606_logBytes13" -> "abi.encodeWithSignature()"
"29721_failed" -> "abi.encodePacked()"
"2006_setChain" -> "abi.encodePacked()"
"24606_logBytes11" -> "abi.encodeWithSignature()"
"31257_openValidatorNFT" -> "revert(uint256,uint256)"
"4700_readInt" -> "abi.decode()"
"24606_logBytes17" -> "abi.encodeWithSignature()"
"26835_sendValue" -> "require(bool,string)"
"27032_toHexString" -> "require(bool,string)"
"3967_deal" -> "abi.decode()"
"16510_logBytes6" -> "abi.encodeWithSignature()"
"4700_readStringArray" -> "abi.decode()"
"29721_failed" -> "abi.encode()"
"24606_logBytes30" -> "abi.encodeWithSignature()"
"26170_supportsInterface" -> "type()"
"7114_hashInitCode" -> "keccak256(bytes)"
"31257_tryWithdrawBatch" -> "revert(uint256,uint256)"
"24606_logBytes5" -> "abi.encodeWithSignature()"
"30531_openValidatorNFT" -> "revert NotEnoughRPLStake()"
"27032_toString" -> "mstore8(uint256,uint256)"
"5766_find" -> "require(bool,string)"
"16510_logBytes9" -> "abi.encodeWithSignature()"
"5766_read_bool" -> "revert(string)"
"27056_supportsInterface" -> "type()"
"16510_logBytes3" -> "abi.encodeWithSignature()"
"24606_logInt" -> "abi.encodeWithSignature()"
"6307_checked_write" -> "abi.encodePacked()"
"7114_computeCreate2Address" -> "keccak256(bytes)"
"3578_readTx1559" -> "abi.encodePacked()"
"4700_readIntArray" -> "abi.decode()"
"2006_getChain" -> "require(bool,string)"
"16510__sendLogPayload" -> "gas()"
"3578_deployCode" -> "abi.encodePacked()"
"16510_logBytes24" -> "abi.encodeWithSignature()"
"26835__revert" -> "mload(uint256)"
"30531_getBalance" -> "balance(address)"
"16510_logBytes32" -> "abi.encodeWithSignature()"
"24606_logBytes25" -> "abi.encodeWithSignature()"
"26835__revert" -> "revert(uint256,uint256)"
"24606_logBytes32" -> "abi.encodeWithSignature()"
"26490__beforeTokenTransfer" -> "require(bool,string)"
"27934_mulDiv" -> "require(bool,string)"
"30531_withdrawBatch" -> "revert(uint256,uint256)"
"3578__bytesToUint" -> "abi.encodePacked()"
"27934_mulDiv" -> "mulmod(uint256,uint256,uint256)"
"30531_updateValidator" -> "revert ValidatorAlreadySet(bytes)"
"4700_readBytes" -> "abi.decode()"
"16510_logBytes21" -> "abi.encodeWithSignature()"
"16510_logBytes22" -> "abi.encodeWithSignature()"
"3578_deployCode" -> "require(bool,string)"
"30531_depositValidatorNFT" -> "revert(uint256,uint256)"
"26170__setApprovalForAll" -> "require(bool,string)"
"3578_makeAddrAndKey" -> "abi.encodePacked()"
"30531_closeValidatorNFT" -> "sstore(uint256,uint256)"
}"33395__stakeRPL" -> "8446_startPrank"
"33395__testInitContractSetup" -> "30531_getReqRPLStake"
"32860_testDepositValidatorNFT" -> "8446_prank"
"33395__stakeRPL" -> "31577_setWithdrawalAddress"
"31257_getReqRPLStake" -> "31381_getNodeMinimumRPLStake"
"33395__warpTimeToDeposit" -> "8446_roll"
"33395__setupParticipants" -> "8446_prank"
"4700_readBool" -> "8121_parseJson"
"32860_testFallbacks" -> "8446_prank"
"33395__unstakeRPL" -> "31381_withdrawRPL"
"32860_testUserRequestWithdraw" -> "8446_startPrank"
"32860_testDepositValidatorNFT" -> "30531_totalSupply"
"32860_testSetBlockscapeRocketPoolNode" -> "8446_prank"
"33395__setupParticipants" -> "8446_addr"
"32860_testDepositValidatorNFT" -> "30531_getTokenID"
"30531_getReqRPLStake" -> "31381_getNodeMinimumRPLStake"
"32860_testSetWithdrawFee" -> "8446_expectRevert"
"5766_find" -> "8446_load"
"4700_readBytesArray" -> "8121_parseJson"
"31257_hasNodeEnoughRPLStake" -> "31381_getNodeRPLStake"
"32860_testDepositValidatorNFT" -> "30531_isVaultOpen"
"3967_hoax" -> "8446_deal"
"31257_totalSupply" -> "31257_getTokenID"
"32860_testUpdateValidator" -> "8446_prank"
"33395__testInitContractSetup" -> "30531_getBalance"
"6307_find" -> "5766_find"
"6307_read_address" -> "5766_read_address"
"32860_testWithdrawBatch" -> "8446_startPrank"
"3967_deal" -> "6307_target"
"4700_readBytes32Array" -> "8121_parseJson"
"31257_hasNodeEnoughRPLStake" -> "31381_getNodeMinipoolLimit"
"33395__stakeRPL" -> "8446_stopPrank"
"3578_assumePayable" -> "8446_assume"
"33395__testInitRocketPoolSetup" -> "30531_getAvailableRPLStake"
"1342_assertApproxEqAbsDecimal" -> "4842_delta"
"3967_startHoax" -> "8446_deal"
"32860_testOpenValidatorNFT" -> "30531_isVaultOpen"
"3967_deal" -> "6307_checked_write"
"29813_run" -> "30531_openValidatorNFT"
"4700_readIntArray" -> "8121_parseJson"
"4700_readBytes" -> "8121_parseJson"
"32860_testDepositWithdrawalMulti" -> "30531_totalSupply"
"3578_readReceipt" -> "8446_toString"
"30531_totalSupply" -> "30531_totalSupply"
"3967_hoax" -> "8446_prank"
"33395__openValidatorNFT" -> "8446_prank"
"26170__doSafeBatchTransferAcceptanceCheck" -> "26333_onERC1155BatchReceived"
"32860_testFallbacks" -> "8446_expectRevert"
"26170__doSafeBatchTransferAcceptanceCheck" -> "26835_isContract"
"3967_deal" -> "6307_sig"
"30531_getReqRPLStake" -> "31381_getNodeMinipoolLimit"
"33395__testContractSetupAfterStaking" -> "30531_getBalance"
"32860_testDepositValidatorNFT" -> "30531_contractURI"
"5766_find" -> "8446_record"
"33395__testContractSetupAfterStaking" -> "30531_getReqRPLStake"
"30531_getAvailableRPLStake" -> "31381_getNodeRPLStake"
"6307_read_int" -> "5766_read_int"
"33395__testInitRocketPoolSetup" -> "31381_getNodeMinipoolLimit"
"32860_testDepositWithdrawalMulti" -> "30531_withdrawBatch"
"32860_testWithdrawBatch" -> "30531_getAvailableRPLStake"
"32860_testSetWithdrawFee" -> "30531_setWithdrawFee"
"32860_testWithdrawBatch" -> "30531_updateValidator"
"32860_testUpdateValidator" -> "30531_updateValidator"
"32860_testDepositWithdrawalMulti" -> "30531_depositValidatorNFT"
"32860_testDepositWithdrawalMulti" -> "30531_getAvailableRPLStake"
"2006_getChain" -> "8121_toString"
"32860_testChangeETHLimit" -> "8446_expectRevert"
"33395__testContractSetupAfterStaking" -> "30531_getCurrentEthLimit"
"4700_readAddressArray" -> "8121_parseJson"
"1342_assertApproxEqRelDecimal" -> "4842_percentDelta"
"3967_deal" -> "8446_deal"
"2006_getChainWithUpdatedRpcUrl" -> "8121_envOr"
"32860_testWithdraw" -> "30531_withdraw"
"3578_makeAddrAndKey" -> "8446_label"
"33395__depositToRocketpool" -> "8446_prank"
"3578_readEIP1559ScriptArtifact" -> "8446_readFile"
"32860_testDepositWithdrawalMulti" -> "30531_getBalance"
"3578_deriveRememberKey" -> "8446_rememberKey"
"4700_readString" -> "8121_parseJson"
"6307_read_bool" -> "5766_read_bool"
"33395__depositToRocketpool" -> "31291_deposit"
"32860_testDepositWithdrawalMulti" -> "16510_log"
"33395__testRocketPoolSetupAfterStaking" -> "30531_getAvailableRPLStake"
"32860_testWithdrawBatch" -> "30531_withdrawBatch"
"1342_assertApproxEqRel" -> "4842_percentDelta"
"33395__testRocketPoolSetupAfterStaking" -> "31381_getNodeMinimumRPLStake"
"32860_testOpenValidatorNFT" -> "8446_expectRevert"
"4700_serialize" -> "8121_serializeString"
"1342_assertApproxEqAbs" -> "4842_delta"
"32860_testCloseValidatorNFT" -> "8446_prank"
"27032_toHexString" -> "27934_log256"
"3578_readTx1559" -> "8446_readFile"
"4700_readStringArray" -> "8121_parseJson"
"3578_isFork" -> "8446_activeFork"
"32860_testUpdateValidator" -> "30531_getMetadata"
"32860_testWithdraw" -> "30531_getBalance"
"32860_testChangeETHLimit" -> "30531_changeETHLimit"
"33395__testContractSetupAfterStaking" -> "30531_isVaultOpen"
"4700_readBytes32" -> "8121_parseJson"
"6307_checked_write" -> "8446_load"
"29813_run" -> "8446_stopBroadcast"
"27032_toString" -> "27934_log10"
"33395__testInitContractSetup" -> "30531_getCurrentEthLimit"
"32860_testDepositValidatorNFT" -> "30531_depositValidatorNFT"
"4700_readInt" -> "8121_parseJson"
"32860_testChangeETHLimit" -> "30531_getCurrentEthLimit"
"32860_testCloseValidatorNFT" -> "8446_expectRevert"
"32860_testDepositWithdrawalMulti" -> "30531_isVaultOpen"
"33395__testRocketPoolSetupAfterStaking" -> "30531_getReqRPLStake"
"32860_testDepositWithdrawalMulti" -> "8446_expectRevert"
"6307_sigs" -> "5766_sigs"
"32860_testDepositWithdrawalMulti" -> "30531_updateValidator"
"3578_readReceipt" -> "8446_parseJson"
"33395__stakeRPL" -> "31381_stakeRPL"
"4700_serialize" -> "8121_serializeAddress"
"33395__testInitContractSetup" -> "30531_isVaultOpen"
"32860_testCloseValidatorNFT" -> "30531_isVaultOpen"
"30531_hasNodeEnoughRPLStake" -> "31381_getNodeMinipoolLimit"
"32860_testDepositWithdrawalMulti" -> "8446_startPrank"
"4700_write" -> "8121_writeJson"
"32860_testDepositValidatorNFT" -> "8446_expectRevert"
"32860_testWithdrawBatch" -> "8446_prank"
"33395__warpTimeAfterRPLStake" -> "8446_warp"
"3967_changePrank" -> "8446_stopPrank"
"3967_deal" -> "6307_with_key"
"32860_testDepositWithdrawalMulti" -> "8446_prank"
"32860_testWithdraw" -> "8446_prank"
"33395__testRocketPoolSetupAfterStaking" -> "31381_getNodeMinipoolLimit"
"4700_serialize" -> "8121_serializeUint"
"33395__testInitRocketPoolSetup" -> "30531_getReqRPLStake"
"4700_readUintArray" -> "8121_parseJson"
"30531_totalSupply" -> "30531_getTokenID"
"3578_deployCode" -> "8446_getCode"
"32860_testDepositValidatorNFT" -> "30531_uri"
"3578_readEIP1559ScriptArtifact" -> "8446_parseJson"
"33395__warpTimeAfterRPLStake" -> "8446_roll"
"32860_testDepositValidatorNFT" -> "30531_getMetadata"
"3578_readReceipts" -> "8446_readFile"
"32860_testWithdrawBatch" -> "8446_expectRevert"
"32860_testDepositWithdrawalMulti" -> "8446_stopPrank"
"3578_readTx1559s" -> "8446_parseJson"
"26170__doSafeTransferAcceptanceCheck" -> "26835_isContract"
"4700_serialize" -> "8121_serializeInt"
"4700_readUint" -> "8121_parseJson"
"32860_testDepositWithdrawalMulti" -> "30531_getTokenID"
"3578_makeAddrAndKey" -> "8446_addr"
"3578_readReceipt" -> "8446_readFile"
"3578_readTx1559s" -> "8446_readFile"
"33395__setupParticipants" -> "8446_label"
"4700_serialize" -> "8121_serializeBytes"
"31257_uri" -> "27032_toString"
"6307_read_bytes32" -> "5766_read_bytes32"
"4700_parseRaw" -> "8121_parseJson"
"6307_with_key" -> "5766_with_key"
"4700_readAddress" -> "8121_parseJson"
"33395__warpAfterStakingCooldown" -> "8446_warp"
"32860_testDepositWithdrawalMulti" -> "30531_getReqRPLStake"
"4700_readBoolArray" -> "8121_parseJson"
"3578_readTx1559" -> "8446_parseJson"
"6307_read_uint" -> "5766_read_uint"
"3578_readTx1559" -> "8446_toString"
"2006_setChain" -> "8121_toString"
"3967_rewind" -> "8446_warp"
"30531_uri" -> "27032_toString"
"7114_bound" -> "8121_toString"
"3578_readReceipts" -> "8446_parseJson"
"32860_testWithdrawBatch" -> "30531_isVaultOpen"
"32860_testSetWithdrawFee" -> "8446_prank"
"33395__testInitRocketPoolSetup" -> "31381_getNodeMinimumRPLStake"
"5766_find" -> "8446_store"
"32860_testUpdateValidator" -> "8446_expectRevert"
"29813_run" -> "8446_startBroadcast"
"33395__depositSoloStaker" -> "30531_depositValidatorNFT"
"6307_depth" -> "5766_depth"
"32860_testOpenValidatorNFT" -> "30531_openValidatorNFT"
"3967_skip" -> "8446_warp"
"32860_testUserRequestWithdraw" -> "8446_stopPrank"
"4700_serialize" -> "8121_serializeBool"
"33395__depositSoloStaker" -> "8446_prank"
"31257_getReqRPLStake" -> "31381_getNodeMinipoolLimit"
"4700_serialize" -> "8121_serializeBytes32"
"32860_testWithdrawBatch" -> "8446_stopPrank"
"33395__openVaultDepositAndTestInitSetup" -> "30531_getBalance"
"6307_sig" -> "5766_sig"
"32860_testWithdraw" -> "8446_expectRevert"
"6307_target" -> "5766_target"
"33395__setupParticipants" -> "8446_deal"
"33395__warpTimeToDeposit" -> "8446_warp"
"3578_deriveRememberKey" -> "8446_deriveKey"
"2006_getChainWithUpdatedRpcUrl" -> "8121_rpcUrl"
"31257_totalSupply" -> "31257_totalSupply"
"32860_testWithdrawBatch" -> "30531_getBalance"
"26170__doSafeTransferAcceptanceCheck" -> "26333_onERC1155Received"
"3967_startHoax" -> "8446_startPrank"
"31257_getAvailableRPLStake" -> "31381_getNodeRPLStake"
"32860_testUserRequestWithdraw" -> "30531_userRequestWithdraw"
"33395__openVaultDepositAndTestInitSetup" -> "30531_isVaultOpen"
"32860_testSetBlockscapeRocketPoolNode" -> "8446_expectRevert"
"32860_testSetBlockscapeRocketPoolNode" -> "30531_setBlockscapeRocketPoolNode"
"32860_testUserRequestWithdraw" -> "30531_viewUserRequestWithdraw"
"3578_assumeNoPrecompiles" -> "8446_assume"
"33395__openValidatorNFT" -> "30531_openValidatorNFT"
"32860_testCloseValidatorNFT" -> "30531_closeValidatorNFT"
"7114_getTokenBalances" -> "24769_aggregate"
"32860_testChangeETHLimit" -> "8446_prank"
"30531_hasNodeEnoughRPLStake" -> "31381_getNodeRPLStake"
"5766_read" -> "8446_load"
"32860_testOpenValidatorNFT" -> "8446_prank"
"3967_changePrank" -> "8446_startPrank"
"6307_checked_write" -> "8446_store"
"32860_testUserRequestWithdraw" -> "8446_warp"
"5766_find" -> "8446_accesses"
}